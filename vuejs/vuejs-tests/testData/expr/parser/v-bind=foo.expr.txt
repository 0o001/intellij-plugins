JSFile:test.js.v-bind:foo.expr
  VueJSEmbeddedExpression
    JSBinaryExpression
      JSLiteralExpression
        PsiElement(JS:NUMERIC_LITERAL)('0')
      PsiElement(JS:ANDAND)('&&')
      JSLiteralExpression
        PsiElement(JS:NUMERIC_LITERAL)('2')
------
JSFile:test.js.v-bind:foo.expr
  VueJSEmbeddedExpression
    JSBinaryExpression
      JSLiteralExpression
        PsiElement(JS:NUMERIC_LITERAL)('0')
      PsiElement(JS:OROR)('||')
      JSLiteralExpression
        PsiElement(JS:NUMERIC_LITERAL)('2')
------
JSFile:test.js.v-bind:foo.expr
  VueJSEmbeddedExpression
    JSBinaryExpression
      JSLiteralExpression
        PsiElement(JS:NUMERIC_LITERAL)('0')
      PsiElement(JS:OROR)('||')
      JSBinaryExpression
        JSLiteralExpression
          PsiElement(JS:NUMERIC_LITERAL)('1')
        PsiElement(JS:ANDAND)('&&')
        JSLiteralExpression
          PsiElement(JS:NUMERIC_LITERAL)('2')
------
JSFile:test.js.v-bind:foo.expr
  VueJSEmbeddedExpression
    PsiErrorElement:expression expected
      <empty list>
------
JSFile:test.js.v-bind:foo.expr
  VueJSEmbeddedExpression
    JSReferenceExpression
      PsiElement(JS:IDENTIFIER)('a')
    PsiErrorElement:Expected end of expression
      <empty list>
    PsiWhiteSpace(' ')
    JSReferenceExpression
      PsiElement(JS:IDENTIFIER)('b')
    PsiErrorElement:Expected end of expression
      <empty list>
    PsiWhiteSpace(' ')
    JSReferenceExpression
      PsiElement(JS:IDENTIFIER)('c')
------
JSFile:test.js.v-bind:foo.expr
  VueJSEmbeddedExpression
    JSLiteralExpression
      PsiElement(JS:NUMERIC_LITERAL)('12')
    PsiErrorElement:Statements are not allowed in Vue expressions
      PsiElement(JS:SEMICOLON)(';')
    PsiWhiteSpace(' ')
    PsiErrorElement:expression expected
      PsiElement(JS:LT)('<')
    PsiWhiteSpace(' ')
    PsiErrorElement:Statements are not allowed in Vue expressions
      PsiElement(JS:SEMICOLON)(';')
    PsiWhiteSpace(' ')
    JSReferenceExpression
      PsiElement(JS:IDENTIFIER)('SDF')
    PsiWhiteSpace(' ')
    PsiErrorElement:Statements are not allowed in Vue expressions
      PsiElement(JS:SEMICOLON)(';')
    PsiWhiteSpace(' ')
    JSReferenceExpression
      PsiElement(JS:IDENTIFIER)('CV')
    PsiErrorElement:Expected end of expression
      <empty list>
    JSAttributeList
      ES6Decorator
        PsiElement(JS:AT)('@')
    PsiErrorElement:class expected
      <empty list>
    PsiElement(JS:SHARP)('#')
------
JSFile:test.js.v-bind:foo.expr
  VueJSEmbeddedExpression
    JSBinaryExpression
      JSReferenceExpression
        PsiElement(JS:IDENTIFIER)('a')
      PsiWhiteSpace(' ')
      PsiElement(JS:ANDAND)('&&')
      PsiWhiteSpace(' ')
      JSBinaryExpression
        JSReferenceExpression
          PsiElement(JS:IDENTIFIER)('b')
        PsiWhiteSpace(' ')
        PsiElement(JS:PLUS)('+')
        PsiWhiteSpace(' ')
        JSReferenceExpression
          JSObjectLiteralExpression
            PsiElement(JS:LBRACE)('{')
            JSProperty
              PsiElement(JS:IDENTIFIER)('a')
              PsiElement(JS:COLON)(':')
              PsiWhiteSpace(' ')
              JSLiteralExpression
                PsiElement(JS:NUMERIC_LITERAL)('12')
            PsiElement(JS:RBRACE)('}')
          PsiElement(JS:DOT)('.')
          PsiElement(JS:IDENTIFIER)('a')
------
JSFile:test.js.v-bind:foo.expr
  VueJSEmbeddedExpression
    PsiErrorElement:expression expected
      PsiElement(JS:SHARP)('#')
------
JSFile:test.js.v-bind:foo.expr
  VueJSEmbeddedExpression
    PsiErrorElement:expression expected
      PsiElement(JS:SHARP)('#')
    PsiErrorElement:expression expected
      PsiElement(JS:SHARP)('#')
------
JSFile:test.js.v-bind:foo.expr
  VueJSEmbeddedExpression
    PsiErrorElement:expression expected
      PsiElement(JS:SHARP)('#')
    PsiErrorElement:expression expected
      PsiElement(JS:SHARP)('#')
    PsiErrorElement:expression expected
      PsiElement(JS:SHARP)('#')
