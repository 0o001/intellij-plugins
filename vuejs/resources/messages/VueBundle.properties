vue.create.single.file.component.action.text=Vue Component
vue.create.single.file.component.action.description=Creates Vue component file

vue.documentation.vue=Vue
vue.documentation.section.library=Library:
# vue.documentation.section.* properties are used indirectly
vue.documentation.section.argument=Argument:
vue.documentation.section.required=Required
vue.documentation.section.pattern=Pattern:
vue.documentation.section.default=Default:

# vue.documentation.type.* properties are used indirectly
vue.documentation.type.functional.component=functional component
vue.documentation.type.component=component
vue.documentation.type.directive=directive
vue.documentation.type.filter=filter
vue.documentation.type.component.method=component method
vue.documentation.type.component.event=component event
vue.documentation.type.slot=slot
vue.documentation.type.component.property=component property
vue.documentation.type.component.computed.property=component computed property
vue.documentation.type.component.data.property=component data property
vue.documentation.type.directive.modifier=directive modifier
vue.documentation.type.directive.argument=directive argument

vue.file.type.name=Vue.js
vue.file.type.description=Vue.js template

vue.inspection.message.attribute.does.not.accept.value={0} does not accept any value
vue.inspection.message.data.property.should.be.function=Data property should be a function
vue.inspection.message.duplicate.tag=Duplicated top-level tag ${tag.name}
vue.inspection.message.filter.function.with.no.args=Filter function should accept at least one argument
vue.inspection.message.filter.invalid.number.of.arguments=Invalid number of filter arguments, expected {0}
vue.inspection.message.unresolved.filter=Unresolved filter {0}

vue.live.template.context.component=Vue component
vue.live.template.context.script.tag=Vue script tag contents
vue.live.template.context.template=Vue template
vue.live.template.context.template.tag.element=Vue template tag element
vue.live.template.context.top.level=Vue top-level

vue.parser.message.expected.in.or.of='in' or 'of' expected
vue.parser.message.expected.slot.props.var=Slot props variable declaration expected
vue.parser.message.expected.end.of.expression=Expected end of expression
vue.parser.message.expected.identifier.or.string=Expected identifier or string
vue.parser.message.expected.pipe.or.end.of.expression=Expected | or end of expression
vue.parser.message.expected.lparen.pipe.or.end.of.expression=Expected (, | or end of expression
vue.parser.message.statements.not.allowed=Statements are not allowed in Vue expressions
vue.parser.message.unexpected.tokens.slot.props.var=Unexpected tokens in slot props variable declaration
vue.parser.message.unterminated.interpolation=Unterminated interpolation

vue.project.generator.name=Vue.js
vue.project.generator.description=Create a new <a href='https://vuejs.org'>Vue.js</a> project using <a href='https://cli.vuejs.org'>Vue CLI</a>.
vue.project.generator.presentable.package.name=Vue &CLI
vue.project.generator.use.default.project.setup=Use the &default project setup (babel, eslint)

vue.quickfix.delete.tag.family=Remove tag
vue.quickfix.delete.tag.text=Remove {0} tag
vue.quickfix.wrap.with.function.text=Wrap data object in function
vue.quickfix.wrap.with.function.family=Wrap object

vue.template.intention.extract.component=Extract Vue Component
vue.template.intention.extract.component.family.name=Extract Vue Component
vue.template.intention.extract.component.description=Extracts selected template part or current tag into a new single file component
vue.template.intention.extract.component.error.component.name=Invalid component name: {0}
vue.template.intention.extract.component.error.component.exists=Component {0} already exists
vue.template.intention.extract.component.error.file.exists=File {0} already exists

vuex.inspection.message.unresolved.namespace=Unknown module namespace {0}
