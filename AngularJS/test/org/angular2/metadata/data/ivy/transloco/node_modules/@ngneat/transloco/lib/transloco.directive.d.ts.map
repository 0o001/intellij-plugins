{"version":3,"file":"transloco.directive.d.ts","sources":["/Users/piotr.tomiak/WebstormProjects/ng9rc/node_modules/@ngneat/transloco/lib/transloco.directive.d.ts"],"sourcesContent":["import { ChangeDetectorRef, ElementRef, EmbeddedViewRef, OnChanges, OnDestroy, OnInit, TemplateRef, Type, ViewContainerRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { TranslocoService } from './transloco.service';\nimport { HashMap, TranslocoScope } from './types';\nexport declare class TranslocoDirective implements OnInit, OnDestroy, OnChanges {\n    private translocoService;\n    private tpl;\n    private providerScope;\n    private providerLang;\n    private providedLoadingTpl;\n    private vcr;\n    private cdr;\n    private host;\n    subscription: Subscription | null;\n    view: EmbeddedViewRef<any>;\n    private translationMemo;\n    key: string;\n    params: HashMap;\n    inlineScope: string | undefined;\n    inlineRead: string | undefined;\n    inlineLang: string | undefined;\n    inlineTpl: TemplateRef<any> | undefined;\n    private currentLang;\n    private loaderTplHandler;\n    private initialized;\n    private path;\n    private langResolver;\n    private scopeResolver;\n    constructor(translocoService: TranslocoService, tpl: TemplateRef<{\n        $implicit: (key: string, params?: HashMap) => any;\n    }>, providerScope: TranslocoScope, providerLang: string | null, providedLoadingTpl: Type<any> | string, vcr: ViewContainerRef, cdr: ChangeDetectorRef, host: ElementRef);\n    ngOnInit(): void;\n    ngOnChanges(changes: any): void;\n    private simpleStrategy;\n    private structuralStrategy;\n    private getTranslateFn;\n    private getLoadingTpl;\n    ngOnDestroy(): void;\n    private detachLoader;\n}\n"],"names":[],"mappings":"AAAA;;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;"}