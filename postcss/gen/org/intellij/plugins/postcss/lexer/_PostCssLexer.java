/* The following code was generated by JFlex 1.7.0-SNAPSHOT tweaked for IntelliJ platform */

 /* It's an automatically generated code. Do not modify it. */
package org.intellij.plugins.postcss.lexer;
import com.intellij.psi.css.impl.*;
import com.intellij.lexer.*;
import com.intellij.psi.tree.IElementType;
import com.intellij.openapi.util.text.StringUtil;
import org.intellij.plugins.postcss.lexer.PostCssTokenTypes;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0-SNAPSHOT
 * from the specification file <tt>postcss.flex</tt>
 */
public class _PostCssLexer implements FlexLexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;
  public static final int CSS_URI = 2;
  public static final int CSS_FUNCTION = 4;
  public static final int CSS_FUNCTION_MINUS_N = 6;
  public static final int CSS_COMMENT = 8;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0,  0,  1,  1,  2,  2,  3,  3,  4, 4
  };

  /** 
   * Translates characters to character classes
   * Chosen bits are [9, 6, 6]
   * Total runtime size is 1568 bytes
   */
  public static int ZZ_CMAP(int ch) {
    return ZZ_CMAP_A[(ZZ_CMAP_Y[ZZ_CMAP_Z[ch>>12]|((ch>>6)&0x3f)]<<6)|(ch&0x3f)];
  }

  /* The ZZ_CMAP_Z table has 272 entries */
  static final char ZZ_CMAP_Z[] = zzUnpackCMap(
    "\1\0\1\100\1\200\u010d\100");

  /* The ZZ_CMAP_Y table has 192 entries */
  static final char ZZ_CMAP_Y[] = zzUnpackCMap(
    "\1\0\1\1\1\2\175\3\1\4\77\3");

  /* The ZZ_CMAP_A table has 320 entries */
  static final char ZZ_CMAP_A[] = zzUnpackCMap(
    "\11\3\1\2\1\17\1\112\1\21\1\20\22\3\1\12\1\34\1\22\1\25\1\27\1\100\1\114\1"+
    "\23\1\64\1\13\1\102\1\7\1\77\1\10\1\16\1\32\1\31\10\1\1\33\1\75\1\76\1\107"+
    "\1\106\1\101\1\11\1\63\1\35\1\36\1\37\1\40\1\41\1\4\1\42\1\43\1\44\1\15\1"+
    "\45\1\46\1\47\1\50\1\51\1\52\1\15\1\53\1\54\1\55\1\6\1\57\1\60\1\61\1\62\1"+
    "\14\1\103\1\5\1\104\1\111\1\15\1\24\1\35\1\36\1\37\1\40\1\65\1\4\1\42\1\43"+
    "\1\72\1\15\1\45\1\46\1\47\1\74\1\73\1\67\1\15\1\70\1\71\1\55\1\56\1\57\1\60"+
    "\1\66\1\62\1\14\1\26\1\110\1\30\1\105\1\3\5\0\1\113\242\0\2\113\26\0");

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\3\0\1\2\1\3\1\4\2\5\1\2"+
    "\1\6\1\7\1\10\1\11\2\12\1\13\1\14\1\5"+
    "\1\15\1\16\1\5\2\2\1\5\1\17\1\2\1\20"+
    "\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30"+
    "\1\31\1\32\1\33\1\34\1\35\3\1\1\36\2\5"+
    "\1\1\1\37\2\0\1\7\1\40\2\41\2\0\1\42"+
    "\1\0\2\41\1\0\1\2\1\0\1\2\1\43\1\3"+
    "\3\12\1\44\2\0\1\45\3\0\1\46\1\47\2\0"+
    "\1\50\1\2\2\51\2\0\16\51\1\2\1\52\1\53"+
    "\1\54\1\0\1\55\1\56\1\57\1\60\2\1\1\61"+
    "\2\62\1\0\2\63\1\2\1\64\2\12\2\0\1\2"+
    "\1\65\2\0\1\2\31\51\1\2\1\0\1\66\1\1"+
    "\1\62\1\63\1\0\1\63\1\2\1\67\2\70\2\0"+
    "\1\2\31\51\1\2\1\71\2\1\3\63\1\2\1\70"+
    "\1\0\1\2\20\51\1\72\1\73\6\51\1\2\2\1"+
    "\3\63\1\2\1\0\1\2\4\51\1\74\10\51\1\75"+
    "\3\51\1\76\3\51\1\77\1\51\1\2\1\1\1\66"+
    "\3\63\1\2\1\0\7\51\1\100\5\51\1\101\5\51"+
    "\1\2\1\1\3\63\1\2\1\0\4\51\1\102\15\51"+
    "\1\2\1\1\1\63\1\2\1\0\5\51\1\103\3\51"+
    "\1\104\2\51\1\105\1\51\1\104\1\106\1\2\1\1"+
    "\1\107\1\110\4\51\1\111\2\51\1\112\3\51\1\2"+
    "\7\51\1\113\5\51\1\114\2\51\1\101\2\51\1\115"+
    "\1\51\1\116";

  private static int [] zzUnpackAction() {
    int [] result = new int[373];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\115\0\232\0\347\0\u0134\0\u0181\0\u01ce\0\u021b"+
    "\0\u0268\0\u02b5\0\u0302\0\u0268\0\u034f\0\u0268\0\u039c\0\u03e9"+
    "\0\u0436\0\u0483\0\u0268\0\u04d0\0\u0268\0\u051d\0\u056a\0\u05b7"+
    "\0\u0604\0\u0651\0\u0268\0\u069e\0\u0268\0\u0268\0\u0268\0\u0268"+
    "\0\u06eb\0\u0738\0\u0268\0\u0268\0\u0785\0\u0268\0\u07d2\0\u081f"+
    "\0\u086c\0\u0268\0\u08b9\0\u0906\0\u0953\0\u0268\0\u03e9\0\u0436"+
    "\0\u09a0\0\u09ed\0\u0a3a\0\u0a87\0\u0268\0\u0268\0\u0268\0\u0ad4"+
    "\0\u0b21\0\u0b6e\0\u0268\0\u039c\0\u0bbb\0\u0181\0\u0c08\0\u0c55"+
    "\0\u0ca2\0\u0cef\0\u0181\0\u039c\0\u0d3c\0\u0268\0\u0d89\0\u0dd6"+
    "\0\u0e23\0\u0e70\0\u0268\0\u0ebd\0\u0f0a\0\u0f57\0\u0fa4\0\u0268"+
    "\0\u0ff1\0\u103e\0\u0268\0\u108b\0\u10d8\0\u1125\0\u1172\0\u11bf"+
    "\0\u120c\0\u1259\0\u12a6\0\u12f3\0\u1340\0\u138d\0\u13da\0\u1427"+
    "\0\u1474\0\u14c1\0\u150e\0\u155b\0\u15a8\0\u15f5\0\u1642\0\u0268"+
    "\0\u0268\0\u0268\0\u168f\0\u0268\0\u0268\0\u0268\0\u0268\0\u16dc"+
    "\0\u1729\0\u0268\0\u1776\0\u0181\0\u17c3\0\u1810\0\u185d\0\u18aa"+
    "\0\u0268\0\u18f7\0\u1944\0\u1991\0\u19de\0\u0268\0\u0268\0\u1a2b"+
    "\0\u1a78\0\u1ac5\0\u1b12\0\u1b5f\0\u1bac\0\u1bf9\0\u1c46\0\u1c93"+
    "\0\u1ce0\0\u1d2d\0\u1d7a\0\u1dc7\0\u1e14\0\u1e61\0\u1eae\0\u1efb"+
    "\0\u1f48\0\u1f95\0\u1fe2\0\u202f\0\u207c\0\u20c9\0\u2116\0\u2163"+
    "\0\u21b0\0\u21fd\0\u224a\0\u2297\0\u22e4\0\u2331\0\u237e\0\u0268"+
    "\0\u23cb\0\u2418\0\u2465\0\u24b2\0\u0268\0\u24ff\0\u0dd6\0\u254c"+
    "\0\u2599\0\u25e6\0\u2633\0\u2680\0\u26cd\0\u271a\0\u2767\0\u27b4"+
    "\0\u2801\0\u284e\0\u289b\0\u28e8\0\u2935\0\u2982\0\u29cf\0\u2a1c"+
    "\0\u2a69\0\u2ab6\0\u2b03\0\u2b50\0\u2b9d\0\u2bea\0\u2c37\0\u2c84"+
    "\0\u2cd1\0\u2d1e\0\u2d6b\0\u2db8\0\u0268\0\u2e05\0\u2e52\0\u2e9f"+
    "\0\u2eec\0\u2f39\0\u2f86\0\u0268\0\u2fd3\0\u3020\0\u306d\0\u30ba"+
    "\0\u3107\0\u3154\0\u31a1\0\u31ee\0\u323b\0\u3288\0\u32d5\0\u3322"+
    "\0\u336f\0\u33bc\0\u3409\0\u3456\0\u34a3\0\u34f0\0\u10d8\0\u10d8"+
    "\0\u353d\0\u358a\0\u35d7\0\u3624\0\u3671\0\u36be\0\u370b\0\u3758"+
    "\0\u37a5\0\u37f2\0\u383f\0\u388c\0\u38d9\0\u3926\0\u3973\0\u39c0"+
    "\0\u3a0d\0\u3a5a\0\u3aa7\0\u10d8\0\u3af4\0\u3b41\0\u3b8e\0\u3bdb"+
    "\0\u3c28\0\u3c75\0\u3cc2\0\u3d0f\0\u10d8\0\u3d5c\0\u3da9\0\u3df6"+
    "\0\u10d8\0\u3e43\0\u3e90\0\u3edd\0\u10d8\0\u3f2a\0\u3f77\0\u3fc4"+
    "\0\u08b9\0\u4011\0\u405e\0\u40ab\0\u40f8\0\u4145\0\u4192\0\u41df"+
    "\0\u422c\0\u4279\0\u42c6\0\u4313\0\u4360\0\u10d8\0\u43ad\0\u43fa"+
    "\0\u4447\0\u4494\0\u44e1\0\u452e\0\u457b\0\u45c8\0\u4615\0\u4662"+
    "\0\u46af\0\u46fc\0\u4749\0\u4796\0\u0268\0\u47e3\0\u4830\0\u487d"+
    "\0\u48ca\0\u4917\0\u4964\0\u49b1\0\u10d8\0\u49fe\0\u4a4b\0\u4a98"+
    "\0\u4ae5\0\u4b32\0\u4b7f\0\u4bcc\0\u4c19\0\u4c66\0\u4cb3\0\u4d00"+
    "\0\u4d4d\0\u4d9a\0\u4de7\0\u4e34\0\u4e81\0\u4ece\0\u4f1b\0\u4f68"+
    "\0\u4fb5\0\u5002\0\u504f\0\u509c\0\u10d8\0\u50e9\0\u5136\0\u5183"+
    "\0\u10d8\0\u51d0\0\u521d\0\u10d8\0\u526a\0\u52b7\0\u10d8\0\u5304"+
    "\0\u5351\0\u0268\0\u10d8\0\u539e\0\u53eb\0\u5438\0\u5485\0\u10d8"+
    "\0\u54d2\0\u551f\0\u10d8\0\u556c\0\u55b9\0\u5606\0\u5653\0\u56a0"+
    "\0\u56ed\0\u573a\0\u5787\0\u57d4\0\u5821\0\u586e\0\u0268\0\u58bb"+
    "\0\u5908\0\u5955\0\u59a2\0\u59ef\0\u10d8\0\u5a3c\0\u5a89\0\u10d8"+
    "\0\u5ad6\0\u5b23\0\u10d8\0\u5b70\0\u10d8";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[373];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\6\1\7\1\10\1\11\1\6\1\12\1\13\1\14"+
    "\1\15\1\11\1\10\1\16\2\6\1\17\3\10\1\20"+
    "\1\21\1\11\1\22\1\23\1\24\1\25\1\7\1\26"+
    "\1\7\1\27\3\6\1\30\15\6\1\31\4\6\1\32"+
    "\1\33\1\34\7\6\1\35\1\36\1\37\1\40\1\41"+
    "\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51"+
    "\1\11\1\6\1\52\2\53\1\10\1\11\1\53\1\54"+
    "\1\55\3\53\1\10\1\56\3\53\3\10\1\57\1\60"+
    "\14\53\1\61\15\53\1\55\5\53\1\33\25\53\1\11"+
    "\2\53\1\62\3\0\1\62\1\63\1\62\1\0\1\64"+
    "\3\0\2\62\17\0\26\62\2\0\10\62\16\0\1\62"+
    "\11\0\1\65\63\0\1\66\20\0\102\67\1\70\12\67"+
    "\2\6\2\0\1\6\1\71\1\6\1\0\1\6\3\0"+
    "\2\6\13\0\1\6\1\0\1\6\1\72\26\6\1\0"+
    "\1\73\10\6\16\0\1\6\2\0\1\7\14\0\1\74"+
    "\12\0\1\7\1\0\1\7\63\0\1\10\7\0\1\10"+
    "\4\0\3\10\211\0\1\6\2\0\13\6\3\0\7\6"+
    "\1\75\1\6\1\76\56\6\2\0\3\6\2\0\1\6"+
    "\1\71\1\6\1\77\1\6\3\0\2\6\13\0\1\6"+
    "\1\0\1\6\1\72\16\6\1\100\7\6\1\0\1\73"+
    "\3\6\1\100\4\6\16\0\1\6\1\0\1\6\3\0"+
    "\1\6\1\101\1\6\1\0\1\102\3\0\2\6\17\0"+
    "\26\6\2\0\7\6\1\103\16\0\1\6\2\0\1\104"+
    "\27\0\1\104\1\0\1\104\61\0\5\20\1\105\11\20"+
    "\3\0\1\106\72\20\5\21\1\107\11\21\3\0\1\21"+
    "\1\106\71\21\2\110\2\0\1\110\1\111\1\110\1\0"+
    "\1\110\3\0\2\110\10\0\1\112\2\0\1\110\1\0"+
    "\1\110\1\0\26\110\2\0\10\110\16\0\1\110\27\0"+
    "\1\112\57\0\1\113\6\0\1\114\3\0\1\114\1\115"+
    "\1\114\1\0\1\116\3\0\2\114\14\0\1\117\2\0"+
    "\26\114\2\0\10\114\5\0\1\120\10\0\1\114\3\0"+
    "\1\121\7\0\1\121\4\0\3\121\22\0\1\122\25\0"+
    "\1\122\13\0\1\123\6\0\2\6\2\0\1\6\1\71"+
    "\1\6\1\0\1\6\3\0\2\6\13\0\1\6\1\0"+
    "\1\6\1\72\14\6\1\124\11\6\1\0\1\73\6\6"+
    "\1\124\1\6\16\0\1\6\1\0\2\6\2\0\1\6"+
    "\1\71\1\6\1\0\1\6\3\0\2\6\13\0\1\6"+
    "\1\0\1\6\1\72\16\6\1\100\7\6\1\0\1\73"+
    "\3\6\1\100\4\6\16\0\1\6\1\0\1\125\3\0"+
    "\1\126\1\127\1\125\1\0\1\130\3\0\2\125\17\0"+
    "\1\131\1\132\1\133\1\134\3\125\1\135\1\136\1\137"+
    "\1\140\1\141\1\125\1\142\1\143\1\144\1\145\1\125"+
    "\1\146\3\125\2\0\2\125\1\142\1\143\1\144\1\135"+
    "\1\125\1\141\16\0\1\125\1\0\2\6\2\0\1\6"+
    "\1\71\1\6\1\0\1\6\3\0\2\6\13\0\1\6"+
    "\1\0\1\6\1\72\26\6\1\0\1\73\1\6\1\147"+
    "\6\6\16\0\1\6\107\0\1\150\114\0\1\151\114\0"+
    "\1\152\42\0\1\153\51\0\1\154\114\0\1\155\114\0"+
    "\1\156\2\0\1\157\3\0\2\53\2\0\1\53\1\54"+
    "\4\53\2\0\3\53\5\0\40\53\1\0\25\53\1\0"+
    "\4\53\2\0\1\53\1\54\11\53\3\0\70\53\1\0"+
    "\4\53\2\0\1\53\1\54\4\53\2\0\3\53\5\0"+
    "\27\53\1\160\10\53\1\0\3\53\1\160\21\53\1\0"+
    "\4\53\2\0\1\53\1\54\4\53\2\0\3\53\5\0"+
    "\25\53\1\161\12\53\1\0\6\53\1\161\16\53\1\0"+
    "\2\53\2\62\2\0\1\62\1\63\1\62\1\0\1\62"+
    "\3\0\2\62\13\0\1\62\1\0\1\62\1\0\26\62"+
    "\2\0\10\62\16\0\1\62\2\0\1\62\2\0\13\62"+
    "\3\0\70\62\2\0\2\62\3\0\1\62\1\63\1\62"+
    "\1\0\1\62\3\0\2\62\17\0\26\62\2\0\10\62"+
    "\16\0\1\62\33\0\1\162\63\0\1\6\2\0\13\6"+
    "\3\0\7\6\1\163\1\6\1\164\56\6\2\0\1\6"+
    "\44\0\1\165\25\0\1\165\22\0\2\6\2\0\1\6"+
    "\1\71\1\6\1\0\1\6\3\0\2\6\13\0\1\6"+
    "\1\67\1\6\1\72\26\6\1\0\1\73\10\6\16\0"+
    "\1\6\2\0\1\166\2\0\1\166\4\0\1\167\17\0"+
    "\1\166\1\0\1\166\1\0\5\166\23\0\1\166\27\0"+
    "\2\6\2\0\1\6\1\71\1\6\1\0\1\6\3\0"+
    "\2\6\13\0\1\6\1\0\1\6\1\72\11\6\1\170"+
    "\14\6\1\0\1\73\10\6\16\0\1\6\2\0\1\6"+
    "\2\0\13\6\3\0\70\6\2\0\3\6\2\0\1\6"+
    "\1\71\1\6\1\0\1\6\3\0\2\6\13\0\1\6"+
    "\1\0\1\6\1\72\26\6\1\0\1\73\10\6\4\0"+
    "\1\171\11\0\1\6\1\0\5\20\1\105\12\20\1\172"+
    "\74\20\5\21\1\107\12\21\1\173\74\21\2\110\2\0"+
    "\1\110\1\174\1\110\1\0\1\110\3\0\2\110\13\0"+
    "\1\110\1\0\1\110\1\175\26\110\2\0\10\110\16\0"+
    "\1\110\2\0\1\110\2\0\13\110\3\0\70\110\2\0"+
    "\1\110\30\112\1\176\64\112\2\114\2\0\1\114\1\115"+
    "\1\114\1\0\1\114\3\0\2\114\13\0\1\114\1\177"+
    "\1\114\1\0\26\114\2\0\10\114\16\0\1\114\2\0"+
    "\1\114\2\0\13\114\3\0\70\114\2\0\2\114\3\0"+
    "\1\114\1\115\1\114\1\0\1\114\3\0\2\114\17\0"+
    "\26\114\2\0\10\114\16\0\1\114\1\0\17\117\3\0"+
    "\70\117\2\0\1\117\2\0\1\121\7\0\1\121\4\0"+
    "\3\121\22\0\1\200\25\0\1\200\63\0\1\67\5\0"+
    "\1\201\15\0\1\67\27\0\2\6\2\0\1\6\1\71"+
    "\1\6\1\0\1\6\3\0\2\6\13\0\1\6\1\0"+
    "\1\6\1\72\12\6\1\202\13\6\1\0\1\73\10\6"+
    "\16\0\1\6\1\0\2\125\2\0\1\125\1\127\1\125"+
    "\1\0\1\125\3\0\2\125\13\0\1\125\1\0\1\125"+
    "\1\0\26\125\2\0\10\125\16\0\1\125\1\0\2\125"+
    "\2\0\1\125\1\127\1\125\1\0\1\125\3\0\2\125"+
    "\13\0\1\125\1\0\1\125\1\0\14\125\1\203\11\125"+
    "\2\0\6\125\1\203\1\125\16\0\1\125\2\0\1\125"+
    "\2\0\13\125\3\0\70\125\2\0\2\125\3\0\1\125"+
    "\1\127\1\125\1\0\1\125\3\0\2\125\17\0\10\125"+
    "\1\204\1\125\1\205\1\125\1\206\6\125\1\207\2\125"+
    "\2\0\6\125\1\206\1\125\16\0\1\125\1\0\2\125"+
    "\2\0\1\125\1\127\1\125\1\0\1\125\3\0\2\125"+
    "\13\0\1\125\1\0\1\125\1\0\15\125\1\210\10\125"+
    "\2\0\2\125\1\210\5\125\16\0\1\125\1\0\2\125"+
    "\2\0\1\125\1\127\1\125\1\0\1\125\3\0\2\125"+
    "\13\0\1\125\1\0\1\125\1\0\14\125\1\211\11\125"+
    "\2\0\6\125\1\211\1\125\16\0\1\125\1\0\2\125"+
    "\2\0\1\125\1\127\1\212\1\0\1\125\3\0\2\125"+
    "\13\0\1\125\1\0\1\125\1\0\6\125\1\213\5\125"+
    "\1\214\4\125\1\212\4\125\2\0\6\125\1\214\1\125"+
    "\16\0\1\125\1\0\2\125\2\0\1\125\1\127\1\125"+
    "\1\0\1\125\3\0\2\125\13\0\1\125\1\0\1\125"+
    "\1\0\14\125\1\215\11\125\2\0\6\125\1\215\1\125"+
    "\16\0\1\125\1\0\2\125\2\0\1\125\1\127\1\125"+
    "\1\0\1\125\3\0\2\125\13\0\1\125\1\0\1\125"+
    "\1\0\12\125\1\216\13\125\2\0\10\125\16\0\1\125"+
    "\1\0\2\125\2\0\1\125\1\127\1\125\1\0\1\125"+
    "\3\0\2\125\13\0\1\125\1\0\1\125\1\0\4\125"+
    "\1\217\21\125\2\0\1\217\7\125\16\0\1\125\1\0"+
    "\2\125\2\0\1\125\1\127\1\125\1\0\1\125\3\0"+
    "\2\125\13\0\1\125\1\0\1\125\1\0\4\125\1\220"+
    "\21\125\2\0\1\220\7\125\16\0\1\125\1\0\2\125"+
    "\2\0\1\125\1\127\1\125\1\0\1\125\3\0\2\125"+
    "\13\0\1\125\1\0\1\125\1\0\4\125\1\221\21\125"+
    "\2\0\1\221\7\125\16\0\1\125\1\0\2\125\2\0"+
    "\1\125\1\127\1\125\1\0\1\125\3\0\2\125\13\0"+
    "\1\125\1\0\1\125\1\0\1\222\3\125\1\223\21\125"+
    "\2\0\1\223\7\125\16\0\1\125\1\0\2\125\2\0"+
    "\1\125\1\127\1\125\1\0\1\125\3\0\2\125\13\0"+
    "\1\125\1\0\1\125\1\0\1\224\25\125\2\0\10\125"+
    "\16\0\1\125\1\0\2\125\2\0\1\125\1\127\1\125"+
    "\1\0\1\125\3\0\2\125\13\0\1\125\1\0\1\125"+
    "\1\0\4\125\1\225\2\125\1\226\16\125\2\0\1\225"+
    "\4\125\1\226\2\125\16\0\1\125\1\0\2\125\2\0"+
    "\1\125\1\127\1\227\1\0\1\125\3\0\2\125\13\0"+
    "\1\125\1\0\1\125\1\0\2\125\1\230\16\125\1\227"+
    "\4\125\2\0\10\125\16\0\1\125\1\0\2\125\2\0"+
    "\1\125\1\127\1\125\1\0\1\125\3\0\2\125\13\0"+
    "\1\125\1\0\1\125\1\0\14\125\1\231\11\125\2\0"+
    "\6\125\1\231\1\125\16\0\1\125\1\0\2\125\2\0"+
    "\1\125\1\127\1\125\1\0\1\125\3\0\2\125\13\0"+
    "\1\125\1\0\1\125\1\0\1\232\6\125\1\233\16\125"+
    "\2\0\5\125\1\233\2\125\16\0\1\125\1\0\2\6"+
    "\2\0\1\6\1\71\1\6\1\0\1\6\3\0\2\6"+
    "\13\0\1\6\1\0\1\6\1\72\26\6\1\0\1\73"+
    "\2\6\1\234\5\6\16\0\1\6\11\0\1\235\104\0"+
    "\2\53\2\0\1\53\1\54\4\53\2\0\3\53\5\0"+
    "\22\53\1\236\15\53\1\0\25\53\1\0\4\53\2\0"+
    "\1\53\1\54\4\53\2\0\3\53\5\0\23\53\1\237"+
    "\14\53\1\0\25\53\1\0\2\53\2\6\2\0\1\6"+
    "\1\71\1\6\1\0\1\6\3\0\2\6\13\0\1\6"+
    "\1\240\1\6\1\72\26\6\1\0\1\73\10\6\16\0"+
    "\1\6\42\0\1\240\23\0\1\240\30\0\1\241\2\0"+
    "\1\241\3\0\1\242\1\243\17\0\1\241\1\0\1\241"+
    "\1\0\5\241\23\0\1\241\30\0\1\243\2\0\1\243"+
    "\4\0\1\243\17\0\1\243\1\0\1\243\1\0\5\243"+
    "\23\0\1\243\27\0\2\6\2\0\1\6\1\71\1\6"+
    "\1\0\1\244\3\0\2\6\13\0\1\6\1\0\1\6"+
    "\1\72\26\6\1\0\1\245\10\6\16\0\1\6\1\0"+
    "\5\20\1\105\12\20\2\0\1\106\72\20\5\21\1\107"+
    "\12\21\2\0\1\21\1\106\71\21\1\0\1\110\2\0"+
    "\13\110\3\0\7\110\1\246\1\110\1\247\56\110\2\0"+
    "\1\110\44\0\1\250\25\0\1\250\71\0\1\201\117\0"+
    "\1\251\14\0\1\251\25\0\2\6\2\0\1\6\1\71"+
    "\1\6\1\0\1\6\3\0\2\6\13\0\1\6\1\0"+
    "\1\6\1\72\1\252\25\6\1\0\1\73\10\6\16\0"+
    "\1\6\1\0\2\125\2\0\1\125\1\127\1\125\1\0"+
    "\1\125\3\0\2\125\13\0\1\125\1\0\1\125\1\0"+
    "\13\125\1\253\12\125\2\0\7\125\1\253\16\0\1\125"+
    "\1\0\2\125\2\0\1\125\1\127\1\125\1\0\1\125"+
    "\3\0\2\125\13\0\1\125\1\0\1\125\1\0\6\125"+
    "\1\254\17\125\2\0\10\125\16\0\1\125\1\0\2\125"+
    "\2\0\1\125\1\127\1\125\1\0\1\125\3\0\2\125"+
    "\13\0\1\125\1\0\1\125\1\0\14\125\1\255\2\125"+
    "\1\206\6\125\2\0\4\125\1\206\1\125\1\255\1\125"+
    "\16\0\1\125\1\0\2\125\2\0\1\125\1\127\1\125"+
    "\1\0\1\256\3\0\2\125\13\0\1\125\1\0\1\125"+
    "\1\0\26\125\2\0\10\125\16\0\1\125\1\0\2\125"+
    "\2\0\1\125\1\127\1\125\1\0\1\125\3\0\2\125"+
    "\13\0\1\125\1\0\1\125\1\0\4\125\1\257\21\125"+
    "\2\0\1\257\7\125\16\0\1\125\1\0\2\125\2\0"+
    "\1\125\1\127\1\125\1\0\1\125\3\0\2\125\13\0"+
    "\1\125\1\0\1\125\1\0\15\125\1\260\10\125\2\0"+
    "\2\125\1\260\5\125\16\0\1\125\1\0\2\125\2\0"+
    "\1\125\1\127\1\125\1\0\1\125\3\0\2\125\13\0"+
    "\1\125\1\0\1\125\1\0\20\125\1\261\5\125\2\0"+
    "\10\125\16\0\1\125\1\0\2\125\2\0\1\125\1\127"+
    "\1\125\1\0\1\125\3\0\2\125\13\0\1\125\1\0"+
    "\1\125\1\0\17\125\1\262\6\125\2\0\4\125\1\262"+
    "\3\125\16\0\1\125\1\0\2\125\2\0\1\125\1\127"+
    "\1\125\1\0\1\125\3\0\2\125\13\0\1\125\1\0"+
    "\1\125\1\0\1\263\25\125\2\0\10\125\16\0\1\125"+
    "\1\0\2\125\2\0\1\125\1\127\1\264\1\0\1\125"+
    "\3\0\2\125\13\0\1\125\1\0\1\125\1\0\21\125"+
    "\1\264\4\125\2\0\10\125\16\0\1\125\1\0\2\125"+
    "\2\0\1\125\1\127\1\125\1\0\1\125\3\0\2\125"+
    "\13\0\1\125\1\0\1\125\1\0\2\125\1\265\23\125"+
    "\2\0\10\125\16\0\1\125\1\0\2\125\2\0\1\125"+
    "\1\127\1\125\1\0\1\125\3\0\2\125\13\0\1\125"+
    "\1\0\1\125\1\0\15\125\1\266\10\125\2\0\2\125"+
    "\1\266\5\125\16\0\1\125\1\0\2\125\2\0\1\125"+
    "\1\127\1\125\1\0\1\125\3\0\2\125\13\0\1\125"+
    "\1\0\1\125\1\0\25\125\1\267\2\0\10\125\16\0"+
    "\1\125\1\0\2\125\2\0\1\270\1\127\1\125\1\0"+
    "\1\125\3\0\2\125\13\0\1\125\1\0\1\125\1\0"+
    "\26\125\2\0\10\125\16\0\1\125\1\0\2\125\2\0"+
    "\1\125\1\127\1\125\1\0\1\125\3\0\2\125\13\0"+
    "\1\125\1\0\1\125\1\0\3\125\1\271\22\125\2\0"+
    "\10\125\16\0\1\125\1\0\2\125\2\0\1\125\1\127"+
    "\1\125\1\0\1\125\3\0\2\125\13\0\1\125\1\0"+
    "\1\125\1\0\12\125\1\272\13\125\2\0\10\125\16\0"+
    "\1\125\1\0\2\125\2\0\1\125\1\127\1\125\1\0"+
    "\1\125\3\0\2\125\13\0\1\125\1\0\1\125\1\0"+
    "\17\125\1\273\6\125\2\0\4\125\1\273\3\125\16\0"+
    "\1\125\1\0\2\125\2\0\1\125\1\127\1\125\1\0"+
    "\1\125\3\0\2\125\13\0\1\125\1\0\1\125\1\0"+
    "\5\125\1\274\20\125\2\0\10\125\16\0\1\125\1\0"+
    "\2\125\2\0\1\125\1\127\1\125\1\0\1\125\3\0"+
    "\2\125\13\0\1\125\1\0\1\125\1\0\5\125\1\275"+
    "\20\125\2\0\10\125\16\0\1\125\1\0\2\125\2\0"+
    "\1\125\1\127\1\125\1\0\1\125\3\0\2\125\13\0"+
    "\1\125\1\0\1\125\1\0\5\125\1\276\20\125\2\0"+
    "\10\125\16\0\1\125\1\0\2\125\2\0\1\125\1\127"+
    "\1\125\1\0\1\125\3\0\2\125\13\0\1\125\1\0"+
    "\1\125\1\0\15\125\1\277\10\125\2\0\2\125\1\277"+
    "\5\125\16\0\1\125\1\0\2\125\2\0\1\125\1\127"+
    "\1\125\1\0\1\125\3\0\2\125\13\0\1\125\1\0"+
    "\1\125\1\0\14\125\1\300\11\125\2\0\6\125\1\300"+
    "\1\125\16\0\1\125\1\0\2\125\2\0\1\125\1\127"+
    "\1\125\1\0\1\125\3\0\2\125\13\0\1\125\1\0"+
    "\1\125\1\0\15\125\1\301\10\125\2\0\2\125\1\301"+
    "\5\125\16\0\1\125\1\0\2\125\2\0\1\125\1\127"+
    "\1\125\1\0\1\125\3\0\2\125\13\0\1\125\1\0"+
    "\1\125\1\0\11\125\1\302\14\125\2\0\10\125\16\0"+
    "\1\125\1\0\2\125\2\0\1\125\1\127\1\125\1\0"+
    "\1\125\3\0\2\125\13\0\1\125\1\0\1\125\1\0"+
    "\4\125\1\303\21\125\2\0\1\303\7\125\16\0\1\125"+
    "\1\0\2\6\2\0\1\6\1\71\1\6\1\0\1\6"+
    "\3\0\2\6\13\0\1\6\1\0\1\6\1\72\26\6"+
    "\1\0\1\73\3\6\1\304\4\6\16\0\1\6\11\0"+
    "\1\305\104\0\2\53\2\0\1\53\1\54\2\53\1\306"+
    "\1\53\2\0\3\53\5\0\40\53\1\0\25\53\1\0"+
    "\4\53\2\0\1\53\1\54\4\53\2\0\3\53\5\0"+
    "\11\53\1\307\26\53\1\0\25\53\1\0\2\53\1\0"+
    "\1\310\2\0\1\310\3\0\1\242\1\311\17\0\1\310"+
    "\1\0\1\310\1\0\5\310\23\0\1\310\30\0\1\312"+
    "\2\0\1\312\24\0\1\312\1\0\1\312\1\0\5\312"+
    "\23\0\1\312\30\0\1\311\2\0\1\311\4\0\1\311"+
    "\17\0\1\311\1\0\1\311\1\0\5\311\23\0\1\311"+
    "\27\0\2\6\2\0\1\6\1\71\1\6\1\0\1\6"+
    "\3\0\2\6\13\0\1\6\1\0\1\6\1\72\15\6"+
    "\1\313\10\6\1\0\1\73\2\6\1\313\5\6\16\0"+
    "\1\6\1\0\2\110\2\0\1\110\1\174\1\110\1\0"+
    "\1\110\3\0\2\110\13\0\1\110\1\314\1\110\1\175"+
    "\26\110\2\0\10\110\16\0\1\110\42\0\1\314\23\0"+
    "\1\314\100\0\1\315\21\0\1\315\21\0\2\6\2\0"+
    "\1\6\1\71\1\6\1\0\1\6\3\0\2\6\13\0"+
    "\1\6\1\0\1\6\1\72\7\6\1\316\16\6\1\0"+
    "\1\73\5\6\1\316\2\6\16\0\1\6\1\0\2\125"+
    "\2\0\1\125\1\127\1\125\1\0\1\125\3\0\2\125"+
    "\13\0\1\125\1\0\1\125\1\0\20\125\1\317\5\125"+
    "\2\0\10\125\16\0\1\125\1\0\2\125\2\0\1\125"+
    "\1\127\1\125\1\0\1\125\3\0\2\125\13\0\1\125"+
    "\1\0\1\125\1\0\20\125\1\320\5\125\2\0\10\125"+
    "\16\0\1\125\1\0\2\125\2\0\1\125\1\127\1\125"+
    "\1\0\1\125\3\0\1\321\1\125\13\0\1\125\1\0"+
    "\1\125\1\0\26\125\2\0\10\125\16\0\1\125\1\0"+
    "\2\125\2\0\1\125\1\127\1\125\1\0\1\125\3\0"+
    "\2\125\13\0\1\125\1\0\1\125\1\0\10\125\1\136"+
    "\11\125\1\322\3\125\2\0\10\125\16\0\1\125\1\0"+
    "\2\125\2\0\1\125\1\127\1\125\1\0\1\125\3\0"+
    "\2\125\13\0\1\125\1\0\1\125\1\0\1\125\1\323"+
    "\24\125\2\0\10\125\16\0\1\125\1\0\2\125\2\0"+
    "\1\125\1\127\1\125\1\0\1\125\3\0\2\125\13\0"+
    "\1\125\1\0\1\125\1\0\11\125\1\324\14\125\2\0"+
    "\10\125\16\0\1\125\1\0\2\125\2\0\1\125\1\127"+
    "\1\125\1\0\1\125\3\0\2\125\13\0\1\125\1\0"+
    "\1\125\1\0\20\125\1\325\5\125\2\0\10\125\16\0"+
    "\1\125\1\0\2\125\2\0\1\125\1\127\1\125\1\0"+
    "\1\125\3\0\2\125\13\0\1\125\1\0\1\125\1\0"+
    "\20\125\1\326\5\125\2\0\10\125\16\0\1\125\1\0"+
    "\2\125\2\0\1\125\1\127\1\125\1\0\1\125\3\0"+
    "\2\125\13\0\1\125\1\0\1\125\1\0\16\125\1\327"+
    "\7\125\2\0\3\125\1\327\4\125\16\0\1\125\1\0"+
    "\2\125\2\0\1\125\1\127\1\125\1\0\1\125\3\0"+
    "\2\125\13\0\1\125\1\0\1\125\1\0\13\125\1\330"+
    "\12\125\2\0\7\125\1\330\16\0\1\125\1\0\2\125"+
    "\2\0\1\125\1\127\1\331\1\0\1\125\3\0\2\125"+
    "\13\0\1\125\1\0\1\125\1\0\21\125\1\331\4\125"+
    "\2\0\10\125\16\0\1\125\1\0\2\125\2\0\1\125"+
    "\1\127\1\125\1\0\1\125\3\0\2\125\13\0\1\125"+
    "\1\0\1\125\1\0\14\125\1\332\11\125\2\0\6\125"+
    "\1\332\1\125\16\0\1\125\1\0\2\125\2\0\1\333"+
    "\1\127\1\125\1\0\1\125\3\0\2\125\13\0\1\125"+
    "\1\0\1\125\1\0\26\125\2\0\10\125\16\0\1\125"+
    "\1\0\2\125\2\0\1\125\1\127\1\125\1\0\1\125"+
    "\3\0\2\125\13\0\1\125\1\0\1\125\1\0\20\125"+
    "\1\334\5\125\2\0\10\125\16\0\1\125\1\0\2\125"+
    "\2\0\1\125\1\127\1\125\1\0\1\125\3\0\2\125"+
    "\13\0\1\125\1\0\1\125\1\0\7\125\1\335\16\125"+
    "\2\0\5\125\1\335\2\125\16\0\1\125\1\0\2\125"+
    "\2\0\1\125\1\127\1\125\1\0\1\125\3\0\2\125"+
    "\13\0\1\125\1\0\1\125\1\0\4\125\1\336\21\125"+
    "\2\0\1\336\7\125\16\0\1\125\1\0\2\125\2\0"+
    "\1\125\1\127\1\125\1\0\1\125\3\0\2\125\13\0"+
    "\1\125\1\0\1\125\1\0\20\125\1\337\5\125\2\0"+
    "\10\125\16\0\1\125\1\0\2\125\2\0\1\125\1\127"+
    "\1\125\1\0\1\125\3\0\2\125\13\0\1\125\1\0"+
    "\1\125\1\0\4\125\1\340\21\125\2\0\1\340\7\125"+
    "\16\0\1\125\1\0\2\125\2\0\1\125\1\127\1\125"+
    "\1\0\1\125\3\0\2\125\13\0\1\125\1\0\1\125"+
    "\1\0\7\125\1\341\16\125\2\0\5\125\1\341\2\125"+
    "\16\0\1\125\1\0\2\125\2\0\1\125\1\127\1\125"+
    "\1\0\1\125\3\0\2\125\13\0\1\125\1\0\1\125"+
    "\1\0\6\125\1\270\17\125\2\0\10\125\16\0\1\125"+
    "\1\0\2\125\2\0\1\125\1\127\1\125\1\0\1\125"+
    "\3\0\2\125\13\0\1\125\1\0\1\125\1\0\15\125"+
    "\1\342\10\125\2\0\2\125\1\342\5\125\16\0\1\125"+
    "\1\0\2\125\2\0\1\125\1\127\1\125\1\0\1\125"+
    "\3\0\2\125\13\0\1\125\1\0\1\125\1\0\15\125"+
    "\1\343\10\125\2\0\2\125\1\343\5\125\16\0\1\125"+
    "\1\0\2\125\2\0\1\125\1\127\1\125\1\0\1\344"+
    "\3\0\2\125\13\0\1\125\1\0\1\125\1\0\26\125"+
    "\2\0\10\125\16\0\1\125\1\0\2\125\2\0\1\125"+
    "\1\127\1\345\1\0\1\125\3\0\2\125\13\0\1\125"+
    "\1\0\1\125\1\0\21\125\1\345\4\125\2\0\10\125"+
    "\16\0\1\125\1\0\2\125\2\0\1\125\1\127\1\125"+
    "\1\0\1\125\3\0\2\125\13\0\1\125\1\0\1\125"+
    "\1\0\23\125\1\346\2\125\2\0\10\125\16\0\1\125"+
    "\1\0\2\6\2\0\1\6\1\71\1\6\1\0\1\6"+
    "\3\0\2\6\13\0\1\6\1\0\1\6\1\72\26\6"+
    "\1\0\1\73\1\347\7\6\16\0\1\6\1\0\2\53"+
    "\2\0\1\53\1\54\4\53\2\0\3\53\5\0\26\53"+
    "\1\350\11\53\1\0\2\53\1\350\22\53\1\0\4\53"+
    "\2\0\1\53\1\54\4\53\2\0\3\53\5\0\20\53"+
    "\1\351\17\53\1\0\5\53\1\351\17\53\1\0\2\53"+
    "\1\0\1\352\2\0\1\352\3\0\1\242\1\353\17\0"+
    "\1\352\1\0\1\352\1\0\5\352\23\0\1\352\30\0"+
    "\1\353\2\0\1\353\4\0\1\353\17\0\1\353\1\0"+
    "\1\353\1\0\5\353\23\0\1\353\30\0\1\354\2\0"+
    "\1\354\24\0\1\354\1\0\1\354\1\0\5\354\23\0"+
    "\1\354\27\0\2\6\2\0\1\6\1\71\1\6\1\0"+
    "\1\6\3\0\2\6\13\0\1\6\1\0\1\6\1\72"+
    "\16\6\1\355\7\6\1\0\1\73\3\6\1\355\4\6"+
    "\16\0\1\6\54\0\1\356\14\0\1\356\24\0\2\6"+
    "\2\0\1\6\1\71\1\6\1\0\1\6\3\0\2\6"+
    "\13\0\1\6\1\0\1\6\1\72\13\6\1\357\12\6"+
    "\1\0\1\73\7\6\1\357\16\0\1\6\1\0\2\125"+
    "\2\0\1\125\1\127\1\125\1\0\1\360\3\0\2\125"+
    "\13\0\1\125\1\0\1\125\1\0\26\125\2\0\10\125"+
    "\16\0\1\125\1\0\2\125\2\0\1\125\1\127\1\125"+
    "\1\0\1\125\3\0\2\125\13\0\1\125\1\0\1\125"+
    "\1\0\12\125\1\361\13\125\2\0\10\125\16\0\1\125"+
    "\1\0\2\125\2\0\1\125\1\127\1\125\1\0\1\362"+
    "\3\0\2\125\13\0\1\125\1\0\1\125\1\0\26\125"+
    "\2\0\10\125\16\0\1\125\1\0\2\125\2\0\1\125"+
    "\1\127\1\125\1\0\1\125\3\0\2\125\13\0\1\125"+
    "\1\0\1\125\1\0\7\125\1\233\16\125\2\0\5\125"+
    "\1\233\2\125\16\0\1\125\1\0\2\125\2\0\1\125"+
    "\1\127\1\125\1\0\1\125\3\0\2\125\13\0\1\125"+
    "\1\0\1\125\1\0\10\125\1\363\15\125\2\0\10\125"+
    "\16\0\1\125\1\0\2\125\2\0\1\125\1\127\1\125"+
    "\1\0\1\125\3\0\2\125\13\0\1\125\1\0\1\125"+
    "\1\0\25\125\1\364\2\0\10\125\16\0\1\125\1\0"+
    "\2\125\2\0\1\125\1\127\1\125\1\0\1\125\3\0"+
    "\2\125\13\0\1\125\1\0\1\125\1\0\14\125\1\365"+
    "\11\125\2\0\6\125\1\365\1\125\16\0\1\125\1\0"+
    "\2\125\2\0\1\125\1\127\1\125\1\0\1\125\3\0"+
    "\2\125\13\0\1\125\1\0\1\125\1\0\14\125\1\366"+
    "\11\125\2\0\6\125\1\366\1\125\16\0\1\125\1\0"+
    "\2\125\2\0\1\125\1\127\1\125\1\0\1\125\3\0"+
    "\2\125\13\0\1\125\1\0\1\125\1\0\17\125\1\367"+
    "\6\125\2\0\4\125\1\367\3\125\16\0\1\125\1\0"+
    "\2\125\2\0\1\125\1\127\1\125\1\0\1\125\3\0"+
    "\2\125\13\0\1\125\1\0\1\125\1\0\20\125\1\370"+
    "\5\125\2\0\10\125\16\0\1\125\1\0\2\125\2\0"+
    "\1\125\1\127\1\125\1\0\1\125\3\0\2\125\13\0"+
    "\1\125\1\0\1\125\1\0\12\125\1\371\13\125\2\0"+
    "\10\125\16\0\1\125\1\0\2\125\2\0\1\125\1\127"+
    "\1\125\1\0\1\125\3\0\2\125\13\0\1\125\1\0"+
    "\1\125\1\0\16\125\1\372\7\125\2\0\3\125\1\372"+
    "\4\125\16\0\1\125\1\0\2\125\2\0\1\125\1\127"+
    "\1\125\1\0\1\125\3\0\2\125\13\0\1\125\1\0"+
    "\1\125\1\0\16\125\1\373\7\125\2\0\3\125\1\373"+
    "\4\125\16\0\1\125\1\0\2\125\2\0\1\125\1\127"+
    "\1\125\1\0\1\374\3\0\2\125\13\0\1\125\1\0"+
    "\1\125\1\0\26\125\2\0\10\125\16\0\1\125\1\0"+
    "\2\125\2\0\1\125\1\127\1\125\1\0\1\125\3\0"+
    "\2\125\13\0\1\125\1\0\1\125\1\0\1\375\25\125"+
    "\2\0\10\125\16\0\1\125\1\0\2\125\2\0\1\125"+
    "\1\127\1\125\1\0\1\125\3\0\2\125\13\0\1\125"+
    "\1\0\1\125\1\0\17\125\1\376\6\125\2\0\4\125"+
    "\1\376\3\125\16\0\1\125\1\0\2\125\2\0\1\125"+
    "\1\127\1\125\1\0\1\125\3\0\2\125\13\0\1\125"+
    "\1\0\1\125\1\0\14\125\1\377\11\125\2\0\6\125"+
    "\1\377\1\125\16\0\1\125\1\0\2\125\2\0\1\125"+
    "\1\127\1\125\1\0\1\125\3\0\2\125\13\0\1\125"+
    "\1\0\1\125\1\0\14\125\1\u0100\11\125\2\0\6\125"+
    "\1\u0100\1\125\16\0\1\125\1\0\2\125\2\0\1\125"+
    "\1\127\1\125\1\0\1\125\3\0\2\125\13\0\1\125"+
    "\1\0\1\125\1\0\4\125\1\u0101\21\125\2\0\1\u0101"+
    "\7\125\16\0\1\125\1\0\2\125\2\0\1\125\1\127"+
    "\1\125\1\0\1\125\3\0\2\125\13\0\1\125\1\0"+
    "\1\125\1\0\2\125\1\u0102\6\125\1\u0103\4\125\1\u0104"+
    "\7\125\2\0\3\125\1\u0104\4\125\16\0\1\125\1\0"+
    "\2\125\2\0\1\125\1\127\1\125\1\0\1\125\3\0"+
    "\2\125\13\0\1\125\1\0\1\125\1\0\4\125\1\u0105"+
    "\21\125\2\0\1\u0105\7\125\16\0\1\125\1\0\2\125"+
    "\2\0\1\125\1\127\1\125\1\0\1\125\3\0\2\125"+
    "\13\0\1\125\1\0\1\125\1\0\15\125\1\u0106\10\125"+
    "\2\0\2\125\1\u0106\5\125\16\0\1\125\1\0\2\6"+
    "\2\0\1\6\1\71\1\6\1\0\1\6\3\0\2\6"+
    "\13\0\1\6\1\0\1\6\1\72\26\6\1\0\1\73"+
    "\4\6\1\u0107\3\6\16\0\1\6\1\0\2\53\2\0"+
    "\1\53\1\54\4\53\2\0\3\53\5\0\27\53\1\u0108"+
    "\10\53\1\0\3\53\1\u0108\21\53\1\0\4\53\2\0"+
    "\1\53\1\54\4\53\2\0\3\53\5\0\24\53\1\u0109"+
    "\13\53\1\0\7\53\1\u0109\15\53\1\0\2\53\1\0"+
    "\1\u010a\2\0\1\u010a\3\0\1\242\1\u010b\17\0\1\u010a"+
    "\1\0\1\u010a\1\0\5\u010a\23\0\1\u010a\30\0\1\u010b"+
    "\2\0\1\u010b\4\0\1\u010b\17\0\1\u010b\1\0\1\u010b"+
    "\1\0\5\u010b\23\0\1\u010b\30\0\1\u010c\2\0\1\u010c"+
    "\24\0\1\u010c\1\0\1\u010c\1\0\5\u010c\23\0\1\u010c"+
    "\27\0\2\6\2\0\1\6\1\71\1\6\1\0\1\6"+
    "\3\0\2\6\13\0\1\6\1\0\1\6\1\72\4\6"+
    "\1\u010d\21\6\1\0\1\73\1\u010d\7\6\16\0\1\6"+
    "\56\0\1\u010e\37\0\2\6\2\0\1\6\1\71\1\6"+
    "\1\0\1\6\3\0\2\6\13\0\1\6\1\0\1\6"+
    "\1\72\26\6\1\0\1\245\10\6\16\0\1\6\1\0"+
    "\2\125\2\0\1\u010f\1\127\1\125\1\0\1\125\3\0"+
    "\2\125\13\0\1\125\1\0\1\125\1\0\26\125\2\0"+
    "\10\125\16\0\1\125\1\0\2\125\2\0\1\125\1\127"+
    "\1\125\1\0\1\125\3\0\2\125\13\0\1\125\1\0"+
    "\1\125\1\0\11\125\1\u0110\14\125\2\0\10\125\16\0"+
    "\1\125\1\0\2\125\2\0\1\125\1\127\1\125\1\0"+
    "\1\125\3\0\2\125\13\0\1\125\1\0\1\125\1\0"+
    "\3\125\1\134\4\125\1\136\11\125\1\322\3\125\2\0"+
    "\10\125\16\0\1\125\1\0\2\125\2\0\1\125\1\127"+
    "\1\125\1\0\1\125\3\0\2\125\13\0\1\125\1\0"+
    "\1\125\1\0\7\125\1\u0111\16\125\2\0\5\125\1\u0111"+
    "\2\125\16\0\1\125\1\0\2\125\2\0\1\125\1\127"+
    "\1\125\1\0\1\125\3\0\2\125\13\0\1\125\1\0"+
    "\1\125\1\0\12\125\1\301\13\125\2\0\10\125\16\0"+
    "\1\125\1\0\2\125\2\0\1\125\1\127\1\125\1\0"+
    "\1\125\3\0\2\125\13\0\1\125\1\0\1\125\1\0"+
    "\12\125\1\u0112\13\125\2\0\10\125\16\0\1\125\1\0"+
    "\2\125\2\0\1\125\1\127\1\125\1\0\1\125\3\0"+
    "\2\125\13\0\1\125\1\0\1\125\1\0\4\125\1\u0113"+
    "\21\125\2\0\1\u0113\7\125\16\0\1\125\1\0\2\125"+
    "\2\0\1\125\1\127\1\125\1\0\1\125\3\0\2\125"+
    "\13\0\1\125\1\0\1\125\1\0\4\125\1\u0114\21\125"+
    "\2\0\1\u0114\7\125\16\0\1\125\1\0\2\125\2\0"+
    "\1\125\1\127\1\125\1\0\1\125\3\0\2\125\13\0"+
    "\1\125\1\0\1\125\1\0\4\125\1\u0115\21\125\2\0"+
    "\1\u0115\7\125\16\0\1\125\1\0\2\125\2\0\1\125"+
    "\1\127\1\125\1\0\1\125\3\0\2\125\13\0\1\125"+
    "\1\0\1\125\1\0\20\125\1\u0116\5\125\2\0\10\125"+
    "\16\0\1\125\1\0\2\125\2\0\1\125\1\127\1\125"+
    "\1\0\1\125\3\0\2\125\13\0\1\125\1\0\1\125"+
    "\1\0\1\u0117\25\125\2\0\10\125\16\0\1\125\1\0"+
    "\2\125\2\0\1\125\1\127\1\125\1\0\1\125\3\0"+
    "\2\125\13\0\1\125\1\0\1\125\1\0\1\125\1\u0118"+
    "\10\125\1\u0119\5\125\1\u011a\5\125\2\0\10\125\16\0"+
    "\1\125\1\0\2\125\2\0\1\125\1\127\1\125\1\0"+
    "\1\125\3\0\2\125\13\0\1\125\1\0\1\125\1\0"+
    "\15\125\1\u011b\10\125\2\0\2\125\1\u011b\5\125\16\0"+
    "\1\125\1\0\2\125\2\0\1\125\1\127\1\125\1\0"+
    "\1\125\3\0\2\125\13\0\1\125\1\0\1\125\1\0"+
    "\13\125\1\u011c\12\125\2\0\7\125\1\u011c\16\0\1\125"+
    "\1\0\2\125\2\0\1\125\1\127\1\125\1\0\1\125"+
    "\3\0\2\125\13\0\1\125\1\0\1\125\1\0\16\125"+
    "\1\u011d\7\125\2\0\3\125\1\u011d\4\125\16\0\1\125"+
    "\1\0\2\125\2\0\1\125\1\127\1\125\1\0\1\125"+
    "\3\0\2\125\13\0\1\125\1\0\1\125\1\0\4\125"+
    "\1\u011e\21\125\2\0\1\u011e\7\125\16\0\1\125\1\0"+
    "\2\125\2\0\1\125\1\127\1\125\1\0\1\125\3\0"+
    "\2\125\13\0\1\125\1\0\1\125\1\0\4\125\1\u011f"+
    "\21\125\2\0\1\u011f\7\125\16\0\1\125\1\0\2\125"+
    "\2\0\1\125\1\127\1\125\1\0\1\125\3\0\2\125"+
    "\13\0\1\125\1\0\1\125\1\0\7\125\1\u0120\16\125"+
    "\2\0\5\125\1\u0120\2\125\16\0\1\125\1\0\2\125"+
    "\2\0\1\125\1\127\1\125\1\0\1\125\3\0\2\125"+
    "\13\0\1\125\1\0\1\125\1\0\14\125\1\u0121\11\125"+
    "\2\0\6\125\1\u0121\1\125\16\0\1\125\1\0\2\6"+
    "\2\0\1\6\1\71\1\6\1\0\1\6\3\0\2\6"+
    "\13\0\1\6\1\0\1\6\1\72\26\6\1\0\1\73"+
    "\4\6\1\u0122\3\6\16\0\1\6\1\0\2\53\2\0"+
    "\1\53\1\54\4\53\2\0\3\53\5\0\15\53\1\u0123"+
    "\22\53\1\0\1\u0123\24\53\1\0\2\53\1\0\1\u0124"+
    "\2\0\1\u0124\3\0\1\242\1\u0125\17\0\1\u0124\1\0"+
    "\1\u0124\1\0\5\u0124\23\0\1\u0124\30\0\1\u0125\2\0"+
    "\1\u0125\4\0\1\u0125\17\0\1\u0125\1\0\1\u0125\1\0"+
    "\5\u0125\23\0\1\u0125\30\0\1\u0126\2\0\1\u0126\24\0"+
    "\1\u0126\1\0\1\u0126\1\0\5\u0126\23\0\1\u0126\27\0"+
    "\2\6\2\0\1\u0127\1\71\1\6\1\0\1\6\3\0"+
    "\2\6\13\0\1\6\1\0\1\6\1\72\26\6\1\0"+
    "\1\73\10\6\16\0\1\6\36\0\1\u0128\57\0\2\125"+
    "\2\0\1\125\1\127\1\125\1\0\1\125\3\0\2\125"+
    "\13\0\1\125\1\0\1\125\1\0\1\u0129\25\125\2\0"+
    "\10\125\16\0\1\125\1\0\2\125\2\0\1\125\1\127"+
    "\1\125\1\0\1\u012a\3\0\2\125\13\0\1\125\1\0"+
    "\1\125\1\0\26\125\2\0\10\125\16\0\1\125\1\0"+
    "\2\125\2\0\1\125\1\127\1\125\1\0\1\125\3\0"+
    "\2\125\13\0\1\125\1\0\1\125\1\0\20\125\1\u012b"+
    "\5\125\2\0\10\125\16\0\1\125\1\0\2\125\2\0"+
    "\1\125\1\127\1\125\1\0\1\u012c\3\0\2\125\13\0"+
    "\1\125\1\0\1\125\1\0\26\125\2\0\10\125\16\0"+
    "\1\125\1\0\2\125\2\0\1\125\1\127\1\125\1\0"+
    "\1\125\3\0\2\125\13\0\1\125\1\0\1\125\1\0"+
    "\20\125\1\u012d\5\125\2\0\10\125\16\0\1\125\1\0"+
    "\2\125\2\0\1\125\1\127\1\125\1\0\1\125\3\0"+
    "\2\125\13\0\1\125\1\0\1\125\1\0\16\125\1\u012e"+
    "\7\125\2\0\3\125\1\u012e\4\125\16\0\1\125\1\0"+
    "\2\125\2\0\1\125\1\127\1\125\1\0\1\125\3\0"+
    "\2\125\13\0\1\125\1\0\1\125\1\0\13\125\1\u012f"+
    "\12\125\2\0\7\125\1\u012f\16\0\1\125\1\0\2\125"+
    "\2\0\1\125\1\127\1\125\1\0\1\125\3\0\2\125"+
    "\13\0\1\125\1\0\1\125\1\0\12\125\1\u0130\13\125"+
    "\2\0\10\125\16\0\1\125\1\0\2\125\2\0\1\125"+
    "\1\127\1\125\1\0\1\125\3\0\2\125\13\0\1\125"+
    "\1\0\1\125\1\0\14\125\1\u0131\11\125\2\0\6\125"+
    "\1\u0131\1\125\16\0\1\125\1\0\2\125\2\0\1\125"+
    "\1\127\1\125\1\0\1\125\3\0\2\125\13\0\1\125"+
    "\1\0\1\125\1\0\7\125\1\u0132\16\125\2\0\5\125"+
    "\1\u0132\2\125\16\0\1\125\1\0\2\125\2\0\1\125"+
    "\1\127\1\125\1\0\1\125\3\0\2\125\13\0\1\125"+
    "\1\0\1\125\1\0\14\125\1\u0133\11\125\2\0\6\125"+
    "\1\u0133\1\125\16\0\1\125\1\0\2\125\2\0\1\125"+
    "\1\127\1\125\1\0\1\125\3\0\2\125\13\0\1\125"+
    "\1\0\1\125\1\0\1\u0134\25\125\2\0\10\125\16\0"+
    "\1\125\1\0\2\125\2\0\1\125\1\127\1\125\1\0"+
    "\1\u0135\3\0\2\125\13\0\1\125\1\0\1\125\1\0"+
    "\26\125\2\0\10\125\16\0\1\125\1\0\2\125\2\0"+
    "\1\125\1\127\1\125\1\0\1\125\3\0\2\125\13\0"+
    "\1\125\1\0\1\125\1\0\20\125\1\u0136\5\125\2\0"+
    "\10\125\16\0\1\125\1\0\2\125\2\0\1\125\1\127"+
    "\1\125\1\0\1\125\3\0\2\125\13\0\1\125\1\0"+
    "\1\125\1\0\13\125\1\u0137\12\125\2\0\7\125\1\u0137"+
    "\16\0\1\125\1\0\2\125\2\0\1\u0138\1\127\1\125"+
    "\1\0\1\125\3\0\2\125\13\0\1\125\1\0\1\125"+
    "\1\0\26\125\2\0\10\125\16\0\1\125\1\0\2\125"+
    "\2\0\1\125\1\127\1\125\1\0\1\125\3\0\2\125"+
    "\13\0\1\125\1\0\1\125\1\0\5\125\1\u0139\20\125"+
    "\2\0\10\125\16\0\1\125\1\0\2\125\2\0\1\125"+
    "\1\127\1\125\1\0\1\125\3\0\2\125\13\0\1\125"+
    "\1\0\1\125\1\0\16\125\1\u013a\7\125\2\0\3\125"+
    "\1\u013a\4\125\16\0\1\125\1\0\2\6\2\0\1\6"+
    "\1\71\1\6\1\0\1\6\3\0\2\6\13\0\1\6"+
    "\1\0\1\6\1\72\26\6\1\0\1\73\5\6\1\u013b"+
    "\2\6\16\0\1\6\1\0\2\53\2\0\1\u013c\1\54"+
    "\4\53\2\0\3\53\5\0\40\53\1\0\25\53\1\0"+
    "\2\53\10\0\1\242\105\0\1\u013d\2\0\1\u013d\24\0"+
    "\1\u013d\1\0\1\u013d\1\0\5\u013d\23\0\1\u013d\27\0"+
    "\2\6\2\0\1\6\1\71\1\6\1\0\1\6\3\0"+
    "\2\6\13\0\1\6\1\0\1\6\1\72\7\6\1\u013e"+
    "\16\6\1\0\1\73\5\6\1\u013e\2\6\16\0\1\6"+
    "\51\0\1\u013f\23\0\1\u013f\20\0\2\125\2\0\1\125"+
    "\1\127\1\125\1\0\1\125\3\0\2\125\13\0\1\125"+
    "\1\0\1\125\1\0\2\125\1\u0140\23\125\2\0\10\125"+
    "\16\0\1\125\1\0\2\125\2\0\1\125\1\127\1\125"+
    "\1\0\1\125\3\0\2\125\13\0\1\125\1\0\1\125"+
    "\1\0\10\125\1\136\15\125\2\0\10\125\16\0\1\125"+
    "\1\0\2\125\2\0\1\125\1\127\1\125\1\0\1\u0141"+
    "\3\0\2\125\13\0\1\125\1\0\1\125\1\0\26\125"+
    "\2\0\10\125\16\0\1\125\1\0\2\125\2\0\1\125"+
    "\1\127\1\125\1\0\1\125\3\0\2\125\13\0\1\125"+
    "\1\0\1\125\1\0\12\125\1\u0142\4\125\1\u0143\6\125"+
    "\2\0\4\125\1\u0143\3\125\16\0\1\125\1\0\2\125"+
    "\2\0\1\125\1\127\1\125\1\0\1\u0144\3\0\2\125"+
    "\13\0\1\125\1\0\1\125\1\0\26\125\2\0\10\125"+
    "\16\0\1\125\1\0\2\125\2\0\1\125\1\127\1\125"+
    "\1\0\1\125\3\0\2\125\13\0\1\125\1\0\1\125"+
    "\1\0\20\125\1\u0145\5\125\2\0\10\125\16\0\1\125"+
    "\1\0\2\125\2\0\1\125\1\127\1\125\1\0\1\125"+
    "\3\0\2\125\13\0\1\125\1\0\1\125\1\0\4\125"+
    "\1\u0146\21\125\2\0\1\u0146\7\125\16\0\1\125\1\0"+
    "\2\125\2\0\1\125\1\127\1\125\1\0\1\125\3\0"+
    "\2\125\13\0\1\125\1\0\1\125\1\0\20\125\1\u0147"+
    "\5\125\2\0\10\125\16\0\1\125\1\0\2\125\2\0"+
    "\1\125\1\127\1\125\1\0\1\125\3\0\2\125\13\0"+
    "\1\125\1\0\1\125\1\0\3\125\1\u0148\22\125\2\0"+
    "\10\125\16\0\1\125\1\0\2\125\2\0\1\125\1\127"+
    "\1\125\1\0\1\125\3\0\2\125\13\0\1\125\1\0"+
    "\1\125\1\0\15\125\1\u0149\10\125\2\0\2\125\1\u0149"+
    "\5\125\16\0\1\125\1\0\2\125\2\0\1\125\1\127"+
    "\1\125\1\0\1\125\3\0\2\125\13\0\1\125\1\0"+
    "\1\125\1\0\2\125\1\u014a\23\125\2\0\10\125\16\0"+
    "\1\125\1\0\2\125\2\0\1\125\1\127\1\125\1\0"+
    "\1\125\3\0\2\125\13\0\1\125\1\0\1\125\1\0"+
    "\17\125\1\u014b\6\125\2\0\4\125\1\u014b\3\125\16\0"+
    "\1\125\1\0\2\125\2\0\1\125\1\127\1\125\1\0"+
    "\1\125\3\0\2\125\13\0\1\125\1\0\1\125\1\0"+
    "\17\125\1\u014c\6\125\2\0\4\125\1\u014c\3\125\16\0"+
    "\1\125\1\0\2\125\2\0\1\125\1\127\1\125\1\0"+
    "\1\125\3\0\2\125\13\0\1\125\1\0\1\125\1\0"+
    "\20\125\1\u014d\5\125\2\0\10\125\16\0\1\125\1\0"+
    "\2\125\2\0\1\125\1\127\1\125\1\0\1\125\3\0"+
    "\2\125\13\0\1\125\1\0\1\125\1\0\20\125\1\u014e"+
    "\5\125\2\0\10\125\16\0\1\125\1\0\2\125\2\0"+
    "\1\125\1\127\1\125\1\0\1\125\3\0\2\125\13\0"+
    "\1\125\1\0\1\125\1\0\6\125\1\u0138\17\125\2\0"+
    "\10\125\16\0\1\125\1\0\2\125\2\0\1\125\1\127"+
    "\1\125\1\0\1\125\3\0\2\125\13\0\1\125\1\0"+
    "\1\125\1\0\20\125\1\u014f\5\125\2\0\10\125\16\0"+
    "\1\125\1\0\2\6\2\0\1\6\1\71\1\6\1\0"+
    "\1\6\3\0\2\6\13\0\1\6\1\0\1\6\1\72"+
    "\26\6\1\0\1\73\6\6\1\u0150\1\6\16\0\1\6"+
    "\1\0\2\53\2\0\1\53\1\54\4\53\2\0\3\53"+
    "\5\0\20\53\1\u0151\17\53\1\0\5\53\1\u0151\17\53"+
    "\1\0\2\53\1\0\1\u0125\2\0\1\u0125\24\0\1\u0125"+
    "\1\0\1\u0125\1\0\5\u0125\23\0\1\u0125\27\0\2\6"+
    "\2\0\1\6\1\71\1\6\1\0\1\6\3\0\2\6"+
    "\13\0\1\6\1\0\1\6\1\72\24\6\1\357\1\6"+
    "\1\0\1\73\1\6\1\357\6\6\16\0\1\6\56\0"+
    "\1\u0152\37\0\2\125\2\0\1\125\1\127\1\125\1\0"+
    "\1\125\3\0\2\125\13\0\1\125\1\0\1\125\1\0"+
    "\4\125\1\u0153\21\125\2\0\1\u0153\7\125\16\0\1\125"+
    "\1\0\2\125\2\0\1\125\1\127\1\125\1\0\1\125"+
    "\3\0\2\125\13\0\1\125\1\0\1\125\1\0\10\125"+
    "\1\136\5\125\1\u0154\3\125\1\322\3\125\2\0\3\125"+
    "\1\u0154\4\125\16\0\1\125\1\0\2\125\2\0\1\125"+
    "\1\127\1\125\1\0\1\125\3\0\2\125\13\0\1\125"+
    "\1\0\1\125\1\0\4\125\1\u0155\21\125\2\0\1\u0155"+
    "\7\125\16\0\1\125\1\0\2\125\2\0\1\125\1\127"+
    "\1\125\1\0\1\125\3\0\2\125\13\0\1\125\1\0"+
    "\1\125\1\0\4\125\1\u0156\21\125\2\0\1\u0156\7\125"+
    "\16\0\1\125\1\0\2\125\2\0\1\125\1\127\1\125"+
    "\1\0\1\125\3\0\2\125\13\0\1\125\1\0\1\125"+
    "\1\0\17\125\1\u0157\6\125\2\0\4\125\1\u0157\3\125"+
    "\16\0\1\125\1\0\2\125\2\0\1\125\1\127\1\125"+
    "\1\0\1\125\3\0\2\125\13\0\1\125\1\0\1\125"+
    "\1\0\17\125\1\u0158\6\125\2\0\4\125\1\u0158\3\125"+
    "\16\0\1\125\1\0\2\125\2\0\1\125\1\127\1\125"+
    "\1\0\1\125\3\0\2\125\13\0\1\125\1\0\1\125"+
    "\1\0\20\125\1\u0159\5\125\2\0\10\125\16\0\1\125"+
    "\1\0\2\125\2\0\1\125\1\127\1\125\1\0\1\125"+
    "\3\0\2\125\13\0\1\125\1\0\1\125\1\0\3\125"+
    "\1\u015a\22\125\2\0\10\125\16\0\1\125\1\0\2\125"+
    "\2\0\1\125\1\127\1\125\1\0\1\125\3\0\2\125"+
    "\13\0\1\125\1\0\1\125\1\0\4\125\1\u015b\21\125"+
    "\2\0\1\u015b\7\125\16\0\1\125\1\0\2\125\2\0"+
    "\1\125\1\127\1\125\1\0\1\125\3\0\2\125\13\0"+
    "\1\125\1\0\1\125\1\0\20\125\1\u015c\5\125\2\0"+
    "\10\125\16\0\1\125\1\0\2\125\2\0\1\125\1\127"+
    "\1\125\1\0\1\125\3\0\2\125\13\0\1\125\1\0"+
    "\1\125\1\0\4\125\1\u015d\21\125\2\0\1\u015d\7\125"+
    "\16\0\1\125\1\0\2\125\2\0\1\125\1\127\1\125"+
    "\1\0\1\u015e\3\0\2\125\13\0\1\125\1\0\1\125"+
    "\1\0\26\125\2\0\10\125\16\0\1\125\1\0\2\6"+
    "\2\0\1\6\1\71\1\6\1\0\1\6\3\0\2\6"+
    "\13\0\1\6\1\0\1\6\1\72\26\6\1\0\1\73"+
    "\7\6\1\u015f\16\0\1\6\1\0\2\53\2\0\1\53"+
    "\1\54\4\53\2\0\3\53\5\0\35\53\1\u0109\2\53"+
    "\1\0\1\53\1\u0109\23\53\1\0\2\53\2\125\2\0"+
    "\1\125\1\127\1\125\1\0\1\125\3\0\2\125\13\0"+
    "\1\125\1\0\1\125\1\0\4\125\1\225\21\125\2\0"+
    "\1\225\7\125\16\0\1\125\1\0\2\125\2\0\1\125"+
    "\1\127\1\125\1\0\1\125\3\0\2\125\13\0\1\125"+
    "\1\0\1\125\1\0\3\125\1\u0160\22\125\2\0\10\125"+
    "\16\0\1\125\1\0\2\125\2\0\1\125\1\127\1\125"+
    "\1\0\1\125\3\0\2\125\13\0\1\125\1\0\1\125"+
    "\1\0\11\125\1\u0161\14\125\2\0\10\125\16\0\1\125"+
    "\1\0\2\125\2\0\1\125\1\127\1\125\1\0\1\125"+
    "\3\0\2\125\13\0\1\125\1\0\1\125\1\0\20\125"+
    "\1\u0162\5\125\2\0\10\125\16\0\1\125\1\0\2\125"+
    "\2\0\1\125\1\127\1\125\1\0\1\125\3\0\2\125"+
    "\13\0\1\125\1\0\1\125\1\0\14\125\1\u0163\11\125"+
    "\2\0\6\125\1\u0163\1\125\16\0\1\125\1\0\2\125"+
    "\2\0\1\125\1\127\1\125\1\0\1\125\3\0\2\125"+
    "\13\0\1\125\1\0\1\125\1\0\11\125\1\u0164\14\125"+
    "\2\0\10\125\16\0\1\125\1\0\2\125\2\0\1\125"+
    "\1\127\1\125\1\0\1\125\3\0\2\125\13\0\1\125"+
    "\1\0\1\125\1\0\25\125\1\u0165\2\0\10\125\16\0"+
    "\1\125\1\0\2\125\2\0\1\125\1\127\1\125\1\0"+
    "\1\125\3\0\2\125\13\0\1\125\1\0\1\125\1\0"+
    "\16\125\1\u0149\7\125\2\0\3\125\1\u0149\4\125\16\0"+
    "\1\125\1\0\2\125\2\0\1\125\1\127\1\125\1\0"+
    "\1\125\3\0\2\125\13\0\1\125\1\0\1\125\1\0"+
    "\2\125\1\u0166\23\125\2\0\10\125\16\0\1\125\1\0"+
    "\2\6\2\0\1\6\1\71\1\6\1\0\1\6\3\0"+
    "\2\6\13\0\1\6\1\0\1\6\1\72\26\6\1\0"+
    "\1\u0167\10\6\16\0\1\6\1\0\2\125\2\0\1\125"+
    "\1\127\1\125\1\0\1\125\3\0\2\125\13\0\1\125"+
    "\1\0\1\125\1\0\7\125\1\u0168\16\125\2\0\5\125"+
    "\1\u0168\2\125\16\0\1\125\1\0\2\125\2\0\1\125"+
    "\1\127\1\125\1\0\1\125\3\0\2\125\13\0\1\125"+
    "\1\0\1\125\1\0\4\125\1\u0169\21\125\2\0\1\u0169"+
    "\7\125\16\0\1\125\1\0\2\125\2\0\1\125\1\127"+
    "\1\125\1\0\1\125\3\0\2\125\13\0\1\125\1\0"+
    "\1\125\1\0\25\125\1\u016a\2\0\10\125\16\0\1\125"+
    "\1\0\2\125\2\0\1\125\1\127\1\125\1\0\1\125"+
    "\3\0\2\125\13\0\1\125\1\0\1\125\1\0\12\125"+
    "\1\u0149\13\125\2\0\10\125\16\0\1\125\1\0\2\125"+
    "\2\0\1\125\1\127\1\125\1\0\1\125\3\0\2\125"+
    "\13\0\1\125\1\0\1\125\1\0\4\125\1\u0149\21\125"+
    "\2\0\1\u0149\7\125\16\0\1\125\1\0\2\125\2\0"+
    "\1\125\1\127\1\125\1\0\1\125\3\0\2\125\13\0"+
    "\1\125\1\0\1\125\1\0\11\125\1\u016b\14\125\2\0"+
    "\10\125\16\0\1\125\1\0\2\125\2\0\1\125\1\127"+
    "\1\125\1\0\1\125\3\0\2\125\13\0\1\125\1\0"+
    "\1\125\1\0\14\125\1\u016c\11\125\2\0\6\125\1\u016c"+
    "\1\125\16\0\1\125\1\0\2\125\2\0\1\125\1\127"+
    "\1\125\1\0\1\125\3\0\2\125\13\0\1\125\1\0"+
    "\1\125\1\0\1\u016d\25\125\2\0\10\125\16\0\1\125"+
    "\1\0\2\125\2\0\1\125\1\127\1\125\1\0\1\125"+
    "\3\0\2\125\13\0\1\125\1\0\1\125\1\0\2\125"+
    "\1\u016e\23\125\2\0\10\125\16\0\1\125\1\0\2\125"+
    "\2\0\1\125\1\127\1\125\1\0\1\125\3\0\2\125"+
    "\13\0\1\125\1\0\1\125\1\0\11\125\1\u016f\14\125"+
    "\2\0\10\125\16\0\1\125\1\0\2\125\2\0\1\125"+
    "\1\127\1\125\1\0\1\125\3\0\2\125\13\0\1\125"+
    "\1\0\1\125\1\0\4\125\1\u0170\21\125\2\0\1\u0170"+
    "\7\125\16\0\1\125\1\0\2\125\2\0\1\125\1\127"+
    "\1\125\1\0\1\125\3\0\2\125\13\0\1\125\1\0"+
    "\1\125\1\0\16\125\1\u0171\7\125\2\0\3\125\1\u0171"+
    "\4\125\16\0\1\125\1\0\2\125\2\0\1\125\1\127"+
    "\1\125\1\0\1\125\3\0\2\125\13\0\1\125\1\0"+
    "\1\125\1\0\20\125\1\u0172\5\125\2\0\10\125\16\0"+
    "\1\125\1\0\2\125\2\0\1\125\1\127\1\125\1\0"+
    "\1\125\3\0\2\125\13\0\1\125\1\0\1\125\1\0"+
    "\4\125\1\u0173\21\125\2\0\1\u0173\7\125\16\0\1\125"+
    "\1\0\2\125\2\0\1\125\1\127\1\125\1\0\1\125"+
    "\3\0\2\125\13\0\1\125\1\0\1\125\1\0\13\125"+
    "\1\u014d\12\125\2\0\7\125\1\u014d\16\0\1\125\1\0"+
    "\2\125\2\0\1\125\1\127\1\125\1\0\1\125\3\0"+
    "\2\125\13\0\1\125\1\0\1\125\1\0\14\125\1\u0174"+
    "\11\125\2\0\6\125\1\u0174\1\125\16\0\1\125\1\0"+
    "\2\125\2\0\1\125\1\127\1\125\1\0\1\125\3\0"+
    "\2\125\13\0\1\125\1\0\1\125\1\0\16\125\1\u0175"+
    "\7\125\2\0\3\125\1\u0175\4\125\16\0\1\125\1\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[23485];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String[] ZZ_ERROR_MSG = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\1\3\0\3\1\1\11\2\1\1\11\1\1"+
    "\1\11\4\1\1\11\1\1\1\11\5\1\1\11\1\1"+
    "\4\11\2\1\2\11\1\1\1\11\3\1\1\11\3\1"+
    "\1\11\4\1\2\0\3\11\1\1\2\0\1\11\1\0"+
    "\2\1\1\0\1\1\1\0\4\1\1\11\2\1\2\0"+
    "\1\11\3\0\1\1\1\11\2\0\1\11\3\1\2\0"+
    "\17\1\3\11\1\0\4\11\2\1\1\11\2\1\1\0"+
    "\3\1\1\11\2\1\2\0\2\11\2\0\33\1\1\0"+
    "\2\1\1\11\1\1\1\0\2\1\1\11\2\1\2\0"+
    "\33\1\1\11\6\1\1\11\1\0\40\1\1\0\37\1"+
    "\1\0\26\1\1\11\2\1\1\0\26\1\1\0\22\1"+
    "\1\11\24\1\1\11\16\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[373];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private CharSequence zzBuffer = "";

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /**
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
  public _PostCssLexer() {
    this((java.io.Reader)null);
  }


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public _PostCssLexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    int size = 0;
    for (int i = 0, length = packed.length(); i < length; i += 2) {
      size += packed.charAt(i);
    }
    char[] map = new char[size];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < packed.length()) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }

  public final int getTokenStart() {
    return zzStartRead;
  }

  public final int getTokenEnd() {
    return getTokenStart() + yylength();
  }

  public void reset(CharSequence buffer, int start, int end, int initialState) {
    zzBuffer = buffer;
    zzCurrentPos = zzMarkedPos = zzStartRead = start;
    zzAtEOF  = false;
    zzAtBOL = true;
    zzEndRead = end;
    yybegin(initialState);
  }

  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   *
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {
    return true;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final CharSequence yytext() {
    return zzBuffer.subSequence(zzStartRead, zzMarkedPos);
  }


  /**
   * Returns the character at position <tt>pos</tt> from the
   * matched text.
   *
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch.
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer.charAt(zzStartRead+pos);
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of
   * yypushback(int) and a match-all fallback rule) this method
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  }


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public IElementType advance() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    CharSequence zzBufferL = zzBuffer;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {

          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL/*, zzEndReadL*/);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL/*, zzEndReadL*/);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + ZZ_CMAP(zzInput) ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { return CssElementTypes.CSS_URL;
            }
          case 79: break;
          case 2: 
            { return CssElementTypes.CSS_IDENT;
            }
          case 80: break;
          case 3: 
            { return CssElementTypes.CSS_NUMBER;
            }
          case 81: break;
          case 4: 
            { return CssElementTypes.CSS_WHITE_SPACE;
            }
          case 82: break;
          case 5: 
            { return CssElementTypes.CSS_BAD_CHARACTER;
            }
          case 83: break;
          case 6: 
            { return CssElementTypes.CSS_PLUS;
            }
          case 84: break;
          case 7: 
            { return CssElementTypes.CSS_MINUS;
            }
          case 85: break;
          case 8: 
            { return CssElementTypes.CSS_RPAREN;
            }
          case 86: break;
          case 9: 
            { return CssElementTypes.CSS_PERIOD;
            }
          case 87: break;
          case 10: 
            { return CssElementTypes.CSS_STRING_TOKEN;
            }
          case 88: break;
          case 11: 
            { return PostCssTokenTypes.HASH_SIGN;
            }
          case 89: break;
          case 12: 
            { return CssElementTypes.CSS_LBRACE;
            }
          case 90: break;
          case 13: 
            { return CssElementTypes.CSS_RBRACE;
            }
          case 91: break;
          case 14: 
            { return CssElementTypes.CSS_SLASH;
            }
          case 92: break;
          case 15: 
            { return CssElementTypes.CSS_LPAREN;
            }
          case 93: break;
          case 16: 
            { return CssElementTypes.CSS_COLON;
            }
          case 94: break;
          case 17: 
            { return CssElementTypes.CSS_SEMICOLON;
            }
          case 95: break;
          case 18: 
            { return CssElementTypes.CSS_COMMA;
            }
          case 96: break;
          case 19: 
            { return CssElementTypes.CSS_PERCENT;
            }
          case 97: break;
          case 20: 
            { return CssElementTypes.CSS_GT;
            }
          case 98: break;
          case 21: 
            { return CssElementTypes.CSS_ASTERISK;
            }
          case 99: break;
          case 22: 
            { return CssElementTypes.CSS_LBRACKET;
            }
          case 100: break;
          case 23: 
            { return CssElementTypes.CSS_RBRACKET;
            }
          case 101: break;
          case 24: 
            { return CssElementTypes.CSS_TILDA;
            }
          case 102: break;
          case 25: 
            { return CssElementTypes.CSS_EQ;
            }
          case 103: break;
          case 26: 
            { return PostCssTokenTypes.LT;
            }
          case 104: break;
          case 27: 
            { return CssElementTypes.CSS_PIPE;
            }
          case 105: break;
          case 28: 
            { return CssElementTypes.CSS_HAT;
            }
          case 106: break;
          case 29: 
            { return PostCssTokenTypes.AMPERSAND;
            }
          case 107: break;
          case 30: 
            { yybegin(YYINITIAL); return CssElementTypes.CSS_RPAREN;
            }
          case 108: break;
          case 31: 
            { yybegin(YYINITIAL); return CssElementTypes.CSS_FUNCTION_TOKEN;
            }
          case 109: break;
          case 32: 
            { yybegin(YYINITIAL); return CssElementTypes.CSS_IDENT;
            }
          case 110: break;
          case 33: 
            { return CssElementTypes.CSS_COMMENT;
            }
          case 111: break;
          case 34: 
            { yybegin(CSS_FUNCTION); yypushback(yylength());
            }
          case 112: break;
          case 35: 
            { yybegin(CSS_FUNCTION_MINUS_N); yypushback(yylength());
            }
          case 113: break;
          case 36: 
            { return CssElementTypes.CSS_HASH;
            }
          case 114: break;
          case 37: 
            { return CssElementTypes.CSS_ENDS_WITH;
            }
          case 115: break;
          case 38: 
            { return PostCssTokenTypes.POST_CSS_COMMENT;
            }
          case 116: break;
          case 39: 
            { yybegin(CSS_COMMENT); return CssElementTypes.CSS_COMMENT;
            }
          case 117: break;
          case 40: 
            { return CssElementTypes.CSS_JQUERY_NOT_EQUALS;
            }
          case 118: break;
          case 41: 
            { return CssElementTypes.CSS_ATKEYWORD;
            }
          case 119: break;
          case 42: 
            { return PostCssTokenTypes.GE;
            }
          case 120: break;
          case 43: 
            { return CssElementTypes.CSS_CONTAINS;
            }
          case 121: break;
          case 44: 
            { return CssElementTypes.CSS_INCLUDES;
            }
          case 122: break;
          case 45: 
            { return PostCssTokenTypes.LE;
            }
          case 123: break;
          case 46: 
            { return CssElementTypes.CSS_DASHMATCH;
            }
          case 124: break;
          case 47: 
            { return CssElementTypes.CSS_BEGINS_WITH;
            }
          case 125: break;
          case 48: 
            { return CssElementTypes.CSS_CAT;
            }
          case 126: break;
          case 49: 
            { yybegin(YYINITIAL); return CssElementTypes.CSS_COMMENT;
            }
          case 127: break;
          case 50: 
            { if(StringUtil.endsWith(yytext(), "\\0") || StringUtil.endsWith(yytext(), "\\9")) yypushback(2); else yypushback(3); return CssElementTypes.CSS_IDENT;
            }
          case 128: break;
          case 51: 
            { return CssElementTypes.CSS_UNICODE_RANGE;
            }
          case 129: break;
          case 52: 
            { return CssElementTypes.CSS_CDC;
            }
          case 130: break;
          case 53: 
            { return CssElementTypes.CSS_SLASHED_COMBINATOR;
            }
          case 131: break;
          case 54: 
            { return CssElementTypes.CSS_URI_START;
            }
          case 132: break;
          case 55: 
            { yybegin(CSS_URI); yypushback(yylength());
            }
          case 133: break;
          case 56: 
            { if(StringUtil.endsWith(yytext(), "\\0") || StringUtil.endsWith(yytext(), "\\9")) yypushback(2); else yypushback(3); return CssElementTypes.CSS_HASH;
            }
          case 134: break;
          case 57: 
            { return CssElementTypes.CSS_CDO;
            }
          case 135: break;
          case 58: 
            { return PostCssTokenTypes.POST_CSS_NEST_SYM;
            }
          case 136: break;
          case 59: 
            { return CssElementTypes.CSS_PAGE_SYM;
            }
          case 137: break;
          case 60: 
            { return CssElementTypes.CSS_APPLY_SYM;
            }
          case 138: break;
          case 61: 
            { return CssElementTypes.CSS_MEDIA_SYM;
            }
          case 139: break;
          case 62: 
            { return CssElementTypes.CSS_SCOPE_SYM;
            }
          case 140: break;
          case 63: 
            { return CssElementTypes.CSS_VALUE_SYM;
            }
          case 141: break;
          case 64: 
            { return CssElementTypes.CSS_IMPORT_SYM;
            }
          case 142: break;
          case 65: 
            { return CssElementTypes.CSS_REGION_SYM;
            }
          case 143: break;
          case 66: 
            { return CssElementTypes.CSS_CHARSET_SYM;
            }
          case 144: break;
          case 67: 
            { return CssElementTypes.CSS_DOCUMENT_SYM;
            }
          case 145: break;
          case 68: 
            { return CssElementTypes.CSS_PAGE_MARGIN_SYM;
            }
          case 146: break;
          case 69: 
            { return CssElementTypes.CSS_SUPPORTS_SYM;
            }
          case 147: break;
          case 70: 
            { return CssElementTypes.CSS_VIEWPORT_SYM;
            }
          case 148: break;
          case 71: 
            { return CssElementTypes.CSS_IMPORTANT;
            }
          case 149: break;
          case 72: 
            { return CssElementTypes.CSS_FONTFACE_SYM;
            }
          case 150: break;
          case 73: 
            { return CssElementTypes.CSS_KEYFRAMES_SYM;
            }
          case 151: break;
          case 74: 
            { return CssElementTypes.CSS_NAMESPACE_SYM;
            }
          case 152: break;
          case 75: 
            { yypushback(1); return CssElementTypes.CSS_EXPRESSION;
            }
          case 153: break;
          case 76: 
            { return PostCssTokenTypes.POST_CSS_CUSTOM_MEDIA_SYM;
            }
          case 154: break;
          case 77: 
            { return CssElementTypes.CSS_COUNTER_STYLE_SYM;
            }
          case 155: break;
          case 78: 
            { return PostCssTokenTypes.POST_CSS_CUSTOM_SELECTOR_SYM;
            }
          case 156: break;
          default:
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
