<local:/*base*/ xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:local="*"
                            implements="org.flexunit.runner.notification.IRunListener">
    <mx:Script><![CDATA[
        import org.flexunit.runner.FlexUnitCore;
        import org.flexunit.runner.IDescription;
        import org.flexunit.runner.Result;
        import org.flexunit.runner.Request;
        import org.flexunit.runner.notification.Failure;
        import mx.logging.Log;
        import mx.logging.LogEventLevel;

        /*imports*/

        protected override function getPort():Number {
            return 0/*port*/;
        }

        protected override function getSocketPolicyPort():Number {
            return 0/*socketPolicyPort*/;
        }

        protected override function getModule():String {
            return "/*module*/";
        }

        protected override function runTests():void {
            if (/*logEnabled*/) {
                var __logTarget__ : /*logTargetClass*/ = new /*logTargetClass*/(this, onLogMessage);
                __logTarget__.level = mx.logging.LogEventLevel./*logLevel*/;
                mx.logging.Log.addTarget(__logTarget__);
            }

            var __core__ : org.flexunit.runner.FlexUnitCore = new org.flexunit.runner.FlexUnitCore();
            __core__.addListener(this);

            var __testSuite__:Array = new Array();
            /*code*/

            __core__.run(__testSuite__);
        }

        public function testRunStarted(__description__: org.flexunit.runner.IDescription):void {
            onRunStarted(__description__.testCount);
        }

        public function testRunFinished(__result__: org.flexunit.runner.Result):void {
            onRunFinished();
        }

        public function testAssumptionFailure(__failure__: org.flexunit.runner.notification.Failure):void {
            testFailure(__failure__);
        }

        public function testFailure(__failure__: org.flexunit.runner.notification.Failure):void {
            onTestFailed(__failure__.description.displayName, __failure__.message, __failure__.stackTrace);
        }

        public function testIgnored(__description__: org.flexunit.runner.IDescription):void {
            onTestIgnored(__description__.displayName);
        }

        public function testFinished(__description__: org.flexunit.runner.IDescription):void {
            onTestFinished(__description__.displayName);
        }

        public function testStarted(__description__: org.flexunit.runner.IDescription):void {
            onTestStarted(__description__.displayName);
        }

        protected override function closeApp():void {
            /*closeApp*/;
        }

        ]]></mx:Script>
</local:/*base*/>
