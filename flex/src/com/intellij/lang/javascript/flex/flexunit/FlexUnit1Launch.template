<local:/*base*/ xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:local="*"
                            implements="flexunit.framework.TestListener">
    <mx:Script><![CDATA[
        import flexunit.framework.AssertionFailedError;
        import flexunit.framework.Test;
        import flexunit.framework.TestCase;
        import flexunit.framework.TestResult;
        import flexunit.framework.TestSuite;
        import mx.logging.Log;
        import mx.logging.LogEventLevel;

        /*imports*/

        protected override function getPort():Number {
            return 0/*port*/;
        }

        protected override function getSocketPolicyPort():Number {
            return 0/*socketPolicyPort*/;
        }

        protected override function getModule():String {
            return "/*module*/";
        }

        protected override function runTests():void {
            if (/*logEnabled*/) {
                var __logTarget__ : /*logTargetClass*/ = new /*logTargetClass*/(this, onLogMessage);
                __logTarget__.level = mx.logging.LogEventLevel./*logLevel*/;
                mx.logging.Log.addTarget(__logTarget__);
            }

            var __testSuite__ : flexunit.framework.TestSuite = new flexunit.framework.TestSuite();

            /*code*/

            onRunStarted(__testSuite__.countTestCases());

            var __testResult__ : flexunit.framework.TestResult = new flexunit.framework.TestResult();
            __testResult__.addListener(this);
            __testSuite__.runWithResult(__testResult__);
        }


        public function startTest(__test__: flexunit.framework.Test):void {
            onTestStarted(getTestInfo(__test__));
        }

        public function addError(__test__: flexunit.framework.Test, __error__:Error):void {
            onTestFailed(getTestInfo(__test__), __error__.message, __error__.getStackTrace());
        }

        public function addFailure(__test__: flexunit.framework.Test, __error__:flexunit.framework.AssertionFailedError):void {
            addError(__test__, __error__);
        }

        public function endTest(__test__: flexunit.framework.Test):void {
            onTestFinished(getTestInfo(__test__));
        }

        private static function getTestInfo(__test__: flexunit.framework.Test) : String {
            return __test__.className + "." + (__test__ as flexunit.framework.TestCase).methodName;
        }

        protected override function closeApp():void {
            /*closeApp*/;
        }

        ]]></mx:Script>
</local:/*base*/>
