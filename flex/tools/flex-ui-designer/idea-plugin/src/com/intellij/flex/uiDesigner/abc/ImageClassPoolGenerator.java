package com.intellij.flex.uiDesigner.abc;

import java.io.IOException;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.channels.FileChannel;

public class ImageClassPoolGenerator extends AbcEncoder {
  private static final ThreadLocal<ByteBuffer> BUFFER = new ThreadLocal<ByteBuffer>() {
    protected ByteBuffer initialValue() {
      final ByteBuffer buffer = ByteBuffer.allocate(4 * 1024);
      buffer.order(ByteOrder.LITTLE_ENDIAN);
      return buffer;
    }
  };
  
  private static final byte[] P1 = {0x10, 0x00, 0x2e, 0x00 /* u16 minor_version, u16 major_version */, 0x00, 0x00, 0x00 /* Integer/Unsigned/Floating empty pools*/};
  private static final byte[] STRING_POOL = {0x00, 0x04, 0x64, 0x61, 0x74, 0x61, 0x0D, 0x66, 0x6C, 0x61, 0x73, 0x68, 0x2E, 0x64, 0x69, 0x73,
    0x70, 0x6C, 0x61, 0x79, 0x0A, 0x42, 0x69, 0x74, 0x6D, 0x61, 0x70, 0x44, 0x61, 0x74, 0x61, 0x07, 0x6D, 0x78, 0x2E, 0x63, 0x6F, 0x72,
    0x65, 0x0B, 0x42, 0x69, 0x74, 0x6D, 0x61, 0x70, 0x41, 0x73, 0x73, 0x65, 0x74, 0x06, 0x4F, 0x62, 0x6A, 0x65, 0x63, 0x74, 0x0F, 0x45,
    0x76, 0x65, 0x6E, 0x74, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x0C, 0x66, 0x6C, 0x61, 0x73, 0x68, 0x2E, 0x65,
    0x76, 0x65, 0x6E, 0x74, 0x73, 0x0D, 0x44, 0x69, 0x73, 0x70, 0x6C, 0x61, 0x79, 0x4F, 0x62, 0x6A, 0x65, 0x63, 0x74, 0x06, 0x42, 0x69,
    0x74, 0x6D, 0x61, 0x70, 0x0A, 0x46, 0x6C, 0x65, 0x78, 0x42, 0x69, 0x74, 0x6D, 0x61, 0x70};

  private static final byte[] NAMESPACE_POOL = {0x07 /* count */, 0x05, 0x01, 0x16, 0x01, 0x16, 0x03, 0x16, 0x05, 0x18, 0x01, 0x16, 0x09, /*begin  empty namespace set*/ 0x00};

  private static final byte[] MULTINAME_POOL = {0x07, 0x02, 0x02, 0x07, 0x03, 0x04, 0x7, 0x04, 0x06, 0x07, 0x02, 0x07, 0x07, 0x06, 0x08, 0x07, 0x03, 0x0A, 0x07, 0x03, 0x0B, 0x07, 0x03, 0x0C};

  public ImageClassPoolGenerator() {
    buffer = BUFFER.get();
  }

  public void generate(FileChannel outFileChannel) throws IOException {
    buffer.putInt(1);
    writeSwfString('_');
    buffer.put(P1);

    // string pool
    writeU30(13 + 1);
    buffer.put(STRING_POOL);
    
    buffer.put((byte)3);
    buffer.put((byte)'_');
    buffer.put((byte)'b');
    buffer.put((byte)'1');

    // namespace and namespace set pools
    buffer.put(NAMESPACE_POOL);

    // multiName pool
    writeU30(9 + 1);
    buffer.put(MULTINAME_POOL);
    buffer.put((byte)0x07);
    buffer.put((byte)0x02);

    buffer.flip();
    outFileChannel.write(buffer);
    buffer.clear();

    buffer.limit(buffer.position() - 6);
            //buffer.position(la stWrittenPosition);
            outFileChannel.write(buffer);
  }
}
