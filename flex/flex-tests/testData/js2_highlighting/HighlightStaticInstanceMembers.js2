var <info descr="global variable">globalVar</info>:int;

class <info>SampleClass</info> {
    static var <info descr="static field">staticField</info>:int;
    static function <info descr="static method">staticMethod</info>():void {}
    function <info descr="instance method">instanceMethod</info>(<info descr="parameter">p</info>):int {}
    var <info descr="field">instanceField</info>:int;
}

function <info descr="global function">testFun</info>(<info descr="parameter">param</info>:int):void {
    <info>SampleClass</info>.<info descr="static field">staticField</info> = <info descr="global variable">globalVar</info>
    <info>SampleClass</info>.<info descr="static method">staticMethod</info>();
    var <info descr="local variable">a</info>:<info>SampleClass</info>;
    <info descr="local variable">a</info>.<info descr="instance method">instanceMethod</info>(<info descr="parameter">param</info>)
    <info descr="local variable">a</info>.<info descr="field">instanceField</info> = 1
}

class <info>SomeConstants</info> {
    public static const <info descr="static field">SOME_CONST</info>:<info>String</info> = "test";
}

class <info>Foo2</info> {
    public function <info descr="instance method">f</info>():void {
        var <info descr="local variable">aa</info>:<info>String</info> = <error>SOME_CONST</error>;
    }
}

class <lineMarker descr="Has subclasses"><info>Base</info></lineMarker> {
    var <info descr="field">x</info>;
    public static function  <info descr="static method">staticFunction</info>():void {}
}

class <info>Derived</info> extends <info>Base</info> {
    var <info descr="field">x2</info>;

    public static function  <info descr="static method">derivedStaticFunction</info>():void {
      <error descr="Instance member is not accessible">x</error> = 1;
      <error descr="Instance member is not accessible">x2</error> = 1;
      <info>Base</info>.<error descr="Instance member is not accessible">x</error> = 1;
      <info>Derived</info>.<error descr="Instance member is not accessible">x</error> = 1;
      <info>Derived</info>.<error descr="Instance member is not accessible">x2</error> = 1;
    }
}

<info>Base</info>.<info descr="static method">staticFunction</info>();
<info>Derived</info>.<info descr="static method">derivedStaticFunction</info>();
<info>Derived</info>.<error descr="Static member is not accessible">staticFunction</error>();
