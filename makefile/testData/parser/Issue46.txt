Makefile
  PsiComment(COMMENT)('#')
  PsiWhiteSpace('\n')
  PsiComment(COMMENT)('# Smokin' Guns Makefile based on')
  PsiWhiteSpace('\n')
  PsiComment(COMMENT)('# ioq3 Makefile')
  PsiWhiteSpace('\n')
  PsiComment(COMMENT)('#')
  PsiWhiteSpace('\n')
  PsiComment(COMMENT)('# GNU Make required')
  PsiWhiteSpace('\n')
  PsiComment(COMMENT)('#')
  PsiWhiteSpace('\n\n')
  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
    MakefileVariableImpl(VARIABLE)
      PsiElement(identifier)('COMPILE_PLATFORM')
    PsiElement(=)('=')
    MakefileVariableValueImpl(VARIABLE_VALUE)
      PsiElement(line)('$(shell uname|sed -e s/_.*//|tr '[:upper:]' '[:lower:]'|sed -e 's/\//_/g')')
  PsiWhiteSpace('\n\n')
  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
    MakefileVariableImpl(VARIABLE)
      PsiElement(identifier)('COMPILE_ARCH')
    PsiElement(=)('=')
    MakefileVariableValueImpl(VARIABLE_VALUE)
      PsiElement(line)('$(shell uname -m | sed -e s/i.86/x86/)')
  PsiWhiteSpace('\n\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifeq)('ifeq')
    PsiElement(condition)(' ($(COMPILE_PLATFORM),sunos)')
    PsiWhiteSpace('\n')
    PsiWhiteSpace('  ')
    PsiComment(COMMENT)('# Solaris uname and GNU uname differ')
    PsiWhiteSpace('\n')
    PsiWhiteSpace('  ')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('COMPILE_ARCH')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('$(shell uname -p | sed -e s/i.86/x86/)')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifeq)('ifeq')
    PsiElement(condition)(' ($(COMPILE_PLATFORM),darwin)')
    PsiWhiteSpace('\n')
    PsiWhiteSpace('  ')
    PsiComment(COMMENT)('# Apple does some things a little differently...')
    PsiWhiteSpace('\n')
    PsiWhiteSpace('  ')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('COMPILE_ARCH')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('$(shell uname -p | sed -e s/i.86/x86/)')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifndef)('ifndef')
    PsiElement(condition)(' BUILD_STANDALONE')
    PsiWhiteSpace('\n')
    PsiWhiteSpace('  ')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('BUILD_STANDALONE')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifndef)('ifndef')
    PsiElement(condition)(' BUILD_CLIENT')
    PsiWhiteSpace('\n')
    PsiWhiteSpace('  ')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('BUILD_CLIENT')
        PsiWhiteSpace('     ')
        PsiElement(=)('=')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifndef)('ifndef')
    PsiElement(condition)(' BUILD_SERVER')
    PsiWhiteSpace('\n')
    PsiWhiteSpace('  ')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('BUILD_SERVER')
        PsiWhiteSpace('     ')
        PsiElement(=)('=')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifndef)('ifndef')
    PsiElement(condition)(' BUILD_GAME_SO')
    PsiWhiteSpace('\n')
    PsiWhiteSpace('  ')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('BUILD_GAME_SO')
        PsiWhiteSpace('    ')
        PsiElement(=)('=')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifndef)('ifndef')
    PsiElement(condition)(' BUILD_GAME_QVM')
    PsiWhiteSpace('\n')
    PsiWhiteSpace('  ')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('BUILD_GAME_QVM')
        PsiWhiteSpace('   ')
        PsiElement(=)('=')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifndef)('ifndef')
    PsiElement(condition)(' BUILD_BASEGAME')
    PsiWhiteSpace('\n')
    PsiWhiteSpace('  ')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('BUILD_BASEGAME')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifndef)('ifndef')
    PsiElement(condition)(' BUILD_MISSIONPACK')
    PsiWhiteSpace('\n')
    PsiWhiteSpace('  ')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('BUILD_MISSIONPACK')
        PsiElement(=)('=')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifndef)('ifndef')
    PsiElement(condition)(' BUILD_RENDERER_OPENGL2')
    PsiWhiteSpace('\n')
    PsiWhiteSpace('  ')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('BUILD_RENDERER_OPENGL2')
        PsiElement(=)('=')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n\n')
  PsiComment(DOC_COMMENT)('#############################################################################')
  PsiWhiteSpace('\n')
  PsiComment(COMMENT)('#')
  PsiWhiteSpace('\n')
  PsiComment(COMMENT)('# If you require a different configuration from the defaults below, create a')
  PsiWhiteSpace('\n')
  PsiComment(COMMENT)('# new file named "Makefile.local" in the same directory as this file and define')
  PsiWhiteSpace('\n')
  PsiComment(COMMENT)('# your parameters there. This allows you to change configuration without')
  PsiWhiteSpace('\n')
  PsiComment(COMMENT)('# causing problems with keeping up to date with the repository.')
  PsiWhiteSpace('\n')
  PsiComment(COMMENT)('#')
  PsiWhiteSpace('\n')
  PsiComment(DOC_COMMENT)('#############################################################################')
  PsiWhiteSpace('\n')
  MakefileIncludeImpl(INCLUDE)
    PsiElement(include)('-include')
    PsiWhiteSpace(' ')
    MakefileFilenameImpl(FILENAME)
      PsiElement(identifier)('Makefile.local')
    PsiElement(EOL)('\n\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifndef)('ifndef')
    PsiElement(condition)(' PLATFORM')
    PsiWhiteSpace('\n')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('PLATFORM')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('$(COMPILE_PLATFORM)')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n')
  MakefileExportImpl(EXPORT)
    PsiElement(export)('export')
    PsiWhiteSpace(' ')
    MakefileVariableImpl(VARIABLE)
      PsiElement(identifier)('PLATFORM')
    PsiElement(EOL)('\n\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifeq)('ifeq')
    PsiElement(condition)(' ($(COMPILE_ARCH),i86pc)')
    PsiWhiteSpace('\n')
    PsiWhiteSpace('  ')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('COMPILE_ARCH')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('x86')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifeq)('ifeq')
    PsiElement(condition)(' ($(COMPILE_ARCH),amd64)')
    PsiWhiteSpace('\n')
    PsiWhiteSpace('  ')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('COMPILE_ARCH')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('x86_64')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifeq)('ifeq')
    PsiElement(condition)(' ($(COMPILE_ARCH),x64)')
    PsiWhiteSpace('\n')
    PsiWhiteSpace('  ')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('COMPILE_ARCH')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('x86_64')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifeq)('ifeq')
    PsiElement(condition)(' ($(COMPILE_ARCH),powerpc)')
    PsiWhiteSpace('\n')
    PsiWhiteSpace('  ')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('COMPILE_ARCH')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('ppc')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifeq)('ifeq')
    PsiElement(condition)(' ($(COMPILE_ARCH),powerpc64)')
    PsiWhiteSpace('\n')
    PsiWhiteSpace('  ')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('COMPILE_ARCH')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('ppc64')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifeq)('ifeq')
    PsiElement(condition)(' ($(COMPILE_ARCH),axp)')
    PsiWhiteSpace('\n')
    PsiWhiteSpace('  ')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('COMPILE_ARCH')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('alpha')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifndef)('ifndef')
    PsiElement(condition)(' ARCH')
    PsiWhiteSpace('\n')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('ARCH')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('$(COMPILE_ARCH)')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n')
  MakefileExportImpl(EXPORT)
    PsiElement(export)('export')
    PsiWhiteSpace(' ')
    MakefileVariableImpl(VARIABLE)
      PsiElement(identifier)('ARCH')
    PsiElement(EOL)('\n\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifneq)('ifneq')
    PsiElement(condition)(' ($(PLATFORM),$(COMPILE_PLATFORM))')
    PsiWhiteSpace('\n')
    PsiWhiteSpace('  ')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('CROSS_COMPILING')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('1')
    PsiWhiteSpace('\n')
    PsiElement(else)('else')
    PsiElement(EOL)('\n')
    PsiWhiteSpace('  ')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('CROSS_COMPILING')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('0')
      PsiWhiteSpace('\n\n')
      PsiWhiteSpace('  ')
      MakefileTopconditionalImpl(TOPCONDITIONAL)
        PsiElement(ifneq)('ifneq')
        PsiElement(condition)(' ($(ARCH),$(COMPILE_ARCH))')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        MakefileBlockImpl(BLOCK)
          MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
            MakefileVariableImpl(VARIABLE)
              PsiElement(identifier)('CROSS_COMPILING')
            PsiElement(=)('=')
            MakefileVariableValueImpl(VARIABLE_VALUE)
              PsiElement(line)('1')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n')
  MakefileExportImpl(EXPORT)
    PsiElement(export)('export')
    PsiWhiteSpace(' ')
    MakefileVariableImpl(VARIABLE)
      PsiElement(identifier)('CROSS_COMPILING')
    PsiElement(EOL)('\n\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifndef)('ifndef')
    PsiElement(condition)(' VERSION')
    PsiWhiteSpace('\n')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('VERSION')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('1.36')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifndef)('ifndef')
    PsiElement(condition)(' CLIENTBIN')
    PsiWhiteSpace('\n')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('CLIENTBIN')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('ioquake3')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifndef)('ifndef')
    PsiElement(condition)(' SERVERBIN')
    PsiWhiteSpace('\n')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('SERVERBIN')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('ioq3ded')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifndef)('ifndef')
    PsiElement(condition)(' BASEGAME')
    PsiWhiteSpace('\n')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('BASEGAME')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('baseq3')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifndef)('ifndef')
    PsiElement(condition)(' BASEGAME_CFLAGS')
    PsiWhiteSpace('\n')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('BASEGAME_CFLAGS')
        PsiElement(=)('=')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifndef)('ifndef')
    PsiElement(condition)(' MISSIONPACK')
    PsiWhiteSpace('\n')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('MISSIONPACK')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('missionpack')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifndef)('ifndef')
    PsiElement(condition)(' MISSIONPACK_CFLAGS')
    PsiWhiteSpace('\n')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('MISSIONPACK_CFLAGS')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('-DMISSIONPACK')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifndef)('ifndef')
    PsiElement(condition)(' COPYDIR')
    PsiWhiteSpace('\n')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('COPYDIR')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('"/usr/local/games/quake3"')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifndef)('ifndef')
    PsiElement(condition)(' COPYBINDIR')
    PsiWhiteSpace('\n')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('COPYBINDIR')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('$(COPYDIR)')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifndef)('ifndef')
    PsiElement(condition)(' MOUNT_DIR')
    PsiWhiteSpace('\n')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('MOUNT_DIR')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('code')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifndef)('ifndef')
    PsiElement(condition)(' BUILD_DIR')
    PsiWhiteSpace('\n')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('BUILD_DIR')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('build')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifndef)('ifndef')
    PsiElement(condition)(' TEMPDIR')
    PsiWhiteSpace('\n')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('TEMPDIR')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('/tmp')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifndef)('ifndef')
    PsiElement(condition)(' GENERATE_DEPENDENCIES')
    PsiWhiteSpace('\n')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('GENERATE_DEPENDENCIES')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('1')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifndef)('ifndef')
    PsiElement(condition)(' USE_OPENAL')
    PsiWhiteSpace('\n')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('USE_OPENAL')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('1')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifndef)('ifndef')
    PsiElement(condition)(' USE_OPENAL_DLOPEN')
    PsiWhiteSpace('\n')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('USE_OPENAL_DLOPEN')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('1')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifndef)('ifndef')
    PsiElement(condition)(' USE_CURL')
    PsiWhiteSpace('\n')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('USE_CURL')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('1')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifndef)('ifndef')
    PsiElement(condition)(' USE_CURL_DLOPEN')
    PsiWhiteSpace('\n')
    PsiWhiteSpace('  ')
    MakefileBlockImpl(BLOCK)
      MakefileTopconditionalImpl(TOPCONDITIONAL)
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(PLATFORM),mingw32)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        MakefileBlockImpl(BLOCK)
          MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
            MakefileVariableImpl(VARIABLE)
              PsiElement(identifier)('USE_CURL_DLOPEN')
            PsiElement(=)('=')
            MakefileVariableValueImpl(VARIABLE_VALUE)
              PsiElement(line)('0')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(else)('else')
        PsiElement(EOL)('\n')
        PsiWhiteSpace('    ')
        MakefileBlockImpl(BLOCK)
          MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
            MakefileVariableImpl(VARIABLE)
              PsiElement(identifier)('USE_CURL_DLOPEN')
            PsiElement(=)('=')
            MakefileVariableValueImpl(VARIABLE_VALUE)
              PsiElement(line)('1')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifndef)('ifndef')
    PsiElement(condition)(' USE_CODEC_VORBIS')
    PsiWhiteSpace('\n')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('USE_CODEC_VORBIS')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('0')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifndef)('ifndef')
    PsiElement(condition)(' USE_CODEC_OPUS')
    PsiWhiteSpace('\n')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('USE_CODEC_OPUS')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('1')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifndef)('ifndef')
    PsiElement(condition)(' USE_MUMBLE')
    PsiWhiteSpace('\n')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('USE_MUMBLE')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('1')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifndef)('ifndef')
    PsiElement(condition)(' USE_VOIP')
    PsiWhiteSpace('\n')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('USE_VOIP')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('1')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifndef)('ifndef')
    PsiElement(condition)(' USE_FREETYPE')
    PsiWhiteSpace('\n')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('USE_FREETYPE')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('0')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifndef)('ifndef')
    PsiElement(condition)(' USE_INTERNAL_SPEEX')
    PsiWhiteSpace('\n')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('USE_INTERNAL_SPEEX')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('1')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifndef)('ifndef')
    PsiElement(condition)(' USE_INTERNAL_OGG')
    PsiWhiteSpace('\n')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('USE_INTERNAL_OGG')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('1')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifndef)('ifndef')
    PsiElement(condition)(' USE_INTERNAL_VORBIS')
    PsiWhiteSpace('\n')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('USE_INTERNAL_VORBIS')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('1')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifndef)('ifndef')
    PsiElement(condition)(' USE_INTERNAL_OPUS')
    PsiWhiteSpace('\n')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('USE_INTERNAL_OPUS')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('1')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifndef)('ifndef')
    PsiElement(condition)(' USE_INTERNAL_ZLIB')
    PsiWhiteSpace('\n')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('USE_INTERNAL_ZLIB')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('1')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifndef)('ifndef')
    PsiElement(condition)(' USE_INTERNAL_JPEG')
    PsiWhiteSpace('\n')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('USE_INTERNAL_JPEG')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('1')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifndef)('ifndef')
    PsiElement(condition)(' USE_LOCAL_HEADERS')
    PsiWhiteSpace('\n')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('USE_LOCAL_HEADERS')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('1')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifndef)('ifndef')
    PsiElement(condition)(' USE_RENDERER_DLOPEN')
    PsiWhiteSpace('\n')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('USE_RENDERER_DLOPEN')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('1')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifndef)('ifndef')
    PsiElement(condition)(' DEBUG_CFLAGS')
    PsiWhiteSpace('\n')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('DEBUG_CFLAGS')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('-g -O0')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n\n')
  PsiComment(DOC_COMMENT)('#############################################################################')
  PsiWhiteSpace('\n\n')
  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
    MakefileVariableImpl(VARIABLE)
      PsiElement(identifier)('BD')
    PsiElement(=)('=')
    MakefileVariableValueImpl(VARIABLE_VALUE)
      PsiElement(line)('$(BUILD_DIR)/debug-$(PLATFORM)-$(ARCH)')
  PsiWhiteSpace('\n')
  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
    MakefileVariableImpl(VARIABLE)
      PsiElement(identifier)('BR')
    PsiElement(=)('=')
    MakefileVariableValueImpl(VARIABLE_VALUE)
      PsiElement(line)('$(BUILD_DIR)/release-$(PLATFORM)-$(ARCH)')
  PsiWhiteSpace('\n')
  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
    MakefileVariableImpl(VARIABLE)
      PsiElement(identifier)('CDIR')
    PsiElement(=)('=')
    MakefileVariableValueImpl(VARIABLE_VALUE)
      PsiElement(line)('$(MOUNT_DIR)/client')
  PsiWhiteSpace('\n')
  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
    MakefileVariableImpl(VARIABLE)
      PsiElement(identifier)('SDIR')
    PsiElement(=)('=')
    MakefileVariableValueImpl(VARIABLE_VALUE)
      PsiElement(line)('$(MOUNT_DIR)/server')
  PsiWhiteSpace('\n')
  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
    MakefileVariableImpl(VARIABLE)
      PsiElement(identifier)('RCOMMONDIR')
    PsiElement(=)('=')
    MakefileVariableValueImpl(VARIABLE_VALUE)
      PsiElement(line)('$(MOUNT_DIR)/renderercommon')
  PsiWhiteSpace('\n')
  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
    MakefileVariableImpl(VARIABLE)
      PsiElement(identifier)('RGL1DIR')
    PsiElement(=)('=')
    MakefileVariableValueImpl(VARIABLE_VALUE)
      PsiElement(line)('$(MOUNT_DIR)/renderergl1')
  PsiWhiteSpace('\n')
  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
    MakefileVariableImpl(VARIABLE)
      PsiElement(identifier)('RGL2DIR')
    PsiElement(=)('=')
    MakefileVariableValueImpl(VARIABLE_VALUE)
      PsiElement(line)('$(MOUNT_DIR)/renderergl2')
  PsiWhiteSpace('\n')
  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
    MakefileVariableImpl(VARIABLE)
      PsiElement(identifier)('CMDIR')
    PsiElement(=)('=')
    MakefileVariableValueImpl(VARIABLE_VALUE)
      PsiElement(line)('$(MOUNT_DIR)/qcommon')
  PsiWhiteSpace('\n')
  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
    MakefileVariableImpl(VARIABLE)
      PsiElement(identifier)('SDLDIR')
    PsiElement(=)('=')
    MakefileVariableValueImpl(VARIABLE_VALUE)
      PsiElement(line)('$(MOUNT_DIR)/sdl')
  PsiWhiteSpace('\n')
  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
    MakefileVariableImpl(VARIABLE)
      PsiElement(identifier)('ASMDIR')
    PsiElement(=)('=')
    MakefileVariableValueImpl(VARIABLE_VALUE)
      PsiElement(line)('$(MOUNT_DIR)/asm')
  PsiWhiteSpace('\n')
  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
    MakefileVariableImpl(VARIABLE)
      PsiElement(identifier)('SYSDIR')
    PsiElement(=)('=')
    MakefileVariableValueImpl(VARIABLE_VALUE)
      PsiElement(line)('$(MOUNT_DIR)/sys')
  PsiWhiteSpace('\n')
  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
    MakefileVariableImpl(VARIABLE)
      PsiElement(identifier)('GDIR')
    PsiElement(=)('=')
    MakefileVariableValueImpl(VARIABLE_VALUE)
      PsiElement(line)('$(MOUNT_DIR)/game')
  PsiWhiteSpace('\n')
  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
    MakefileVariableImpl(VARIABLE)
      PsiElement(identifier)('CGDIR')
    PsiElement(=)('=')
    MakefileVariableValueImpl(VARIABLE_VALUE)
      PsiElement(line)('$(MOUNT_DIR)/cgame')
  PsiWhiteSpace('\n')
  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
    MakefileVariableImpl(VARIABLE)
      PsiElement(identifier)('BLIBDIR')
    PsiElement(=)('=')
    MakefileVariableValueImpl(VARIABLE_VALUE)
      PsiElement(line)('$(MOUNT_DIR)/botlib')
  PsiWhiteSpace('\n')
  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
    MakefileVariableImpl(VARIABLE)
      PsiElement(identifier)('NDIR')
    PsiElement(=)('=')
    MakefileVariableValueImpl(VARIABLE_VALUE)
      PsiElement(line)('$(MOUNT_DIR)/null')
  PsiWhiteSpace('\n')
  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
    MakefileVariableImpl(VARIABLE)
      PsiElement(identifier)('UIDIR')
    PsiElement(=)('=')
    MakefileVariableValueImpl(VARIABLE_VALUE)
      PsiElement(line)('$(MOUNT_DIR)/ui')
  PsiWhiteSpace('\n')
  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
    MakefileVariableImpl(VARIABLE)
      PsiElement(identifier)('Q3UIDIR')
    PsiElement(=)('=')
    MakefileVariableValueImpl(VARIABLE_VALUE)
      PsiElement(line)('$(MOUNT_DIR)/q3_ui')
  PsiWhiteSpace('\n')
  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
    MakefileVariableImpl(VARIABLE)
      PsiElement(identifier)('JPDIR')
    PsiElement(=)('=')
    MakefileVariableValueImpl(VARIABLE_VALUE)
      PsiElement(line)('$(MOUNT_DIR)/jpeg-8c')
  PsiWhiteSpace('\n')
  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
    MakefileVariableImpl(VARIABLE)
      PsiElement(identifier)('SPEEXDIR')
    PsiElement(=)('=')
    MakefileVariableValueImpl(VARIABLE_VALUE)
      PsiElement(line)('$(MOUNT_DIR)/libspeex')
  PsiWhiteSpace('\n')
  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
    MakefileVariableImpl(VARIABLE)
      PsiElement(identifier)('OGGDIR')
    PsiElement(=)('=')
    MakefileVariableValueImpl(VARIABLE_VALUE)
      PsiElement(line)('$(MOUNT_DIR)/libogg-1.3.1')
  PsiWhiteSpace('\n')
  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
    MakefileVariableImpl(VARIABLE)
      PsiElement(identifier)('VORBISDIR')
    PsiElement(=)('=')
    MakefileVariableValueImpl(VARIABLE_VALUE)
      PsiElement(line)('$(MOUNT_DIR)/libvorbis-1.3.4')
  PsiWhiteSpace('\n')
  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
    MakefileVariableImpl(VARIABLE)
      PsiElement(identifier)('OPUSDIR')
    PsiElement(=)('=')
    MakefileVariableValueImpl(VARIABLE_VALUE)
      PsiElement(line)('$(MOUNT_DIR)/opus-1.1')
  PsiWhiteSpace('\n')
  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
    MakefileVariableImpl(VARIABLE)
      PsiElement(identifier)('OPUSFILEDIR')
    PsiElement(=)('=')
    MakefileVariableValueImpl(VARIABLE_VALUE)
      PsiElement(line)('$(MOUNT_DIR)/opusfile-0.5')
  PsiWhiteSpace('\n')
  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
    MakefileVariableImpl(VARIABLE)
      PsiElement(identifier)('ZDIR')
    PsiElement(=)('=')
    MakefileVariableValueImpl(VARIABLE_VALUE)
      PsiElement(line)('$(MOUNT_DIR)/zlib')
  PsiWhiteSpace('\n')
  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
    MakefileVariableImpl(VARIABLE)
      PsiElement(identifier)('Q3ASMDIR')
    PsiElement(=)('=')
    MakefileVariableValueImpl(VARIABLE_VALUE)
      PsiElement(line)('$(MOUNT_DIR)/tools/asm')
  PsiWhiteSpace('\n')
  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
    MakefileVariableImpl(VARIABLE)
      PsiElement(identifier)('LBURGDIR')
    PsiElement(=)('=')
    MakefileVariableValueImpl(VARIABLE_VALUE)
      PsiElement(line)('$(MOUNT_DIR)/tools/lcc/lburg')
  PsiWhiteSpace('\n')
  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
    MakefileVariableImpl(VARIABLE)
      PsiElement(identifier)('Q3CPPDIR')
    PsiElement(=)('=')
    MakefileVariableValueImpl(VARIABLE_VALUE)
      PsiElement(line)('$(MOUNT_DIR)/tools/lcc/cpp')
  PsiWhiteSpace('\n')
  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
    MakefileVariableImpl(VARIABLE)
      PsiElement(identifier)('Q3LCCETCDIR')
    PsiElement(=)('=')
    MakefileVariableValueImpl(VARIABLE_VALUE)
      PsiElement(line)('$(MOUNT_DIR)/tools/lcc/etc')
  PsiWhiteSpace('\n')
  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
    MakefileVariableImpl(VARIABLE)
      PsiElement(identifier)('Q3LCCSRCDIR')
    PsiElement(=)('=')
    MakefileVariableValueImpl(VARIABLE_VALUE)
      PsiElement(line)('$(MOUNT_DIR)/tools/lcc/src')
  PsiWhiteSpace('\n')
  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
    MakefileVariableImpl(VARIABLE)
      PsiElement(identifier)('LOKISETUPDIR')
    PsiElement(=)('=')
    MakefileVariableValueImpl(VARIABLE_VALUE)
      PsiElement(line)('misc/setup')
  PsiWhiteSpace('\n')
  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
    MakefileVariableImpl(VARIABLE)
      PsiElement(identifier)('NSISDIR')
    PsiElement(=)('=')
    MakefileVariableValueImpl(VARIABLE_VALUE)
      PsiElement(line)('misc/nsis')
  PsiWhiteSpace('\n')
  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
    MakefileVariableImpl(VARIABLE)
      PsiElement(identifier)('SDLHDIR')
    PsiElement(=)('=')
    MakefileVariableValueImpl(VARIABLE_VALUE)
      PsiElement(line)('$(MOUNT_DIR)/SDL12')
  PsiWhiteSpace('\n')
  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
    MakefileVariableImpl(VARIABLE)
      PsiElement(identifier)('LIBSDIR')
    PsiElement(=)('=')
    MakefileVariableValueImpl(VARIABLE_VALUE)
      PsiElement(line)('$(MOUNT_DIR)/libs')
  PsiWhiteSpace('\n\n')
  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
    MakefileVariableImpl(VARIABLE)
      PsiElement(identifier)('bin_path')
    PsiElement(=)('=')
    MakefileVariableValueImpl(VARIABLE_VALUE)
      PsiElement(line)('$(shell which $(1) 2> /dev/null)')
  PsiWhiteSpace('\n\n')
  PsiComment(COMMENT)('# We won't need this if we only build the server')
  PsiWhiteSpace('\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifneq)('ifneq')
    PsiElement(condition)(' ($(BUILD_CLIENT),0)')
    PsiWhiteSpace('\n')
    PsiWhiteSpace('  ')
    PsiComment(COMMENT)('# set PKG_CONFIG_PATH to influence this, e.g.')
    PsiWhiteSpace('\n')
    PsiWhiteSpace('  ')
    PsiComment(COMMENT)('# PKG_CONFIG_PATH=/opt/cross/i386-mingw32msvc/lib/pkgconfig')
    PsiWhiteSpace('\n')
    PsiWhiteSpace('  ')
    MakefileBlockImpl(BLOCK)
      MakefileTopconditionalImpl(TOPCONDITIONAL)
        PsiElement(ifneq)('ifneq')
        PsiElement(condition)(' ($(call bin_path, pkg-config),)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        MakefileBlockImpl(BLOCK)
          MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
            MakefileVariableImpl(VARIABLE)
              PsiElement(identifier)('CURL_CFLAGS')
            PsiElement(=)('=')
            MakefileVariableValueImpl(VARIABLE_VALUE)
              PsiElement(line)('$(shell pkg-config --silence-errors --cflags libcurl)')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
            MakefileVariableImpl(VARIABLE)
              PsiElement(identifier)('CURL_LIBS')
            PsiElement(=)('=')
            MakefileVariableValueImpl(VARIABLE_VALUE)
              PsiElement(line)('$(shell pkg-config --silence-errors --libs libcurl)')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
            MakefileVariableImpl(VARIABLE)
              PsiElement(identifier)('OPENAL_CFLAGS')
            PsiElement(=)('=')
            MakefileVariableValueImpl(VARIABLE_VALUE)
              PsiElement(line)('$(shell pkg-config --silence-errors --cflags openal)')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
            MakefileVariableImpl(VARIABLE)
              PsiElement(identifier)('OPENAL_LIBS')
            PsiElement(=)('=')
            MakefileVariableValueImpl(VARIABLE_VALUE)
              PsiElement(line)('$(shell pkg-config --silence-errors --libs openal)')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
            MakefileVariableImpl(VARIABLE)
              PsiElement(identifier)('SDL_CFLAGS')
            PsiElement(=)('=')
            MakefileVariableValueImpl(VARIABLE_VALUE)
              PsiElement(line)('$(shell pkg-config --silence-errors --cflags sdl|sed 's/-Dmain=SDL_main//')')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
            MakefileVariableImpl(VARIABLE)
              PsiElement(identifier)('SDL_LIBS')
            PsiElement(=)('=')
            MakefileVariableValueImpl(VARIABLE_VALUE)
              PsiElement(line)('$(shell pkg-config --silence-errors --libs sdl)')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
            MakefileVariableImpl(VARIABLE)
              PsiElement(identifier)('FREETYPE_CFLAGS')
            PsiElement(=)('=')
            MakefileVariableValueImpl(VARIABLE_VALUE)
              PsiElement(line)('$(shell pkg-config --silence-errors --cflags freetype2)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiComment(COMMENT)('# Use sdl-config if all else fails')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      MakefileTopconditionalImpl(TOPCONDITIONAL)
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(SDL_CFLAGS),)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        MakefileBlockImpl(BLOCK)
          MakefileTopconditionalImpl(TOPCONDITIONAL)
            PsiElement(ifneq)('ifneq')
            PsiElement(condition)(' ($(call bin_path, sdl-config),)')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('      ')
            MakefileBlockImpl(BLOCK)
              MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
                MakefileVariableImpl(VARIABLE)
                  PsiElement(identifier)('SDL_CFLAGS')
                PsiElement(=)('=')
                MakefileVariableValueImpl(VARIABLE_VALUE)
                  PsiElement(line)('$(shell sdl-config --cflags)')
              PsiWhiteSpace('\n')
              PsiWhiteSpace('      ')
              MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
                MakefileVariableImpl(VARIABLE)
                  PsiElement(identifier)('SDL_LIBS')
                PsiElement(=)('=')
                MakefileVariableValueImpl(VARIABLE_VALUE)
                  PsiElement(line)('$(shell sdl-config --libs)')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('    ')
            PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n\n')
  PsiComment(COMMENT)('# Add git version info')
  PsiWhiteSpace('\n')
  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
    MakefileVariableImpl(VARIABLE)
      PsiElement(identifier)('USE_GIT')
    PsiElement(=)('=')
  PsiWhiteSpace('\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifeq)('ifeq')
    PsiElement(condition)(' ($(wildcard .git),.git)')
    PsiWhiteSpace('\n')
    PsiWhiteSpace('  ')
    MakefileBlockImpl(BLOCK)
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('GIT_REV')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('$(shell git show -s --pretty=format:%h-%ad --date=short)')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      MakefileTopconditionalImpl(TOPCONDITIONAL)
        PsiElement(ifneq)('ifneq')
        PsiElement(condition)(' ($(GIT_REV),)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        MakefileBlockImpl(BLOCK)
          MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
            MakefileVariableImpl(VARIABLE)
              PsiElement(identifier)('VERSION')
            PsiElement(=)(':=')
            MakefileVariableValueImpl(VARIABLE_VALUE)
              PsiElement(line)('$(VERSION)_GIT_$(GIT_REV)')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
            MakefileVariableImpl(VARIABLE)
              PsiElement(identifier)('USE_GIT')
            PsiElement(=)('=')
            MakefileVariableValueImpl(VARIABLE_VALUE)
              PsiElement(line)('1')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
    PsiWhiteSpace('\n')
    PsiElement(endif)('endif')
  PsiWhiteSpace('\n\n\n')
  PsiComment(DOC_COMMENT)('#############################################################################')
  PsiWhiteSpace('\n')
  PsiComment(COMMENT)('# SETUP AND BUILD -- LINUX')
  PsiWhiteSpace('\n')
  PsiComment(DOC_COMMENT)('#############################################################################')
  PsiWhiteSpace('\n\n')
  PsiComment(DOC_COMMENT)('## Defaults')
  PsiWhiteSpace('\n')
  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
    MakefileVariableImpl(VARIABLE)
      PsiElement(identifier)('LIB')
    PsiElement(=)('=')
    MakefileVariableValueImpl(VARIABLE_VALUE)
      PsiElement(line)('lib')
  PsiWhiteSpace('\n\n')
  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
    MakefileVariableImpl(VARIABLE)
      PsiElement(identifier)('INSTALL')
    PsiElement(=)('=')
    MakefileVariableValueImpl(VARIABLE_VALUE)
      PsiElement(line)('install')
  PsiWhiteSpace('\n')
  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
    MakefileVariableImpl(VARIABLE)
      PsiElement(identifier)('MKDIR')
    PsiElement(=)('=')
    MakefileVariableValueImpl(VARIABLE_VALUE)
      PsiElement(line)('mkdir')
  PsiWhiteSpace('\n\n')
  MakefileTopconditionalImpl(TOPCONDITIONAL)
    PsiElement(ifneq)('ifneq')
    PsiElement(condition)(' (,$(findstring "$(PLATFORM)", "linux" "gnu_kfreebsd" "kfreebsd-gnu"))')
    PsiWhiteSpace('\n\n')
    PsiWhiteSpace('  ')
    MakefileBlockImpl(BLOCK)
      MakefileTopconditionalImpl(TOPCONDITIONAL)
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(ARCH),x86_64)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        MakefileBlockImpl(BLOCK)
          MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
            MakefileVariableImpl(VARIABLE)
              PsiElement(identifier)('LIB')
            PsiElement(=)('=')
            MakefileVariableValueImpl(VARIABLE_VALUE)
              PsiElement(line)('lib64')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(else)('else')
        PsiElement(EOL)('\n')
        PsiWhiteSpace('  ')
        MakefileBlockImpl(BLOCK)
          MakefileTopconditionalImpl(TOPCONDITIONAL)
            PsiElement(ifeq)('ifeq')
            PsiElement(condition)(' ($(ARCH),ppc64)')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('    ')
            MakefileBlockImpl(BLOCK)
              MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
                MakefileVariableImpl(VARIABLE)
                  PsiElement(identifier)('LIB')
                PsiElement(=)('=')
                MakefileVariableValueImpl(VARIABLE_VALUE)
                  PsiElement(line)('lib64')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('  ')
            PsiElement(else)('else')
            PsiElement(EOL)('\n')
            PsiWhiteSpace('  ')
            MakefileBlockImpl(BLOCK)
              MakefileTopconditionalImpl(TOPCONDITIONAL)
                PsiElement(ifeq)('ifeq')
                PsiElement(condition)(' ($(ARCH),s390x)')
                PsiWhiteSpace('\n')
                PsiWhiteSpace('    ')
                MakefileBlockImpl(BLOCK)
                  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
                    MakefileVariableImpl(VARIABLE)
                      PsiElement(identifier)('LIB')
                    PsiElement(=)('=')
                    MakefileVariableValueImpl(VARIABLE_VALUE)
                      PsiElement(line)('lib64')
                PsiWhiteSpace('\n')
                PsiWhiteSpace('  ')
                PsiElement(endif)('endif')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('  ')
            PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
      PsiWhiteSpace('\n\n')
      PsiWhiteSpace('  ')
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('BASE_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)(' -Wall -fno-strict-aliasing -Wimplicit -Wstrict-prototypes ')
          PsiElement(split)('\\n')
          PsiElement(line)('    -pipe -DUSE_ICON')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('CLIENT_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)(' $(SDL_CFLAGS)')
      PsiWhiteSpace('\n\n')
      PsiWhiteSpace('  ')
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('OPTIMIZEVM')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)(' -O3 -funroll-loops -fomit-frame-pointer')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('OPTIMIZE')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)(' $(OPTIMIZEVM) -ffast-math')
      PsiWhiteSpace('\n\n')
      PsiWhiteSpace('  ')
      MakefileTopconditionalImpl(TOPCONDITIONAL)
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(ARCH),x86_64)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        MakefileBlockImpl(BLOCK)
          MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
            MakefileVariableImpl(VARIABLE)
              PsiElement(identifier)('OPTIMIZEVM')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            MakefileVariableValueImpl(VARIABLE_VALUE)
              PsiElement(line)(' -O3 -fomit-frame-pointer -funroll-loops ')
              PsiElement(split)('\\n')
              PsiElement(line)('      -falign-functions=2 -fstrength-reduce')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
            MakefileVariableImpl(VARIABLE)
              PsiElement(identifier)('OPTIMIZE')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            MakefileVariableValueImpl(VARIABLE_VALUE)
              PsiElement(line)(' $(OPTIMIZEVM) -ffast-math')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('    ')
          MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
            MakefileVariableImpl(VARIABLE)
              PsiElement(identifier)('HAVE_VM_COMPILED')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            MakefileVariableValueImpl(VARIABLE_VALUE)
              PsiElement(line)(' true')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(else)('else')
        PsiElement(EOL)('\n')
        PsiWhiteSpace('  ')
        MakefileBlockImpl(BLOCK)
          MakefileTopconditionalImpl(TOPCONDITIONAL)
            PsiElement(ifeq)('ifeq')
            PsiElement(condition)(' ($(ARCH),x86)')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('    ')
            MakefileBlockImpl(BLOCK)
              MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
                MakefileVariableImpl(VARIABLE)
                  PsiElement(identifier)('OPTIMIZEVM')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                MakefileVariableValueImpl(VARIABLE_VALUE)
                  PsiElement(line)(' -O3 -march=i586 -fomit-frame-pointer ')
                  PsiElement(split)('\\n')
                  PsiElement(line)('      -funroll-loops -falign-functions=2 -fstrength-reduce')
              PsiWhiteSpace('\n')
              PsiWhiteSpace('    ')
              MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
                MakefileVariableImpl(VARIABLE)
                  PsiElement(identifier)('OPTIMIZE')
                PsiWhiteSpace(' ')
                PsiElement(=)('=')
                MakefileVariableValueImpl(VARIABLE_VALUE)
                  PsiElement(line)(' $(OPTIMIZEVM) -ffast-math')
              PsiWhiteSpace('\n')
              PsiWhiteSpace('    ')
              MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
                MakefileVariableImpl(VARIABLE)
                  PsiElement(identifier)('HAVE_VM_COMPILED')
                PsiElement(=)('=')
                MakefileVariableValueImpl(VARIABLE_VALUE)
                  PsiElement(line)('true')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('  ')
            PsiElement(else)('else')
            PsiElement(EOL)('\n')
            PsiWhiteSpace('  ')
            MakefileBlockImpl(BLOCK)
              MakefileTopconditionalImpl(TOPCONDITIONAL)
                PsiElement(ifeq)('ifeq')
                PsiElement(condition)(' ($(ARCH),ppc)')
                PsiWhiteSpace('\n')
                PsiWhiteSpace('    ')
                MakefileBlockImpl(BLOCK)
                  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
                    MakefileVariableImpl(VARIABLE)
                      PsiElement(identifier)('BASE_CFLAGS')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('+=')
                    MakefileVariableValueImpl(VARIABLE_VALUE)
                      PsiElement(line)(' -maltivec')
                  PsiWhiteSpace('\n')
                  PsiWhiteSpace('    ')
                  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
                    MakefileVariableImpl(VARIABLE)
                      PsiElement(identifier)('HAVE_VM_COMPILED')
                    PsiElement(=)('=')
                    MakefileVariableValueImpl(VARIABLE_VALUE)
                      PsiElement(line)('true')
                PsiWhiteSpace('\n')
                PsiWhiteSpace('  ')
                PsiElement(endif)('endif')
              PsiWhiteSpace('\n')
              PsiWhiteSpace('  ')
              MakefileTopconditionalImpl(TOPCONDITIONAL)
                PsiElement(ifeq)('ifeq')
                PsiElement(condition)(' ($(ARCH),ppc64)')
                PsiWhiteSpace('\n')
                PsiWhiteSpace('    ')
                MakefileBlockImpl(BLOCK)
                  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
                    MakefileVariableImpl(VARIABLE)
                      PsiElement(identifier)('BASE_CFLAGS')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('+=')
                    MakefileVariableValueImpl(VARIABLE_VALUE)
                      PsiElement(line)(' -maltivec')
                  PsiWhiteSpace('\n')
                  PsiWhiteSpace('    ')
                  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
                    MakefileVariableImpl(VARIABLE)
                      PsiElement(identifier)('HAVE_VM_COMPILED')
                    PsiElement(=)('=')
                    MakefileVariableValueImpl(VARIABLE_VALUE)
                      PsiElement(line)('true')
                PsiWhiteSpace('\n')
                PsiWhiteSpace('  ')
                PsiElement(endif)('endif')
              PsiWhiteSpace('\n')
              PsiWhiteSpace('  ')
              MakefileTopconditionalImpl(TOPCONDITIONAL)
                PsiElement(ifeq)('ifeq')
                PsiElement(condition)(' ($(ARCH),sparc)')
                PsiWhiteSpace('\n')
                PsiWhiteSpace('    ')
                MakefileBlockImpl(BLOCK)
                  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
                    MakefileVariableImpl(VARIABLE)
                      PsiElement(identifier)('OPTIMIZE')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('+=')
                    MakefileVariableValueImpl(VARIABLE_VALUE)
                      PsiElement(line)(' -mtune=ultrasparc3 -mv8plus')
                  PsiWhiteSpace('\n')
                  PsiWhiteSpace('    ')
                  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
                    MakefileVariableImpl(VARIABLE)
                      PsiElement(identifier)('OPTIMIZEVM')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('+=')
                    MakefileVariableValueImpl(VARIABLE_VALUE)
                      PsiElement(line)(' -mtune=ultrasparc3 -mv8plus')
                  PsiWhiteSpace('\n')
                  PsiWhiteSpace('    ')
                  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
                    MakefileVariableImpl(VARIABLE)
                      PsiElement(identifier)('HAVE_VM_COMPILED')
                    PsiElement(=)('=')
                    MakefileVariableValueImpl(VARIABLE_VALUE)
                      PsiElement(line)('true')
                PsiWhiteSpace('\n')
                PsiWhiteSpace('  ')
                PsiElement(endif)('endif')
              PsiWhiteSpace('\n')
              PsiWhiteSpace('  ')
              MakefileTopconditionalImpl(TOPCONDITIONAL)
                PsiElement(ifeq)('ifeq')
                PsiElement(condition)(' ($(ARCH),alpha)')
                PsiWhiteSpace('\n')
                PsiWhiteSpace('    ')
                PsiComment(COMMENT)('# According to http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=410555')
                PsiWhiteSpace('\n')
                PsiWhiteSpace('    ')
                PsiComment(COMMENT)('# -ffast-math will cause the client to die with SIGFPE on Alpha')
                PsiWhiteSpace('\n')
                PsiWhiteSpace('    ')
                MakefileBlockImpl(BLOCK)
                  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
                    MakefileVariableImpl(VARIABLE)
                      PsiElement(identifier)('OPTIMIZE')
                    PsiWhiteSpace(' ')
                    PsiElement(=)('=')
                    MakefileVariableValueImpl(VARIABLE_VALUE)
                      PsiElement(line)(' $(OPTIMIZEVM)')
                PsiWhiteSpace('\n')
                PsiWhiteSpace('  ')
                PsiElement(endif)('endif')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('  ')
            PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
      PsiWhiteSpace('\n\n')
      PsiWhiteSpace('  ')
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('SHLIBEXT')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('so')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('SHLIBCFLAGS')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('-fPIC -fvisibility=hidden')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('SHLIBLDFLAGS')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('-shared $(LDFLAGS)')
      PsiWhiteSpace('\n\n')
      PsiWhiteSpace('  ')
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('THREAD_LIBS')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('-lpthread')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('LIBS')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('-ldl -lm')
      PsiWhiteSpace('\n\n')
      PsiWhiteSpace('  ')
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('CLIENT_LIBS')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)('$(SDL_LIBS)')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
        MakefileVariableImpl(VARIABLE)
          PsiElement(identifier)('RENDERER_LIBS')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        MakefileVariableValueImpl(VARIABLE_VALUE)
          PsiElement(line)(' $(SDL_LIBS) -lGL')
      PsiWhiteSpace('\n\n')
      PsiWhiteSpace('  ')
      MakefileTopconditionalImpl(TOPCONDITIONAL)
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_OPENAL),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        MakefileBlockImpl(BLOCK)
          MakefileTopconditionalImpl(TOPCONDITIONAL)
            PsiElement(ifneq)('ifneq')
            PsiElement(condition)(' ($(USE_OPENAL_DLOPEN),1)')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('      ')
            MakefileBlockImpl(BLOCK)
              MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
                MakefileVariableImpl(VARIABLE)
                  PsiElement(identifier)('CLIENT_LIBS')
                PsiWhiteSpace(' ')
                PsiElement(=)('+=')
                MakefileVariableValueImpl(VARIABLE_VALUE)
                  PsiElement(line)(' -lopenal')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('    ')
            PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
      PsiWhiteSpace('\n\n')
      PsiWhiteSpace('  ')
      MakefileTopconditionalImpl(TOPCONDITIONAL)
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_CURL),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        MakefileBlockImpl(BLOCK)
          MakefileTopconditionalImpl(TOPCONDITIONAL)
            PsiElement(ifneq)('ifneq')
            PsiElement(condition)(' ($(USE_CURL_DLOPEN),1)')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('      ')
            MakefileBlockImpl(BLOCK)
              MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
                MakefileVariableImpl(VARIABLE)
                  PsiElement(identifier)('CLIENT_LIBS')
                PsiWhiteSpace(' ')
                PsiElement(=)('+=')
                MakefileVariableValueImpl(VARIABLE_VALUE)
                  PsiElement(line)(' -lcurl')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('    ')
            PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
      PsiWhiteSpace('\n\n')
      PsiWhiteSpace('  ')
      MakefileTopconditionalImpl(TOPCONDITIONAL)
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_MUMBLE),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        MakefileBlockImpl(BLOCK)
          MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
            MakefileVariableImpl(VARIABLE)
              PsiElement(identifier)('CLIENT_LIBS')
            PsiWhiteSpace(' ')
            PsiElement(=)('+=')
            MakefileVariableValueImpl(VARIABLE_VALUE)
              PsiElement(line)(' -lrt')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
      PsiWhiteSpace('\n\n')
      PsiWhiteSpace('  ')
      MakefileTopconditionalImpl(TOPCONDITIONAL)
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_FREETYPE),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        MakefileBlockImpl(BLOCK)
          MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
            MakefileVariableImpl(VARIABLE)
              PsiElement(identifier)('BASE_CFLAGS')
            PsiWhiteSpace(' ')
            PsiElement(=)('+=')
            MakefileVariableValueImpl(VARIABLE_VALUE)
              PsiElement(line)(' $(FREETYPE_CFLAGS)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
      PsiWhiteSpace('\n\n')
      PsiWhiteSpace('  ')
      MakefileTopconditionalImpl(TOPCONDITIONAL)
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(ARCH),x86)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiComment(COMMENT)('# linux32 make ...')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        MakefileBlockImpl(BLOCK)
          MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
            MakefileVariableImpl(VARIABLE)
              PsiElement(identifier)('BASE_CFLAGS')
            PsiWhiteSpace(' ')
            PsiElement(=)('+=')
            MakefileVariableValueImpl(VARIABLE_VALUE)
              PsiElement(line)(' -m32')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(else)('else')
        PsiElement(EOL)('\n')
        PsiWhiteSpace('  ')
        MakefileBlockImpl(BLOCK)
          MakefileTopconditionalImpl(TOPCONDITIONAL)
            PsiElement(ifeq)('ifeq')
            PsiElement(condition)(' ($(ARCH),ppc64)')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('    ')
            MakefileBlockImpl(BLOCK)
              MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
                MakefileVariableImpl(VARIABLE)
                  PsiElement(identifier)('BASE_CFLAGS')
                PsiWhiteSpace(' ')
                PsiElement(=)('+=')
                MakefileVariableValueImpl(VARIABLE_VALUE)
                  PsiElement(line)(' -m64')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('  ')
            PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
    PsiWhiteSpace('\n')
    PsiElement(else)('else')
    PsiWhiteSpace(' ')
    PsiComment(COMMENT)('# ifeq Linux')
    PsiElement(EOL)('\n\n')
    PsiComment(DOC_COMMENT)('#############################################################################')
    PsiWhiteSpace('\n')
    PsiComment(COMMENT)('# SETUP AND BUILD -- MAC OS X')
    PsiWhiteSpace('\n')
    PsiComment(DOC_COMMENT)('#############################################################################')
    PsiWhiteSpace('\n\n')
    MakefileBlockImpl(BLOCK)
      MakefileTopconditionalImpl(TOPCONDITIONAL)
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(PLATFORM),darwin)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        MakefileBlockImpl(BLOCK)
          MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
            MakefileVariableImpl(VARIABLE)
              PsiElement(identifier)('HAVE_VM_COMPILED')
            PsiElement(=)('=')
            MakefileVariableValueImpl(VARIABLE_VALUE)
              PsiElement(line)('true')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('  ')
          MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
            MakefileVariableImpl(VARIABLE)
              PsiElement(identifier)('LIBS')
            PsiWhiteSpace(' ')
            PsiElement(=)('=')
            MakefileVariableValueImpl(VARIABLE_VALUE)
              PsiElement(line)(' -framework Cocoa')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('  ')
          MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
            MakefileVariableImpl(VARIABLE)
              PsiElement(identifier)('CLIENT_LIBS')
            PsiElement(=)('=')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('  ')
          MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
            MakefileVariableImpl(VARIABLE)
              PsiElement(identifier)('RENDERER_LIBS')
            PsiElement(=)('=')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('  ')
          MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
            MakefileVariableImpl(VARIABLE)
              PsiElement(identifier)('OPTIMIZEVM')
            PsiElement(=)('=')
          PsiWhiteSpace('\n\n')
          PsiWhiteSpace('  ')
          PsiComment(COMMENT)('# Default minimum Mac OS X version')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('  ')
          MakefileTopconditionalImpl(TOPCONDITIONAL)
            PsiElement(ifeq)('ifeq')
            PsiElement(condition)(' ($(MACOSX_VERSION_MIN),)')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('    ')
            MakefileBlockImpl(BLOCK)
              MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
                MakefileVariableImpl(VARIABLE)
                  PsiElement(identifier)('MACOSX_VERSION_MIN')
                PsiElement(=)('=')
                MakefileVariableValueImpl(VARIABLE_VALUE)
                  PsiElement(line)('10.7')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('  ')
            PsiElement(endif)('endif')
          PsiWhiteSpace('\n\n')
          PsiWhiteSpace('  ')
          PsiComment(COMMENT)('# Multiply by 100 and then remove decimal. 10.7 -> 1070.0 -> 1070')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('  ')
          MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
            MakefileVariableImpl(VARIABLE)
              PsiElement(identifier)('MAC_OS_X_VERSION_MIN_REQUIRED')
            PsiElement(=)('=')
            MakefileVariableValueImpl(VARIABLE_VALUE)
              PsiElement(line)('$(shell echo '$(MACOSX_VERSION_MIN) * 100' | bc | cut -d. -f1)')
          PsiWhiteSpace('\n\n')
          PsiWhiteSpace('  ')
          MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
            MakefileVariableImpl(VARIABLE)
              PsiElement(identifier)('LDFLAGS')
            PsiWhiteSpace(' ')
            PsiElement(=)('+=')
            MakefileVariableValueImpl(VARIABLE_VALUE)
              PsiElement(line)(' -mmacosx-version-min=$(MACOSX_VERSION_MIN)')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('  ')
          MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
            MakefileVariableImpl(VARIABLE)
              PsiElement(identifier)('BASE_CFLAGS')
            PsiWhiteSpace(' ')
            PsiElement(=)('+=')
            MakefileVariableValueImpl(VARIABLE_VALUE)
              PsiElement(line)(' -mmacosx-version-min=$(MACOSX_VERSION_MIN) ')
              PsiElement(split)('\\n')
              PsiElement(line)('                 -DMAC_OS_X_VERSION_MIN_REQUIRED=$(MAC_OS_X_VERSION_MIN_REQUIRED)')
          PsiWhiteSpace('\n\n\n')
          PsiWhiteSpace('  ')
          MakefileTopconditionalImpl(TOPCONDITIONAL)
            PsiElement(ifeq)('ifeq')
            PsiElement(condition)(' ($(ARCH),ppc)')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('    ')
            MakefileBlockImpl(BLOCK)
              MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
                MakefileVariableImpl(VARIABLE)
                  PsiElement(identifier)('BASE_CFLAGS')
                PsiWhiteSpace(' ')
                PsiElement(=)('+=')
                MakefileVariableValueImpl(VARIABLE_VALUE)
                  PsiElement(line)(' -arch ppc -faltivec -mmacosx-version-min=10.2')
              PsiWhiteSpace('\n')
              PsiWhiteSpace('    ')
              MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
                MakefileVariableImpl(VARIABLE)
                  PsiElement(identifier)('OPTIMIZEVM')
                PsiWhiteSpace(' ')
                PsiElement(=)('+=')
                MakefileVariableValueImpl(VARIABLE_VALUE)
                  PsiElement(line)(' -O3')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('  ')
            PsiElement(endif)('endif')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('  ')
          MakefileTopconditionalImpl(TOPCONDITIONAL)
            PsiElement(ifeq)('ifeq')
            PsiElement(condition)(' ($(ARCH),ppc64)')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('    ')
            MakefileBlockImpl(BLOCK)
              MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
                MakefileVariableImpl(VARIABLE)
                  PsiElement(identifier)('BASE_CFLAGS')
                PsiWhiteSpace(' ')
                PsiElement(=)('+=')
                MakefileVariableValueImpl(VARIABLE_VALUE)
                  PsiElement(line)(' -arch ppc64 -faltivec -mmacosx-version-min=10.2')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('  ')
            PsiElement(endif)('endif')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('  ')
          MakefileTopconditionalImpl(TOPCONDITIONAL)
            PsiElement(ifeq)('ifeq')
            PsiElement(condition)(' ($(ARCH),x86)')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('    ')
            MakefileBlockImpl(BLOCK)
              MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
                MakefileVariableImpl(VARIABLE)
                  PsiElement(identifier)('OPTIMIZEVM')
                PsiWhiteSpace(' ')
                PsiElement(=)('+=')
                MakefileVariableValueImpl(VARIABLE_VALUE)
                  PsiElement(line)(' -march=prescott -mfpmath=sse')
              PsiWhiteSpace('\n')
              PsiWhiteSpace('    ')
              PsiComment(COMMENT)('# x86 vm will crash without -mstackrealign since MMX instructions will be')
              PsiWhiteSpace('\n')
              PsiWhiteSpace('    ')
              PsiComment(COMMENT)('# used no matter what and they corrupt the frame pointer in VM calls')
              PsiWhiteSpace('\n')
              PsiWhiteSpace('    ')
              MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
                MakefileVariableImpl(VARIABLE)
                  PsiElement(identifier)('BASE_CFLAGS')
                PsiWhiteSpace(' ')
                PsiElement(=)('+=')
                MakefileVariableValueImpl(VARIABLE_VALUE)
                  PsiElement(line)(' -arch i386 -m32 -mstackrealign')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('  ')
            PsiElement(endif)('endif')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('  ')
          MakefileTopconditionalImpl(TOPCONDITIONAL)
            PsiElement(ifeq)('ifeq')
            PsiElement(condition)(' ($(ARCH),x86_64)')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('    ')
            MakefileBlockImpl(BLOCK)
              MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
                MakefileVariableImpl(VARIABLE)
                  PsiElement(identifier)('OPTIMIZEVM')
                PsiWhiteSpace(' ')
                PsiElement(=)('+=')
                MakefileVariableValueImpl(VARIABLE_VALUE)
                  PsiElement(line)(' -mfpmath=sse')
              PsiWhiteSpace('\n')
              PsiWhiteSpace('    ')
              MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
                MakefileVariableImpl(VARIABLE)
                  PsiElement(identifier)('BASE_CFLAGS')
                PsiWhiteSpace(' ')
                PsiElement(=)('+=')
                MakefileVariableValueImpl(VARIABLE_VALUE)
                  PsiElement(line)(' -arch x86_64')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('  ')
            PsiElement(endif)('endif')
          PsiWhiteSpace('\n\n')
          PsiWhiteSpace('  ')
          PsiComment(COMMENT)('# When compiling on OSX for OSX, we're not cross compiling as far as the')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('  ')
          PsiComment(COMMENT)('# Makefile is concerned, as target architecture is specified as a compiler')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('  ')
          PsiComment(COMMENT)('# argument')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('  ')
          MakefileTopconditionalImpl(TOPCONDITIONAL)
            PsiElement(ifeq)('ifeq')
            PsiElement(condition)(' ($(COMPILE_PLATFORM),darwin)')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('    ')
            MakefileBlockImpl(BLOCK)
              MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
                MakefileVariableImpl(VARIABLE)
                  PsiElement(identifier)('CROSS_COMPILING')
                PsiElement(=)('=')
                MakefileVariableValueImpl(VARIABLE_VALUE)
                  PsiElement(line)('0')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('  ')
            PsiElement(endif)('endif')
          PsiWhiteSpace('\n\n')
          PsiWhiteSpace('  ')
          MakefileTopconditionalImpl(TOPCONDITIONAL)
            PsiElement(ifeq)('ifeq')
            PsiElement(condition)(' ($(CROSS_COMPILING),1)')
            PsiWhiteSpace('\n')
            PsiWhiteSpace('    ')
            MakefileBlockImpl(BLOCK)
              MakefileTopconditionalImpl(TOPCONDITIONAL)
                PsiElement(ifeq)('ifeq')
                PsiElement(condition)(' ($(ARCH),ppc)')
                PsiWhiteSpace('\n')
                PsiWhiteSpace('      ')
                MakefileBlockImpl(BLOCK)
                  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
                    MakefileVariableImpl(VARIABLE)
                      PsiElement(identifier)('CC')
                    PsiElement(=)('=')
                    MakefileVariableValueImpl(VARIABLE_VALUE)
                      PsiElement(line)('powerpc-apple-darwin10-gcc')
                  PsiWhiteSpace('\n')
                  PsiWhiteSpace('      ')
                  MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
                    MakefileVariableImpl(VARIABLE)
                      PsiElement(identifier)('RANLIB')
                    PsiElement(=)('=')
                    MakefileVariableValueImpl(VARIABLE_VALUE)
                      PsiElement(line)('powerpc-apple-darwin10-ranlib')
                PsiWhiteSpace('\n')
                PsiWhiteSpace('    ')
                PsiElement(else)('else')
                PsiElement(EOL)('\n')
                PsiWhiteSpace('      ')
                MakefileBlockImpl(BLOCK)
                  MakefileTopconditionalImpl(TOPCONDITIONAL)
                    PsiElement(ifeq)('ifeq')
                    PsiElement(condition)(' ($(ARCH),x86)')
                    PsiWhiteSpace('\n')
                    PsiWhiteSpace('        ')
                    MakefileBlockImpl(BLOCK)
                      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
                        MakefileVariableImpl(VARIABLE)
                          PsiElement(identifier)('CC')
                        PsiElement(=)('=')
                        MakefileVariableValueImpl(VARIABLE_VALUE)
                          PsiElement(line)('i686-apple-darwin10-gcc')
                      PsiWhiteSpace('\n')
                      PsiWhiteSpace('        ')
                      MakefileVariableAssignmentImpl(VARIABLE_ASSIGNMENT)
                        MakefileVariableImpl(VARIABLE)
                          PsiElement(identifier)('RANLIB')
                        PsiElement(=)('=')
                        MakefileVariableValueImpl(VARIABLE_VALUE)
                          PsiElement(line)('i686-apple-darwin10-ranlib')
                    PsiWhiteSpace('\n')
                    PsiWhiteSpace('      ')
                    PsiElement(else)('else')
                    PsiElement(EOL)('\n')
                    PsiWhiteSpace('        ')
                    MakefileBlockImpl(BLOCK)
                      <empty list>
  PsiElement(variable_usage)('$(error Architecture $(ARCH)')
  PsiWhiteSpace(' ')
  PsiElement(identifier)('is')
  PsiWhiteSpace(' ')
  PsiElement(identifier)('not')
  PsiWhiteSpace(' ')
  PsiElement(identifier)('supported')
  PsiWhiteSpace(' ')
  PsiElement(identifier)('when')
  PsiWhiteSpace(' ')
  PsiElement(identifier)('cross')
  PsiWhiteSpace(' ')
  PsiElement(identifier)('compiling)')
  PsiWhiteSpace('\n')
  PsiWhiteSpace('      ')
  PsiErrorElement:':', '::' or <target> expected, got 'endif'
    PsiElement(endif)('endif')
  PsiElement(DUMMY_BLOCK)
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(else)('else')
        PsiElement(EOL)('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('TOOLS_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -DMACOS_X')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('BASE_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -fno-strict-aliasing -DMACOS_X -fno-common -pipe')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_OPENAL),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(ifneq)('ifneq')
        PsiElement(condition)(' ($(USE_OPENAL_DLOPEN),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('      ')
        PsiElement(identifier)('CLIENT_LIBS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -framework OpenAL')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(ifeq)('ifeq')
      PsiElement(DUMMY_BLOCK)
        PsiElement(condition)(' ($(USE_CURL),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(ifneq)('ifneq')
        PsiElement(condition)(' ($(USE_CURL_DLOPEN),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('      ')
        PsiElement(identifier)('CLIENT_LIBS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -lcurl')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_FREETYPE),1)')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('BASE_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' $(FREETYPE_CFLAGS)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('BASE_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -D_THREAD_SAFE=1')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_LOCAL_HEADERS),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('BASE_CFLAGS')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -I$(SDLHDIR)/include')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiComment(COMMENT)('# We copy sdlmain before ranlib'ing it so that subversion doesn't think')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiComment(COMMENT)('#  the file has been modified by each build.')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('LIBSDLMAIN')
        PsiElement(=)('=')
        PsiElement(line)('$(B)/libSDLmain.a')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('LIBSDLMAINSRC')
        PsiElement(=)('=')
        PsiElement(line)('$(LIBSDIR)/macosx/libSDLmain.a')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('CLIENT_LIBS')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -framework IOKit ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(LIBSDIR)/macosx/libSDL-1.2.0.dylib')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('RENDERER_LIBS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -framework OpenGL $(LIBSDIR)/macosx/libSDL-1.2.0.dylib')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('OPTIMIZE')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' $(OPTIMIZEVM) -ffast-math')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('SHLIBEXT')
        PsiElement(=)('=')
        PsiElement(line)('dylib')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('SHLIBCFLAGS')
        PsiElement(=)('=')
        PsiElement(line)('-fPIC -fno-common')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('SHLIBLDFLAGS')
        PsiElement(=)('=')
        PsiElement(line)('-dynamiclib $(LDFLAGS) -Wl,-U,_com_altivec')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('NOTSHLIBCFLAGS')
      PsiElement(DUMMY_BLOCK)
        PsiElement(=)('=')
        PsiElement(line)('-mdynamic-no-pic')
        PsiWhiteSpace('\n\n')
        PsiElement(else)('else')
        PsiWhiteSpace(' ')
        PsiComment(COMMENT)('# ifeq darwin')
        PsiElement(EOL)('\n\n\n')
        PsiComment(DOC_COMMENT)('#############################################################################')
        PsiWhiteSpace('\n')
        PsiComment(COMMENT)('# SETUP AND BUILD -- MINGW32')
        PsiWhiteSpace('\n')
        PsiComment(DOC_COMMENT)('#############################################################################')
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(PLATFORM),mingw32)')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(CROSS_COMPILING),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiComment(COMMENT)('# If CC is already set to something generic, we probably want to use')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiComment(COMMENT)('# something more specific')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(ifneq)('ifneq')
        PsiElement(condition)(' ($(findstring $(strip $(CC)),cc gcc),)')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace('      ')
        PsiElement(identifier)('CC')
        PsiElement(=)('=')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('    ')
        PsiComment(COMMENT)('# We need to figure out the correct gcc and windres')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(ARCH),x86_64)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('      ')
        PsiElement(identifier)('MINGW_PREFIXES')
        PsiElement(=)('=')
        PsiElement(line)('amd64-mingw32msvc x86_64-w64-mingw32')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(ifeq)('ifeq')
      PsiElement(DUMMY_BLOCK)
        PsiElement(condition)(' ($(ARCH),x86)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('      ')
        PsiElement(identifier)('MINGW_PREFIXES')
        PsiElement(=)('=')
        PsiElement(line)('i586-mingw32msvc i686-w64-mingw32')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('    ')
        PsiElement(ifndef)('ifndef')
        PsiElement(condition)(' CC')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('      ')
        PsiElement(identifier)('CC')
        PsiElement(=)('=')
        PsiElement(line)('$(strip $(foreach MINGW_PREFIX, $(MINGW_PREFIXES), ')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('         $(call bin_path, $(MINGW_PREFIX)-gcc)))')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('    ')
        PsiElement(ifndef)('ifndef')
        PsiElement(condition)(' WINDRES')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('      ')
        PsiElement(identifier)('WINDRES')
        PsiElement(=)('=')
        PsiElement(line)('$(strip $(foreach MINGW_PREFIX, $(MINGW_PREFIXES), ')
        PsiElement(split)('\\n')
        PsiElement(line)('         $(call bin_path, $(MINGW_PREFIX)-windres)))')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(else)('else')
        PsiElement(EOL)('\n')
        PsiWhiteSpace('    ')
        PsiComment(COMMENT)('# Some MinGW installations define CC to cc, but don't actually provide cc,')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiComment(COMMENT)('# so check that CC points to a real binary and use gcc if it doesn't')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(call bin_path, $(CC)),)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('      ')
        PsiElement(identifier)('CC')
        PsiElement(=)('=')
        PsiElement(line)('gcc')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('    ')
        PsiElement(ifndef)('ifndef')
      PsiElement(DUMMY_BLOCK)
        PsiElement(condition)(' WINDRES')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('      ')
        PsiElement(identifier)('WINDRES')
        PsiElement(=)('=')
        PsiElement(line)('windres')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(CC),)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(variable_usage)('$(error Cannot find a suitable cross compiler for $(PLATFORM)')
        PsiElement(identifier)(')')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('BASE_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' -Wall -fno-strict-aliasing -Wimplicit -Wstrict-prototypes ')
        PsiElement(split)('\\n')
        PsiElement(line)('    -DUSE_ICON')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiComment(COMMENT)('# In the absence of wspiapi.h, require Windows XP or later')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(shell test -e $(CMDIR)/wspiapi.h; echo $$?),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('BASE_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)(' -DWINVER=0x501')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_OPENAL),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('CLIENT_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' $(OPENAL_CFLAGS)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(ifneq)('ifneq')
        PsiElement(condition)(' ($(USE_OPENAL_DLOPEN),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('      ')
        PsiElement(identifier)('CLIENT_LDFLAGS')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' $(OPENAL_LDFLAGS)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(ARCH),x86_64)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('OPTIMIZEVM')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' -O3 -fno-omit-frame-pointer ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('      -funroll-loops -falign-functions=2 -fstrength-reduce')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('OPTIMIZE')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' $(OPTIMIZEVM) --fast-math')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('HAVE_VM_COMPILED')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' true')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(ARCH),x86)')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('OPTIMIZEVM')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' -O3 -march=i586 -fno-omit-frame-pointer ')
        PsiElement(split)('\\n')
        PsiElement(line)('      -funroll-loops -falign-functions=2 -fstrength-reduce')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('OPTIMIZE')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' $(OPTIMIZEVM) -ffast-math')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('HAVE_VM_COMPILED')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)(' true')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('SHLIBEXT')
        PsiElement(=)('=')
        PsiElement(line)('dll')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('SHLIBCFLAGS')
        PsiElement(=)('=')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('SHLIBLDFLAGS')
        PsiElement(=)('=')
        PsiElement(line)('-shared $(LDFLAGS)')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('BINEXT')
        PsiElement(=)('=')
        PsiElement(line)('.exe')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(CROSS_COMPILING),0)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('TOOLS_BINEXT')
        PsiElement(=)('=')
        PsiElement(line)('.exe')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('LIBS')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiElement(=)('=')
        PsiElement(line)(' -lws2_32 -lwinmm -lpsapi')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('CLIENT_LDFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -mwindows')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('CLIENT_LIBS')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' -lgdi32 -lole32')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('RENDERER_LIBS')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)(' -lgdi32 -lole32 -lopengl32')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_FREETYPE),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('BASE_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -Ifreetype2')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_CURL),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('CLIENT_CFLAGS')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' $(CURL_CFLAGS)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(ifneq)('ifneq')
        PsiElement(condition)(' ($(USE_CURL_DLOPEN),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('      ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_LOCAL_HEADERS),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('        ')
        PsiElement(identifier)('CLIENT_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -DCURL_STATICLIB')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('        ')
        PsiElement(ifeq)('ifeq')
      PsiElement(DUMMY_BLOCK)
        PsiElement(condition)(' ($(ARCH),x86_64)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('          ')
        PsiElement(identifier)('CLIENT_LIBS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' $(LIBSDIR)/win64/libcurl.a')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('        ')
        PsiElement(else)('else')
        PsiElement(EOL)('\n')
        PsiWhiteSpace('          ')
        PsiElement(identifier)('CLIENT_LIBS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' $(LIBSDIR)/win32/libcurl.a')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('        ')
        PsiElement(endif)('endif')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace('      ')
        PsiElement(else)('else')
        PsiElement(EOL)('\n')
        PsiWhiteSpace('        ')
        PsiElement(identifier)('CLIENT_LIBS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' $(CURL_LIBS)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('      ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(ARCH),x86)')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiComment(COMMENT)('# build 32bit')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('BASE_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -m32')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(else)('else')
        PsiElement(EOL)('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('BASE_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -m64')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiComment(COMMENT)('# libmingw32 must be linked before libSDLmain')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('CLIENT_LIBS')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -lmingw32')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('RENDERER_LIBS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -lmingw32')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_LOCAL_HEADERS),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('CLIENT_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -I$(SDLHDIR)/include')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(ARCH),x86)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('CLIENT_LIBS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' $(LIBSDIR)/win32/libSDLmain.a ')
        PsiElement(split)('\\n')
        PsiElement(line)('                      $(LIBSDIR)/win32/libSDL.dll.a')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('RENDERER_LIBS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' $(LIBSDIR)/win32/libSDLmain.a ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('                      $(LIBSDIR)/win32/libSDL.dll.a')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('SDLDLL')
        PsiElement(=)('=')
        PsiElement(line)('SDL.dll')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(else)('else')
        PsiElement(EOL)('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('CLIENT_LIBS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' $(LIBSDIR)/win64/libSDL64main.a ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('                      $(LIBSDIR)/win64/libSDL64.dll.a')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('RENDERER_LIBS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' $(LIBSDIR)/win64/libSDL64main.a ')
        PsiElement(split)('\\n')
        PsiElement(line)('                      $(LIBSDIR)/win64/libSDL64.dll.a')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('SDLDLL')
        PsiElement(=)('=')
        PsiElement(line)('SDL64.dll')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(else)('else')
        PsiElement(EOL)('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('CLIENT_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' $(SDL_CFLAGS)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('CLIENT_LIBS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' $(SDL_LIBS)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('RENDERER_LIBS')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' $(SDL_LIBS)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('SDLDLL')
        PsiElement(=)('=')
        PsiElement(line)('SDL.dll')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(else)('else')
        PsiWhiteSpace(' ')
        PsiComment(COMMENT)('# ifeq mingw32')
        PsiElement(EOL)('\n\n')
        PsiComment(DOC_COMMENT)('#############################################################################')
        PsiWhiteSpace('\n')
        PsiComment(COMMENT)('# SETUP AND BUILD -- FREEBSD')
        PsiWhiteSpace('\n')
        PsiComment(DOC_COMMENT)('#############################################################################')
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(PLATFORM),freebsd)')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiComment(COMMENT)('# flags')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('BASE_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' $(shell env MACHINE_ARCH=$(ARCH) make -f /dev/null -VCFLAGS) ')
        PsiElement(split)('\\n')
        PsiElement(line)('    -Wall -fno-strict-aliasing -Wimplicit -Wstrict-prototypes ')
        PsiElement(split)('\\n')
        PsiElement(line)('    -DUSE_ICON -DMAP_ANONYMOUS=MAP_ANON')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('CLIENT_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' $(SDL_CFLAGS)')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('HAVE_VM_COMPILED')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' true')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('OPTIMIZEVM')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' -O3 -funroll-loops -fomit-frame-pointer')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('OPTIMIZE')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' $(OPTIMIZEVM) -ffast-math')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('SHLIBEXT')
      PsiElement(DUMMY_BLOCK)
        PsiElement(=)('=')
        PsiElement(line)('so')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('SHLIBCFLAGS')
        PsiElement(=)('=')
        PsiElement(line)('-fPIC')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('SHLIBLDFLAGS')
        PsiElement(=)('=')
        PsiElement(line)('-shared $(LDFLAGS)')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('THREAD_LIBS')
        PsiElement(=)('=')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('-lpthread')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiComment(COMMENT)('# don't need -ldl (FreeBSD)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('LIBS')
        PsiElement(=)('=')
        PsiElement(line)('-lm')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('CLIENT_LIBS')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('CLIENT_LIBS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' $(SDL_LIBS)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('RENDERER_LIBS')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' $(SDL_LIBS) -lGL')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiComment(COMMENT)('# optional features/libraries')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_OPENAL),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_OPENAL_DLOPEN),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('      ')
        PsiElement(identifier)('CLIENT_LIBS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' $(THREAD_LIBS) -lopenal')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(endif)('endif')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_CURL),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_CURL_DLOPEN),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('      ')
        PsiElement(identifier)('CLIENT_LIBS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -lcurl')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiComment(COMMENT)('# cross-compiling tweaks')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(ARCH),x86)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(CROSS_COMPILING),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('      ')
        PsiElement(identifier)('BASE_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -m32')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(ifeq)('ifeq')
      PsiElement(DUMMY_BLOCK)
        PsiElement(condition)(' ($(ARCH),x86_64)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(CROSS_COMPILING),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('      ')
        PsiElement(identifier)('BASE_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -m64')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiElement(else)('else')
        PsiWhiteSpace(' ')
        PsiComment(COMMENT)('# ifeq freebsd')
        PsiElement(EOL)('\n\n')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiComment(DOC_COMMENT)('#############################################################################')
        PsiWhiteSpace('\n')
        PsiComment(COMMENT)('# SETUP AND BUILD -- OPENBSD')
        PsiWhiteSpace('\n')
        PsiComment(DOC_COMMENT)('#############################################################################')
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(PLATFORM),openbsd)')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('BASE_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' -Wall -fno-strict-aliasing -Wimplicit -Wstrict-prototypes ')
        PsiElement(split)('\\n')
        PsiElement(line)('    -pipe -DUSE_ICON -DMAP_ANONYMOUS=MAP_ANON')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('CLIENT_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' $(SDL_CFLAGS)')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('OPTIMIZEVM')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' -O3 -funroll-loops -fomit-frame-pointer')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('OPTIMIZE')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' $(OPTIMIZEVM) -ffast-math')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(ARCH),x86_64)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('OPTIMIZEVM')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)(' -O3 -fomit-frame-pointer -funroll-loops ')
        PsiElement(split)('\\n')
        PsiElement(line)('      -falign-functions=2 -fstrength-reduce')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('OPTIMIZE')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' $(OPTIMIZEVM) -ffast-math')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('HAVE_VM_COMPILED')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' true')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(else)('else')
      PsiElement(DUMMY_BLOCK)
        PsiElement(EOL)('\n')
        PsiWhiteSpace('  ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(ARCH),x86)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('OPTIMIZEVM')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' -O3 -march=i586 -fomit-frame-pointer ')
        PsiElement(split)('\\n')
        PsiElement(line)('      -funroll-loops -falign-functions=2 -fstrength-reduce')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('OPTIMIZE')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)(' $(OPTIMIZEVM) -ffast-math')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('HAVE_VM_COMPILED')
        PsiElement(=)('=')
        PsiElement(line)('true')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(else)('else')
        PsiElement(EOL)('\n')
        PsiWhiteSpace('  ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(ARCH),ppc)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('BASE_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)(' -maltivec')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('HAVE_VM_COMPILED')
        PsiElement(=)('=')
        PsiElement(line)('true')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(ARCH),ppc64)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('BASE_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -maltivec')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('HAVE_VM_COMPILED')
        PsiElement(=)('=')
        PsiElement(line)('true')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(ARCH),sparc64)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('OPTIMIZE')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -mtune=ultrasparc3 -mv8plus')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('OPTIMIZEVM')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -mtune=ultrasparc3 -mv8plus')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('HAVE_VM_COMPILED')
        PsiElement(=)('=')
        PsiElement(line)('true')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(ARCH),alpha)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiComment(COMMENT)('# According to http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=410555')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiComment(COMMENT)('# -ffast-math will cause the client to die with SIGFPE on Alpha')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('OPTIMIZE')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)(' $(OPTIMIZEVM)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_CURL),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('CLIENT_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' $(CURL_CFLAGS)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('USE_CURL_DLOPEN')
      PsiElement(DUMMY_BLOCK)
        PsiElement(=)('=')
        PsiElement(line)('0')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiComment(COMMENT)('# no shm_open on OpenBSD')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('USE_MUMBLE')
        PsiElement(=)('=')
        PsiElement(line)('0')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('SHLIBEXT')
        PsiElement(=)('=')
        PsiElement(line)('so')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('SHLIBCFLAGS')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiElement(=)('=')
        PsiElement(line)('-fPIC')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('SHLIBLDFLAGS')
        PsiElement(=)('=')
        PsiElement(line)('-shared $(LDFLAGS)')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('THREAD_LIBS')
        PsiElement(=)('=')
        PsiElement(line)('-lpthread')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('LIBS')
        PsiElement(=)('=')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('-lm')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('CLIENT_LIBS')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('CLIENT_LIBS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' $(SDL_LIBS)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('RENDERER_LIBS')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' $(SDL_LIBS) -lGL')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(ifeq)('ifeq')
      PsiElement(DUMMY_BLOCK)
        PsiElement(condition)(' ($(USE_OPENAL),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(ifneq)('ifneq')
        PsiElement(condition)(' ($(USE_OPENAL_DLOPEN),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('      ')
        PsiElement(identifier)('CLIENT_LIBS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' $(THREAD_LIBS) -lopenal')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_CURL),1)')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(ifneq)('ifneq')
        PsiElement(condition)(' ($(USE_CURL_DLOPEN),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('      ')
        PsiElement(identifier)('CLIENT_LIBS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -lcurl')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiElement(else)('else')
        PsiWhiteSpace(' ')
        PsiComment(COMMENT)('# ifeq openbsd')
        PsiElement(EOL)('\n\n')
        PsiComment(DOC_COMMENT)('#############################################################################')
        PsiWhiteSpace('\n')
        PsiComment(COMMENT)('# SETUP AND BUILD -- NETBSD')
        PsiWhiteSpace('\n')
        PsiComment(DOC_COMMENT)('#############################################################################')
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
      PsiElement(DUMMY_BLOCK)
        PsiElement(condition)(' ($(PLATFORM),netbsd)')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('LIBS')
        PsiElement(=)('=')
        PsiElement(line)('-lm')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('SHLIBEXT')
        PsiElement(=)('=')
        PsiElement(line)('so')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('SHLIBCFLAGS')
        PsiElement(=)('=')
        PsiElement(line)('-fPIC')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('SHLIBLDFLAGS')
        PsiElement(=)('=')
        PsiElement(line)('-shared $(LDFLAGS)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('THREAD_LIBS')
        PsiElement(=)('=')
        PsiElement(line)('-lpthread')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('BASE_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' -Wall -fno-strict-aliasing -Wimplicit -Wstrict-prototypes')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(ifeq)('ifeq')
      PsiElement(DUMMY_BLOCK)
        PsiElement(condition)(' ($(ARCH),x86)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('HAVE_VM_COMPILED')
        PsiElement(=)('=')
        PsiElement(line)('true')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('BUILD_CLIENT')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' 0')
        PsiWhiteSpace('\n')
        PsiElement(else)('else')
        PsiWhiteSpace(' ')
        PsiComment(COMMENT)('# ifeq netbsd')
        PsiElement(EOL)('\n\n')
      PsiElement(DUMMY_BLOCK)
        PsiComment(DOC_COMMENT)('#############################################################################')
        PsiWhiteSpace('\n')
        PsiComment(COMMENT)('# SETUP AND BUILD -- IRIX')
        PsiWhiteSpace('\n')
        PsiComment(DOC_COMMENT)('#############################################################################')
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(PLATFORM),irix64)')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('ARCH')
        PsiElement(=)('=')
        PsiElement(line)('mips')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('CC')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' c99')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('MKDIR')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)(' mkdir -p')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('BASE_CFLAGS')
        PsiElement(=)('=')
        PsiElement(line)('-Dstricmp=strcasecmp -Xcpluscomm -woff 1185 ')
        PsiElement(split)('\\n')
        PsiElement(line)('    -I. -I$(ROOT)/usr/include')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('CLIENT_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' $(SDL_CFLAGS)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('OPTIMIZE')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' -O3')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('SHLIBEXT')
        PsiElement(=)('=')
        PsiElement(line)('so')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('SHLIBCFLAGS')
        PsiElement(=)('=')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('SHLIBLDFLAGS')
        PsiElement(=)('=')
        PsiElement(line)('-shared')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('LIBS')
        PsiElement(=)('=')
        PsiElement(line)('-ldl -lm -lgen')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiComment(COMMENT)('# FIXME: The X libraries probably aren't necessary?')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('CLIENT_LIBS')
        PsiElement(=)('=')
        PsiElement(line)('-L/usr/X11/$(LIB) $(SDL_LIBS) ')
        PsiElement(split)('\\n')
        PsiElement(line)('    -lX11 -lXext -lm')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('RENDERER_LIBS')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)(' $(SDL_LIBS) -lGL')
        PsiWhiteSpace('\n\n')
        PsiElement(else)('else')
        PsiWhiteSpace(' ')
        PsiComment(COMMENT)('# ifeq IRIX')
        PsiElement(EOL)('\n\n')
        PsiComment(DOC_COMMENT)('#############################################################################')
        PsiWhiteSpace('\n')
        PsiComment(COMMENT)('# SETUP AND BUILD -- SunOS')
        PsiWhiteSpace('\n')
        PsiComment(DOC_COMMENT)('#############################################################################')
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(PLATFORM),sunos)')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('CC')
        PsiElement(=)('=')
        PsiElement(line)('gcc')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('INSTALL')
        PsiElement(=)('=')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('ginstall')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('MKDIR')
        PsiElement(=)('=')
        PsiElement(line)('mkdir')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('COPYDIR')
        PsiElement(=)('=')
        PsiElement(line)('"/usr/local/share/games/quake3"')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(ifneq)('ifneq')
        PsiElement(condition)(' ($(ARCH),x86)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(ifneq)('ifneq')
      PsiElement(DUMMY_BLOCK)
        PsiElement(condition)(' ($(ARCH),sparc)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('      ')
        PsiElement(ifneq)('ifneq')
        PsiElement(condition)(' ($(ARCH),x86_64)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('        ')
        PsiElement(variable_usage)('$(error arch $(ARCH)')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('is')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('currently')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('not')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('supported)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('      ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(endif)('endif')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('BASE_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' -Wall -fno-strict-aliasing -Wimplicit -Wstrict-prototypes ')
        PsiElement(split)('\\n')
        PsiElement(line)('    -pipe -DUSE_ICON')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('CLIENT_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' $(SDL_CFLAGS)')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('OPTIMIZEVM')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' -O3 -funroll-loops')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(ARCH),sparc)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('OPTIMIZEVM')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -O3 ')
        PsiElement(split)('\\n')
        PsiElement(line)('      -fstrength-reduce -falign-functions=2 ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('      -mtune=ultrasparc3 -mv8plus -mno-faster-structs')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('HAVE_VM_COMPILED')
        PsiElement(=)('=')
        PsiElement(line)('true')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(else)('else')
        PsiElement(EOL)('\n')
        PsiWhiteSpace('  ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(ARCH),x86)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('OPTIMIZEVM')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)(' -march=i586 -fomit-frame-pointer ')
        PsiElement(split)('\\n')
        PsiElement(line)('      -falign-functions=2 -fstrength-reduce')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('HAVE_VM_COMPILED')
        PsiElement(=)('=')
        PsiElement(line)('true')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('BASE_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -m32')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('CLIENT_CFLAGS')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -I/usr/X11/include/NVIDIA')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('CLIENT_LDFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -L/usr/X11/lib/NVIDIA -R/usr/X11/lib/NVIDIA')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(else)('else')
        PsiElement(EOL)('\n')
        PsiWhiteSpace('  ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(ARCH),x86_64)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('OPTIMIZEVM')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -march=athlon64 -fomit-frame-pointer ')
        PsiElement(split)('\\n')
        PsiElement(line)('      -falign-loops=2 -falign-jumps=2 ')
        PsiElement(split)('\\n')
        PsiElement(line)('      -falign-functions=2 -fstrength-reduce')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('HAVE_VM_COMPILED')
        PsiElement(=)('=')
        PsiElement(line)('true')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('BASE_CFLAGS')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -m64')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('CLIENT_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -I/usr/X11/include/NVIDIA')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('CLIENT_LDFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -L/usr/X11/lib/NVIDIA/amd64 -R/usr/X11/lib/NVIDIA/amd64')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('OPTIMIZE')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' $(OPTIMIZEVM) -ffast-math')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('SHLIBEXT')
        PsiElement(=)('=')
        PsiElement(line)('so')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('SHLIBCFLAGS')
        PsiElement(=)('=')
        PsiElement(line)('-fPIC')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('SHLIBLDFLAGS')
        PsiElement(=)('=')
        PsiElement(line)('-shared $(LDFLAGS)')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('THREAD_LIBS')
        PsiElement(=)('=')
        PsiElement(line)('-lpthread')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('LIBS')
        PsiElement(=)('=')
        PsiElement(line)('-lsocket -lnsl -ldl -lm')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('BOTCFLAGS')
      PsiElement(DUMMY_BLOCK)
        PsiElement(=)('=')
        PsiElement(line)('-O0')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('CLIENT_LIBS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)('$(SDL_LIBS) -lX11 -lXext -liconv -lm')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('RENDERER_LIBS')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' $(SDL_LIBS) -lGL')
        PsiWhiteSpace('\n\n')
        PsiElement(else)('else')
        PsiWhiteSpace(' ')
        PsiComment(COMMENT)('# ifeq sunos')
        PsiElement(EOL)('\n\n')
      PsiElement(DUMMY_BLOCK)
        PsiComment(DOC_COMMENT)('#############################################################################')
        PsiWhiteSpace('\n')
        PsiComment(COMMENT)('# SETUP AND BUILD -- GENERIC')
        PsiWhiteSpace('\n')
        PsiComment(DOC_COMMENT)('#############################################################################')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('BASE_CFLAGS')
        PsiElement(=)('=')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('OPTIMIZE')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' -O3')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('SHLIBEXT')
        PsiElement(=)('=')
        PsiElement(line)('so')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('SHLIBCFLAGS')
        PsiElement(=)('=')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('-fPIC')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('SHLIBLDFLAGS')
        PsiElement(=)('=')
        PsiElement(line)('-shared')
        PsiWhiteSpace('\n\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace(' ')
        PsiComment(COMMENT)('#Linux')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace(' ')
        PsiComment(COMMENT)('#darwin')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace(' ')
        PsiComment(COMMENT)('#mingw32')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace(' ')
        PsiComment(COMMENT)('#FreeBSD')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace(' ')
        PsiComment(COMMENT)('#OpenBSD')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiComment(COMMENT)('#NetBSD')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace(' ')
        PsiComment(COMMENT)('#IRIX')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace(' ')
        PsiComment(COMMENT)('#SunOS')
        PsiWhiteSpace('\n\n')
        PsiElement(ifndef)('ifndef')
        PsiElement(condition)(' CC')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('CC')
        PsiElement(=)('=')
        PsiElement(line)('gcc')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(ifndef)('ifndef')
        PsiElement(condition)(' RANLIB')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('RANLIB')
        PsiElement(=)('=')
        PsiElement(line)('ranlib')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(ifneq)('ifneq')
        PsiElement(condition)(' ($(HAVE_VM_COMPILED),true)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('BASE_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -DNO_VM_COMPILED')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('BUILD_GAME_QVM')
      PsiElement(DUMMY_BLOCK)
        PsiElement(=)('=')
        PsiElement(line)('0')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('TARGETS')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_FREETYPE),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('BASE_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -DBUILD_FREETYPE')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(ifndef)('ifndef')
        PsiElement(condition)(' FULLBINEXT')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('FULLBINEXT')
        PsiElement(=)('=')
        PsiElement(line)('.$(ARCH)$(BINEXT)')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(ifndef)('ifndef')
        PsiElement(condition)(' SHLIBNAME')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('SHLIBNAME')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiElement(=)('=')
        PsiElement(line)('$(ARCH).$(SHLIBEXT)')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(ifneq)('ifneq')
        PsiElement(condition)(' ($(BUILD_SERVER),0)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('TARGETS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' $(B)/$(SERVERBIN)$(FULLBINEXT)')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(ifneq)('ifneq')
      PsiElement(DUMMY_BLOCK)
        PsiElement(condition)(' ($(BUILD_CLIENT),0)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(ifneq)('ifneq')
        PsiElement(condition)(' ($(USE_RENDERER_DLOPEN),0)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('TARGETS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' $(B)/$(CLIENTBIN)$(FULLBINEXT) $(B)/renderer_opengl1_$(SHLIBNAME)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(ifneq)('ifneq')
        PsiElement(condition)(' ($(BUILD_RENDERER_OPENGL2), 0)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('      ')
        PsiElement(identifier)('TARGETS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)(' $(B)/renderer_opengl2_$(SHLIBNAME)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(else)('else')
        PsiElement(EOL)('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('TARGETS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' $(B)/$(CLIENTBIN)$(FULLBINEXT)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(ifneq)('ifneq')
        PsiElement(condition)(' ($(BUILD_RENDERER_OPENGL2), 0)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('      ')
        PsiElement(identifier)('TARGETS')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' $(B)/$(CLIENTBIN)_opengl2$(FULLBINEXT)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(ifneq)('ifneq')
        PsiElement(condition)(' ($(BUILD_GAME_SO),0)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(ifneq)('ifneq')
        PsiElement(condition)(' ($(BUILD_BASEGAME),0)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('TARGETS')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
        PsiElement(line)('      $(B)/$(BASEGAME)/cgame$(SHLIBNAME) ')
        PsiElement(split)('\\n')
        PsiElement(line)('      $(B)/$(BASEGAME)/qagame$(SHLIBNAME) ')
        PsiElement(split)('\\n')
        PsiElement(line)('      $(B)/$(BASEGAME)/ui$(SHLIBNAME)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(ifneq)('ifneq')
        PsiElement(condition)(' ($(BUILD_MISSIONPACK),0)')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('TARGETS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
        PsiElement(line)('      $(B)/$(MISSIONPACK)/cgame$(SHLIBNAME) ')
        PsiElement(split)('\\n')
        PsiElement(line)('      $(B)/$(MISSIONPACK)/qagame$(SHLIBNAME) ')
        PsiElement(split)('\\n')
        PsiElement(line)('      $(B)/$(MISSIONPACK)/ui$(SHLIBNAME)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n\n')
        PsiElement(ifneq)('ifneq')
        PsiElement(condition)(' ($(BUILD_GAME_QVM),0)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(ifneq)('ifneq')
        PsiElement(condition)(' ($(BUILD_BASEGAME),0)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('TARGETS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
        PsiElement(line)('      $(B)/$(BASEGAME)/vm/cgame.qvm ')
        PsiElement(split)('\\n')
        PsiElement(line)('      $(B)/$(BASEGAME)/vm/qagame.qvm ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('      $(B)/$(BASEGAME)/vm/ui.qvm')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(ifneq)('ifneq')
        PsiElement(condition)(' ($(BUILD_MISSIONPACK),0)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('TARGETS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
        PsiElement(line)('      $(B)/$(MISSIONPACK)/vm/cgame.qvm ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('      $(B)/$(MISSIONPACK)/vm/qagame.qvm ')
        PsiElement(split)('\\n')
        PsiElement(line)('      $(B)/$(MISSIONPACK)/vm/ui.qvm')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_OPENAL),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('CLIENT_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -DUSE_OPENAL')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_OPENAL_DLOPEN),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('CLIENT_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -DUSE_OPENAL_DLOPEN')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_CURL),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('CLIENT_CFLAGS')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -DUSE_CURL')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_CURL_DLOPEN),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('CLIENT_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -DUSE_CURL_DLOPEN')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
      PsiElement(DUMMY_BLOCK)
        PsiElement(condition)(' ($(USE_CODEC_VORBIS),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('CLIENT_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -DUSE_CODEC_VORBIS')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('NEED_OGG')
        PsiElement(=)('=')
        PsiElement(line)('1')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_CODEC_OPUS),1)')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('CLIENT_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -DUSE_CODEC_OPUS')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_INTERNAL_OPUS),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('CLIENT_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -DOPUS_BUILD -DHAVE_LRINTF -DFLOATING_POINT -DUSE_ALLOCA ')
        PsiElement(split)('\\n')
        PsiElement(line)('      -I$(OPUSDIR)/include -I$(OPUSDIR)/celt -I$(OPUSDIR)/silk ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('      -I$(OPUSDIR)/silk/float')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('CLIENT_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -I$(OPUSFILEDIR)/include')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(else)('else')
        PsiElement(EOL)('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('CLIENT_LIBS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -lopusfile -lopus')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('NEED_OGG')
        PsiElement(=)('=')
        PsiElement(line)('1')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(NEED_OGG),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_INTERNAL_OGG),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('CLIENT_CFLAGS')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -I$(OGGDIR)/include')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(else)('else')
        PsiElement(EOL)('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('CLIENT_LIBS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -logg')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
      PsiElement(DUMMY_BLOCK)
        PsiElement(condition)(' ($(USE_CODEC_VORBIS),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_INTERNAL_VORBIS),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('CLIENT_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -I$(VORBISDIR)/include -I$(VORBISDIR)/lib')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(else)('else')
        PsiElement(EOL)('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('CLIENT_LIBS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)(' -lvorbisfile -lvorbis')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_RENDERER_DLOPEN),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('CLIENT_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -DUSE_RENDERER_DLOPEN')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
      PsiElement(DUMMY_BLOCK)
        PsiElement(condition)(' ($(USE_MUMBLE),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('CLIENT_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -DUSE_MUMBLE')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_VOIP),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('CLIENT_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -DUSE_VOIP')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('SERVER_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -DUSE_VOIP')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_INTERNAL_SPEEX),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('CLIENT_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -DFLOATING_POINT -DUSE_ALLOCA -I$(SPEEXDIR)/include')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(else)('else')
        PsiElement(EOL)('\n')
  PsiElement(DUMMY_BLOCK)
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('    ')
        PsiElement(identifier)('CLIENT_LIBS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -lspeex -lspeexdsp')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_INTERNAL_ZLIB),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('BASE_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -DNO_GZIP')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('BASE_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -I$(ZDIR)')
        PsiWhiteSpace('\n')
        PsiElement(else)('else')
        PsiElement(EOL)('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('LIBS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -lz')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
      PsiElement(DUMMY_BLOCK)
        PsiElement(condition)(' ($(USE_INTERNAL_JPEG),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('BASE_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -DUSE_INTERNAL_JPEG')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('BASE_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -I$(JPDIR)')
        PsiWhiteSpace('\n')
        PsiElement(else)('else')
        PsiElement(EOL)('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('RENDERER_LIBS')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -ljpeg')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_FREETYPE),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('FREETYPE_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('?=')
        PsiElement(line)(' $(shell pkg-config --silence-errors --cflags freetype2 || true)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('FREETYPE_LIBS')
        PsiWhiteSpace(' ')
        PsiElement(=)('?=')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)(' $(shell pkg-config --silence-errors --libs freetype2 || echo -lfreetype)')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('BASE_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -DBUILD_FREETYPE $(FREETYPE_CFLAGS)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('RENDERER_LIBS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' $(FREETYPE_LIBS)')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ("$(CC)", $(findstring "$(CC)", "clang" "clang++"))')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('BASE_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -Qunused-arguments')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(ifdef)('ifdef')
        PsiElement(condition)(' DEFAULT_BASEDIR')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('BASE_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -DDEFAULT_BASEDIR=\\\"$(DEFAULT_BASEDIR)\\\"')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_LOCAL_HEADERS),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('BASE_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -DUSE_LOCAL_HEADERS')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(BUILD_STANDALONE),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('BASE_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)(' -DSTANDALONE')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_UIDIR),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('Q3UIDIR')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' $(UIDIR)')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(GENERATE_DEPENDENCIES),1)')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('DEPEND_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' -MMD')
        PsiWhiteSpace('\n')
        PsiElement(else)('else')
        PsiElement(EOL)('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('DEPEND_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(NO_STRIP),1)')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('STRIP_FLAG')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace('\n')
        PsiElement(else)('else')
        PsiElement(EOL)('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('STRIP_FLAG')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' -s')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('BASE_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)(' -DPRODUCT_VERSION=\\\"$(VERSION)\\\"')
        PsiWhiteSpace('\n')
        PsiElement(identifier)('BASE_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -Wformat=2 -Wno-format-zero-length -Wformat-security -Wno-format-nonliteral')
        PsiWhiteSpace('\n')
        PsiElement(identifier)('BASE_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -Wstrict-aliasing=2 -Wmissing-format-attribute')
        PsiWhiteSpace('\n')
        PsiElement(identifier)('BASE_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -Wdisabled-optimization')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiElement(identifier)('BASE_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -Werror-implicit-function-declaration')
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(V),1)')
        PsiWhiteSpace('\n')
        PsiElement(identifier)('echo_cmd')
        PsiElement(=)('=')
        PsiElement(line)('@:')
        PsiWhiteSpace('\n')
        PsiElement(identifier)('Q')
        PsiElement(=)('=')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiElement(else)('else')
        PsiElement(EOL)('\n')
        PsiElement(identifier)('echo_cmd')
        PsiElement(=)('=')
        PsiElement(line)('@echo')
        PsiWhiteSpace('\n')
        PsiElement(identifier)('Q')
        PsiElement(=)('=')
        PsiElement(line)('@')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(define)('define')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(identifier)('DO_CC')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(echo_cmd) "CC $<"')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(Q)$(CC) $(BASEGAME_CFLAGS) $(NOTSHLIBCFLAGS) $(CFLAGS) $(CLIENT_CFLAGS) $(OPTIMIZE) -o $@ -c $<')
        PsiWhiteSpace('\n')
        PsiElement(endef)('endef')
        PsiWhiteSpace('\n\n')
        PsiElement(define)('define')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('DO_REF_CC')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(echo_cmd) "REF_CC $<"')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(Q)$(CC) $(BASEGAME_CFLAGS) $(SHLIBCFLAGS) $(CFLAGS) $(CLIENT_CFLAGS) $(OPTIMIZE) -o $@ -c $<')
        PsiWhiteSpace('\n')
        PsiElement(endef)('endef')
        PsiWhiteSpace('\n\n')
        PsiElement(define)('define')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(identifier)('DO_REF_STR')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(echo_cmd) "REF_STR $<"')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(Q)rm -f $@')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(Q)echo "const char *fallbackShader_$(notdir $(basename $<)) =" >> $@')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(Q)cat $< | sed 's/^/\"/;s/$$/\\n\"/' >> $@')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(Q)echo ";" >> $@')
        PsiWhiteSpace('\n')
        PsiElement(endef)('endef')
        PsiWhiteSpace('\n\n')
        PsiElement(define)('define')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('DO_BOT_CC')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(echo_cmd) "BOT_CC $<"')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(Q)$(CC) $(BASEGAME_CFLAGS) $(NOTSHLIBCFLAGS) $(CFLAGS) $(BOTCFLAGS) $(OPTIMIZE) -DBOTLIB -o $@ -c $<')
        PsiWhiteSpace('\n')
        PsiElement(endef)('endef')
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(GENERATE_DEPENDENCIES),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('DO_QVM_DEP')
        PsiElement(=)('=')
        PsiElement(line)('cat $(@:%.o=%.d) | sed -e 's/\.o/\.asm/g' >> $(@:%.o=%.d)')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(define)('define')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('DO_SHLIB_CC')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(echo_cmd) "SHLIB_CC $<"')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(Q)$(CC) $(BASEGAME_CFLAGS) $(SHLIBCFLAGS) $(CFLAGS) $(OPTIMIZEVM) -o $@ -c $<')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(Q)$(DO_QVM_DEP)')
        PsiWhiteSpace('\n')
        PsiElement(endef)('endef')
        PsiWhiteSpace('\n\n')
        PsiElement(define)('define')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('DO_GAME_CC')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(echo_cmd) "GAME_CC $<"')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(Q)$(CC) $(BASEGAME_CFLAGS) -DQAGAME $(SHLIBCFLAGS) $(CFLAGS) $(OPTIMIZEVM) -o $@ -c $<')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(Q)$(DO_QVM_DEP)')
        PsiWhiteSpace('\n')
        PsiElement(endef)('endef')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n\n')
        PsiElement(define)('define')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('DO_CGAME_CC')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(echo_cmd) "CGAME_CC $<"')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(Q)$(CC) $(BASEGAME_CFLAGS) -DCGAME $(SHLIBCFLAGS) $(CFLAGS) $(OPTIMIZEVM) -o $@ -c $<')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(Q)$(DO_QVM_DEP)')
        PsiWhiteSpace('\n')
        PsiElement(endef)('endef')
        PsiWhiteSpace('\n\n')
        PsiElement(define)('define')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('DO_UI_CC')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(echo_cmd) "UI_CC $<"')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(Q)$(CC) $(BASEGAME_CFLAGS) -DUI $(SHLIBCFLAGS) $(CFLAGS) $(OPTIMIZEVM) -o $@ -c $<')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(Q)$(DO_QVM_DEP)')
        PsiWhiteSpace('\n')
        PsiElement(endef)('endef')
        PsiWhiteSpace('\n\n')
        PsiElement(define)('define')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('DO_SHLIB_CC_MISSIONPACK')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(echo_cmd) "SHLIB_CC_MISSIONPACK $<"')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(Q)$(CC) $(MISSIONPACK_CFLAGS) $(SHLIBCFLAGS) $(CFLAGS) $(OPTIMIZEVM) -o $@ -c $<')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(Q)$(DO_QVM_DEP)')
        PsiWhiteSpace('\n')
        PsiElement(endef)('endef')
        PsiWhiteSpace('\n\n')
        PsiElement(define)('define')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('DO_GAME_CC_MISSIONPACK')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(echo_cmd) "GAME_CC_MISSIONPACK $<"')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(Q)$(CC) $(MISSIONPACK_CFLAGS) -DQAGAME $(SHLIBCFLAGS) $(CFLAGS) $(OPTIMIZEVM) -o $@ -c $<')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(Q)$(DO_QVM_DEP)')
        PsiWhiteSpace('\n')
        PsiElement(endef)('endef')
        PsiWhiteSpace('\n\n')
        PsiElement(define)('define')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('DO_CGAME_CC_MISSIONPACK')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(echo_cmd) "CGAME_CC_MISSIONPACK $<"')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(Q)$(CC) $(MISSIONPACK_CFLAGS) -DCGAME $(SHLIBCFLAGS) $(CFLAGS) $(OPTIMIZEVM) -o $@ -c $<')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(Q)$(DO_QVM_DEP)')
        PsiWhiteSpace('\n')
        PsiElement(endef)('endef')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n\n')
        PsiElement(define)('define')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('DO_UI_CC_MISSIONPACK')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(echo_cmd) "UI_CC_MISSIONPACK $<"')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(Q)$(CC) $(MISSIONPACK_CFLAGS) -DUI $(SHLIBCFLAGS) $(CFLAGS) $(OPTIMIZEVM) -o $@ -c $<')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(Q)$(DO_QVM_DEP)')
        PsiWhiteSpace('\n')
        PsiElement(endef)('endef')
        PsiWhiteSpace('\n\n')
        PsiElement(define)('define')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('DO_AS')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(echo_cmd) "AS $<"')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(Q)$(CC) $(CFLAGS) $(OPTIMIZE) -x assembler-with-cpp -o $@ -c $<')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiElement(endef)('endef')
        PsiWhiteSpace('\n\n')
        PsiElement(define)('define')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('DO_DED_CC')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(echo_cmd) "DED_CC $<"')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(Q)$(CC) $(BASEGAME_CFLAGS) $(NOTSHLIBCFLAGS) -DDEDICATED $(CFLAGS) $(SERVER_CFLAGS) $(OPTIMIZE) -o $@ -c $<')
        PsiWhiteSpace('\n')
        PsiElement(endef)('endef')
        PsiWhiteSpace('\n\n')
        PsiElement(define)('define')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('DO_WINDRES')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(echo_cmd) "WINDRES $<"')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(Q)$(WINDRES) -i $< -o $@')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiElement(endef)('endef')
        PsiWhiteSpace('\n\n\n')
        PsiComment(DOC_COMMENT)('#############################################################################')
        PsiWhiteSpace('\n')
        PsiComment(COMMENT)('# MAIN TARGETS')
        PsiWhiteSpace('\n')
        PsiComment(DOC_COMMENT)('#############################################################################')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('default')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('release')
        PsiElement(EOL)('\n')
        PsiElement(identifier)('all')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('debug')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('release')
        PsiElement(EOL)('\n\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(identifier)('debug')
        PsiElement(:)(':')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@$(MAKE) targets B=$(BD) CFLAGS="$(CFLAGS) $(BASE_CFLAGS) $(DEPEND_CFLAGS)" ')
        PsiElement(split)('\\n')
        PsiElement(line)('\t  OPTIMIZE="$(DEBUG_CFLAGS)" OPTIMIZEVM="$(DEBUG_CFLAGS)" ')
        PsiElement(split)('\\n')
        PsiElement(line)('\t  ASMFLAGS="-m" ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('\t  CLIENT_CFLAGS="$(CLIENT_CFLAGS)" SERVER_CFLAGS="$(SERVER_CFLAGS)" V=$(V)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('release')
        PsiElement(:)(':')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@$(MAKE) targets B=$(BR) CFLAGS="$(CFLAGS) $(BASE_CFLAGS) $(DEPEND_CFLAGS)" ')
        PsiElement(split)('\\n')
        PsiElement(line)('\t  OPTIMIZE="-DNDEBUG $(OPTIMIZE)" OPTIMIZEVM="-DNDEBUG $(OPTIMIZEVM)" ')
        PsiElement(split)('\\n')
        PsiElement(line)('\t  CLIENT_CFLAGS="$(CLIENT_CFLAGS)" SERVER_CFLAGS="$(SERVER_CFLAGS)" V=$(V)')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n\n')
        PsiElement(ifneq)('ifneq')
        PsiElement(condition)(' ($(call bin_path, tput),)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('TERM_COLUMNS')
        PsiElement(=)('=')
        PsiElement(line)('$(shell echo $$((`tput cols`-4)))')
        PsiWhiteSpace('\n')
        PsiElement(else)('else')
        PsiElement(EOL)('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('TERM_COLUMNS')
        PsiElement(=)('=')
        PsiElement(line)('76')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('NAKED_TARGETS')
        PsiElement(=)('=')
        PsiElement(line)('$(shell echo $(TARGETS) | sed -e "s!$(B)/!!g")')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('print_list')
        PsiElement(=)('=')
        PsiElement(line)('@for i in $(1); ')
        PsiElement(split)('\\n')
        PsiElement(line)('     do ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('             echo "    $$i"; ')
        PsiElement(split)('\\n')
        PsiElement(line)('     done')
        PsiWhiteSpace('\n\n')
        PsiElement(ifneq)('ifneq')
        PsiElement(condition)(' ($(call bin_path, fmt),)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('print_wrapped')
        PsiElement(=)('=')
        PsiElement(line)('@echo $(1) | fmt -w $(TERM_COLUMNS) | sed -e "s/^\(.*\)$$/    \1/"')
        PsiWhiteSpace('\n')
        PsiElement(else)('else')
        PsiElement(EOL)('\n')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('  ')
        PsiElement(identifier)('print_wrapped')
        PsiElement(=)('=')
        PsiElement(line)('$(print_list)')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiComment(COMMENT)('# Create the build directories, check libraries and print out')
        PsiWhiteSpace('\n')
        PsiComment(COMMENT)('# an informational message, then start building')
        PsiWhiteSpace('\n')
        PsiElement(identifier)('targets')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('makedirs')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@echo ""')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(SDK_GAME),)')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@echo "Building in $(B):"')
        PsiWhiteSpace('\n')
        PsiElement(else)('else')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@echo "Building $(SDK_GAME) in $(B):"')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiComment(COMMENT)('# IOQ3_GITHUB_COMMIT can be defined in Makefile.local for SDK maintainers')
        PsiWhiteSpace('\n')
        PsiComment(COMMENT)('# to keep trace of the upstream supported ioquake3 commit')
        PsiWhiteSpace('\n')
        PsiElement(ifneq)('ifneq')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiElement(condition)(' ($(IOQ3_GITHUB_COMMIT),)')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@echo "  IOQ3_COMMIT: $(IOQ3_GITHUB_COMMIT)"')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@echo "  CLIENTBIN: $(CLIENTBIN)"')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@echo "  SERVERBIN: $(SERVERBIN)"')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@echo "  PLATFORM: $(PLATFORM)"')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@echo "  ARCH: $(ARCH)"')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@echo "  VERSION: $(VERSION)"')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@echo "  COMPILE_PLATFORM: $(COMPILE_PLATFORM)"')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@echo "  COMPILE_ARCH: $(COMPILE_ARCH)"')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@echo "  CC: $(CC)"')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(PLATFORM),mingw32)')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@echo "  WINDRES: $(WINDRES)"')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@echo ""')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@echo "  CFLAGS:"')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('$(call print_wrapped, $(CFLAGS) $(OPTIMIZE))')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@echo ""')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@echo "  CLIENT_CFLAGS:"')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(call print_wrapped, $(CLIENT_CFLAGS))')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@echo ""')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('@echo "  SERVER_CFLAGS:"')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(call print_wrapped, $(SERVER_CFLAGS))')
        PsiWhiteSpace('\n')
        PsiElement(ifneq)('ifneq')
        PsiElement(condition)(' ($(BASEGAME_CFLAGS),)')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@echo ""')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@echo "  BASEGAME_CFLAGS:"')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('$(call print_wrapped, $(BASEGAME_CFLAGS))')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@echo ""')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@echo "  LDFLAGS:"')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(call print_wrapped, $(LDFLAGS))')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@echo ""')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@echo "  LIBS:"')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(call print_wrapped, $(LIBS))')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@echo ""')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@echo "  CLIENT_LIBS:"')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(call print_wrapped, $(CLIENT_LIBS))')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@echo ""')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@echo "  Output:"')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(call print_list, $(NAKED_TARGETS))')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@echo ""')
        PsiWhiteSpace('\n')
        PsiElement(ifneq)('ifneq')
        PsiElement(condition)(' ($(TARGETS),)')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(ifndef)('ifndef')
        PsiElement(condition)(' DEBUG_MAKEFILE')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@$(MAKE) $(TARGETS) $(B).zip V=$(V)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B).zip')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(TARGETS)')
        PsiElement(EOL)('\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(PLATFORM),darwin)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(ifdef)('ifdef')
        PsiElement(condition)(' ARCHIVE')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@("./make-macosx-app.sh" release $(ARCH); if [ "$$?" -eq 0 ] && [ -d "$(B)/ioquake3.app" ]; then rm -f $@; cd $(B) && zip --symlinks -r9 ../../$@ `find "ioquake3.app" -print | sed -e "s!$(B)/!!g"`; else rm -f $@; cd $(B) && zip -r9 ../../$@ $(NAKED_TARGETS); fi)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiElement(ifneq)('ifneq')
        PsiElement(condition)(' ($(PLATFORM),darwin)')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(ifdef)('ifdef')
        PsiElement(condition)(' ARCHIVE')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@rm -f $@')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@(cd $(B) && zip -r9 ../../$@ $(NAKED_TARGETS))')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('makedirs')
        PsiElement(:)(':')
      PsiElement(DUMMY_BLOCK)
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@if [ ! -d $(BUILD_DIR) ];then $(MKDIR) $(BUILD_DIR);fi')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@if [ ! -d $(B) ];then $(MKDIR) $(B);fi')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@if [ ! -d $(B)/client ];then $(MKDIR) $(B)/client;fi')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@if [ ! -d $(B)/client/opus ];then $(MKDIR) $(B)/client/opus;fi')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('@if [ ! -d $(B)/client/vorbis ];then $(MKDIR) $(B)/client/vorbis;fi')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@if [ ! -d $(B)/renderergl1 ];then $(MKDIR) $(B)/renderergl1;fi')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@if [ ! -d $(B)/renderergl2 ];then $(MKDIR) $(B)/renderergl2;fi')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@if [ ! -d $(B)/renderergl2/glsl ];then $(MKDIR) $(B)/renderergl2/glsl;fi')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@if [ ! -d $(B)/ded ];then $(MKDIR) $(B)/ded;fi')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('@if [ ! -d $(B)/$(BASEGAME) ];then $(MKDIR) $(B)/$(BASEGAME);fi')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@if [ ! -d $(B)/$(BASEGAME)/cgame ];then $(MKDIR) $(B)/$(BASEGAME)/cgame;fi')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@if [ ! -d $(B)/$(BASEGAME)/game ];then $(MKDIR) $(B)/$(BASEGAME)/game;fi')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@if [ ! -d $(B)/$(BASEGAME)/ui ];then $(MKDIR) $(B)/$(BASEGAME)/ui;fi')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@if [ ! -d $(B)/$(BASEGAME)/qcommon ];then $(MKDIR) $(B)/$(BASEGAME)/qcommon;fi')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('@if [ ! -d $(B)/$(BASEGAME)/vm ];then $(MKDIR) $(B)/$(BASEGAME)/vm;fi')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@if [ ! -d $(B)/$(MISSIONPACK) ];then $(MKDIR) $(B)/$(MISSIONPACK);fi')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@if [ ! -d $(B)/$(MISSIONPACK)/cgame ];then $(MKDIR) $(B)/$(MISSIONPACK)/cgame;fi')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@if [ ! -d $(B)/$(MISSIONPACK)/game ];then $(MKDIR) $(B)/$(MISSIONPACK)/game;fi')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@if [ ! -d $(B)/$(MISSIONPACK)/ui ];then $(MKDIR) $(B)/$(MISSIONPACK)/ui;fi')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('@if [ ! -d $(B)/$(MISSIONPACK)/qcommon ];then $(MKDIR) $(B)/$(MISSIONPACK)/qcommon;fi')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@if [ ! -d $(B)/$(MISSIONPACK)/vm ];then $(MKDIR) $(B)/$(MISSIONPACK)/vm;fi')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@if [ ! -d $(B)/tools ];then $(MKDIR) $(B)/tools;fi')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@if [ ! -d $(B)/tools/asm ];then $(MKDIR) $(B)/tools/asm;fi')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@if [ ! -d $(B)/tools/etc ];then $(MKDIR) $(B)/tools/etc;fi')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('@if [ ! -d $(B)/tools/rcc ];then $(MKDIR) $(B)/tools/rcc;fi')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@if [ ! -d $(B)/tools/cpp ];then $(MKDIR) $(B)/tools/cpp;fi')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('@if [ ! -d $(B)/tools/lburg ];then $(MKDIR) $(B)/tools/lburg;fi')
        PsiWhiteSpace('\n\n')
        PsiComment(DOC_COMMENT)('#############################################################################')
        PsiWhiteSpace('\n')
        PsiComment(COMMENT)('# QVM BUILD TOOLS')
        PsiWhiteSpace('\n')
        PsiComment(DOC_COMMENT)('#############################################################################')
        PsiWhiteSpace('\n\n')
        PsiElement(ifndef)('ifndef')
        PsiElement(condition)(' TOOLS_CC')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiComment(COMMENT)('# A compiler which probably produces native binaries')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('TOOLS_CC')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' gcc')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('TOOLS_OPTIMIZE')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' -g -Wall -fno-strict-aliasing')
        PsiWhiteSpace('\n')
        PsiElement(identifier)('TOOLS_CFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' $(TOOLS_OPTIMIZE) ')
        PsiElement(split)('\\n')
        PsiElement(line)('                -DTEMPDIR=\"$(TEMPDIR)\" -DSYSTEM=\"\" ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('                -I$(Q3LCCSRCDIR) ')
        PsiElement(split)('\\n')
        PsiElement(line)('                -I$(LBURGDIR)')
        PsiWhiteSpace('\n')
        PsiElement(identifier)('TOOLS_LIBS')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace('\n')
        PsiElement(identifier)('TOOLS_LDFLAGS')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(GENERATE_DEPENDENCIES),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('TOOLS_CFLAGS')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' -MMD')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(define)('define')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('DO_TOOLS_CC')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(echo_cmd) "TOOLS_CC $<"')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(Q)$(TOOLS_CC) $(TOOLS_CFLAGS) -o $@ -c $<')
        PsiWhiteSpace('\n')
        PsiElement(endef)('endef')
        PsiWhiteSpace('\n\n')
        PsiElement(define)('define')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('DO_TOOLS_CC_DAGCHECK')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(echo_cmd) "TOOLS_CC_DAGCHECK $<"')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(Q)$(TOOLS_CC) $(TOOLS_CFLAGS) -Wno-unused -o $@ -c $<')
        PsiWhiteSpace('\n')
        PsiElement(endef)('endef')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('LBURG')
        PsiWhiteSpace('       ')
        PsiElement(=)('=')
        PsiElement(line)(' $(B)/tools/lburg/lburg$(TOOLS_BINEXT)')
        PsiWhiteSpace('\n')
        PsiElement(identifier)('DAGCHECK_C')
        PsiWhiteSpace('  ')
        PsiElement(=)('=')
        PsiElement(line)(' $(B)/tools/rcc/dagcheck.c')
        PsiWhiteSpace('\n')
        PsiElement(identifier)('Q3RCC')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('       ')
        PsiElement(=)('=')
        PsiElement(line)(' $(B)/tools/q3rcc$(TOOLS_BINEXT)')
        PsiWhiteSpace('\n')
        PsiElement(identifier)('Q3CPP')
        PsiWhiteSpace('       ')
        PsiElement(=)('=')
        PsiElement(line)(' $(B)/tools/q3cpp$(TOOLS_BINEXT)')
        PsiWhiteSpace('\n')
        PsiElement(identifier)('Q3LCC')
        PsiWhiteSpace('       ')
        PsiElement(=)('=')
        PsiElement(line)(' $(B)/tools/q3lcc$(TOOLS_BINEXT)')
        PsiWhiteSpace('\n')
        PsiElement(identifier)('Q3ASM')
        PsiWhiteSpace('       ')
        PsiElement(=)('=')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)(' $(B)/tools/q3asm$(TOOLS_BINEXT)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('LBURGOBJ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/tools/lburg/lburg.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/tools/lburg/gram.o')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/tools/lburg/%.o')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(LBURGDIR)/%.c')
      PsiElement(DUMMY_BLOCK)
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_TOOLS_CC)')
        PsiWhiteSpace('\n\n')
        PsiElement(variable_usage)('$(LBURG)')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(LBURGOBJ)')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(echo_cmd) "LD $@"')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('$(Q)$(TOOLS_CC) $(TOOLS_CFLAGS) $(TOOLS_LDFLAGS) -o $@ $^ $(TOOLS_LIBS)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('Q3RCCOBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/tools/rcc/alloc.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/tools/rcc/bind.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/tools/rcc/bytecode.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/tools/rcc/dag.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/tools/rcc/dagcheck.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/tools/rcc/decl.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/tools/rcc/enode.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/tools/rcc/error.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/tools/rcc/event.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/tools/rcc/expr.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/tools/rcc/gen.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/tools/rcc/init.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/tools/rcc/inits.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/tools/rcc/input.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/tools/rcc/lex.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/tools/rcc/list.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/tools/rcc/main.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/tools/rcc/null.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/tools/rcc/output.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/tools/rcc/prof.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/tools/rcc/profio.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/tools/rcc/simp.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/tools/rcc/stmt.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/tools/rcc/string.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/tools/rcc/sym.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/tools/rcc/symbolic.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/tools/rcc/trace.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/tools/rcc/tree.o ')
        PsiElement(split)('\\n')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/tools/rcc/types.o')
        PsiWhiteSpace('\n\n')
        PsiElement(variable_usage)('$(DAGCHECK_C)')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(LBURG)')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(Q3LCCSRCDIR)/dagcheck.md')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(echo_cmd) "LBURG $(Q3LCCSRCDIR)/dagcheck.md"')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(Q)$(LBURG) $(Q3LCCSRCDIR)/dagcheck.md $@')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/tools/rcc/dagcheck.o')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(DAGCHECK_C)')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_TOOLS_CC_DAGCHECK)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/tools/rcc/%.o')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(Q3LCCSRCDIR)/%.c')
        PsiElement(EOL)('\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_TOOLS_CC)')
        PsiWhiteSpace('\n\n')
        PsiElement(variable_usage)('$(Q3RCC)')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(Q3RCCOBJ)')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(echo_cmd) "LD $@"')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(Q)$(TOOLS_CC) $(TOOLS_CFLAGS) $(TOOLS_LDFLAGS) -o $@ $^ $(TOOLS_LIBS)')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('Q3CPPOBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/tools/cpp/cpp.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/tools/cpp/lex.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/tools/cpp/nlist.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/tools/cpp/tokens.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/tools/cpp/macro.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/tools/cpp/eval.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/tools/cpp/include.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/tools/cpp/hideset.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/tools/cpp/getopt.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/tools/cpp/unix.o')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/tools/cpp/%.o')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(Q3CPPDIR)/%.c')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_TOOLS_CC)')
        PsiWhiteSpace('\n\n')
        PsiElement(variable_usage)('$(Q3CPP)')
        PsiElement(:)(':')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(Q3CPPOBJ)')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(echo_cmd) "LD $@"')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(Q)$(TOOLS_CC) $(TOOLS_CFLAGS) $(TOOLS_LDFLAGS) -o $@ $^ $(TOOLS_LIBS)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('Q3LCCOBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
        PsiElement(line)('\t$(B)/tools/etc/lcc.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('\t$(B)/tools/etc/bytecode.o')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/tools/etc/%.o')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(Q3LCCETCDIR)/%.c')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_TOOLS_CC)')
        PsiWhiteSpace('\n\n')
        PsiElement(variable_usage)('$(Q3LCC)')
        PsiElement(:)(':')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(Q3LCCOBJ)')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(Q3RCC)')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(Q3CPP)')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(echo_cmd) "LD $@"')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(Q)$(TOOLS_CC) $(TOOLS_CFLAGS) $(TOOLS_LDFLAGS) -o $@ $(Q3LCCOBJ) $(TOOLS_LIBS)')
        PsiWhiteSpace('\n\n')
        PsiElement(define)('define')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('DO_Q3LCC')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(echo_cmd) "Q3LCC $<"')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(Q)$(Q3LCC) $(BASEGAME_CFLAGS) -o $@ $<')
        PsiWhiteSpace('\n')
        PsiElement(endef)('endef')
        PsiWhiteSpace('\n\n')
        PsiElement(define)('define')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('DO_CGAME_Q3LCC')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(echo_cmd) "CGAME_Q3LCC $<"')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(Q)$(Q3LCC) $(BASEGAME_CFLAGS) -DCGAME -o $@ $<')
        PsiWhiteSpace('\n')
        PsiElement(endef)('endef')
        PsiWhiteSpace('\n\n')
        PsiElement(define)('define')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('DO_GAME_Q3LCC')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(echo_cmd) "GAME_Q3LCC $<"')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(Q)$(Q3LCC) $(BASEGAME_CFLAGS) -DQAGAME -o $@ $<')
        PsiWhiteSpace('\n')
        PsiElement(endef)('endef')
        PsiWhiteSpace('\n\n')
        PsiElement(define)('define')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('DO_UI_Q3LCC')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(echo_cmd) "UI_Q3LCC $<"')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(Q)$(Q3LCC) $(BASEGAME_CFLAGS) -DUI -o $@ $<')
        PsiWhiteSpace('\n')
        PsiElement(endef)('endef')
        PsiWhiteSpace('\n\n')
        PsiElement(define)('define')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('DO_Q3LCC_MISSIONPACK')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(echo_cmd) "Q3LCC_MISSIONPACK $<"')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(Q)$(Q3LCC) $(MISSIONPACK_CFLAGS) -o $@ $<')
        PsiWhiteSpace('\n')
        PsiElement(endef)('endef')
        PsiWhiteSpace('\n\n')
        PsiElement(define)('define')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('DO_CGAME_Q3LCC_MISSIONPACK')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(echo_cmd) "CGAME_Q3LCC_MISSIONPACK $<"')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(Q)$(Q3LCC) $(MISSIONPACK_CFLAGS) -DCGAME -o $@ $<')
        PsiWhiteSpace('\n')
        PsiElement(endef)('endef')
        PsiWhiteSpace('\n\n')
        PsiElement(define)('define')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('DO_GAME_Q3LCC_MISSIONPACK')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(echo_cmd) "GAME_Q3LCC_MISSIONPACK $<"')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(Q)$(Q3LCC) $(MISSIONPACK_CFLAGS) -DQAGAME -o $@ $<')
        PsiWhiteSpace('\n')
        PsiElement(endef)('endef')
        PsiWhiteSpace('\n\n')
        PsiElement(define)('define')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('DO_UI_Q3LCC_MISSIONPACK')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(echo_cmd) "UI_Q3LCC_MISSIONPACK $<"')
        PsiWhiteSpace('\n')
        PsiElement(variable-value-line)('$(Q)$(Q3LCC) $(MISSIONPACK_CFLAGS) -DUI -o $@ $<')
        PsiWhiteSpace('\n')
        PsiElement(endef)('endef')
        PsiWhiteSpace('\n\n\n')
        PsiElement(identifier)('Q3ASMOBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/tools/asm/q3asm.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/tools/asm/cmdlib.o')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/tools/asm/%.o')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(Q3ASMDIR)/%.c')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_TOOLS_CC)')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n\n')
        PsiElement(variable_usage)('$(Q3ASM)')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(Q3ASMOBJ)')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(echo_cmd) "LD $@"')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(Q)$(TOOLS_CC) $(TOOLS_CFLAGS) $(TOOLS_LDFLAGS) -o $@ $^ $(TOOLS_LIBS)')
        PsiWhiteSpace('\n\n\n')
        PsiComment(DOC_COMMENT)('#############################################################################')
        PsiWhiteSpace('\n')
        PsiComment(COMMENT)('# CLIENT/SERVER')
        PsiWhiteSpace('\n')
        PsiComment(DOC_COMMENT)('#############################################################################')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('Q3OBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/cl_cgame.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/cl_cin.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/cl_console.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/cl_input.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/cl_keys.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/cl_main.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/cl_net_chan.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/cl_parse.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/cl_scrn.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/cl_ui.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/cl_avi.o ')
        PsiElement(split)('\\n')
        PsiWhiteSpace('  ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/cm_load.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/cm_patch.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/cm_polylib.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/client/cm_test.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/cm_trace.o ')
        PsiElement(split)('\\n')
        PsiWhiteSpace('  ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/cmd.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/common.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/cvar.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/files.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/md4.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/md5.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/msg.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/net_chan.o ')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/net_ip.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/huffman.o ')
        PsiElement(split)('\\n')
        PsiWhiteSpace('  ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/snd_adpcm.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/snd_dma.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/client/snd_mem.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/snd_mix.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/snd_wavelet.o ')
        PsiElement(split)('\\n')
        PsiWhiteSpace('  ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/snd_main.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/snd_codec.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/snd_codec_wav.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/snd_codec_ogg.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/snd_codec_opus.o ')
        PsiElement(split)('\\n')
        PsiWhiteSpace('  ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/qal.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/client/snd_openal.o ')
        PsiElement(split)('\\n')
        PsiWhiteSpace('  ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/cl_curl.o ')
        PsiElement(split)('\\n')
        PsiWhiteSpace('  ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/sv_bot.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/sv_ccmds.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/client/sv_client.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/sv_game.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/sv_init.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/sv_main.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/sv_net_chan.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/client/sv_snapshot.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/sv_world.o ')
        PsiElement(split)('\\n')
        PsiWhiteSpace('  ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/q_math.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/q_shared.o ')
        PsiElement(split)('\\n')
        PsiWhiteSpace('  ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/client/unzip.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/ioapi.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/puff.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/vm.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/vm_interpreted.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('  ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/be_aas_bspq3.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/be_aas_cluster.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/be_aas_debug.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/be_aas_entity.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/be_aas_file.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/be_aas_main.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/be_aas_move.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/be_aas_optimize.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/be_aas_reach.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/be_aas_route.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/be_aas_routealt.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/be_aas_sample.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/be_ai_char.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/be_ai_chat.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/be_ai_gen.o ')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/be_ai_goal.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/be_ai_move.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/be_ai_weap.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/be_ai_weight.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/be_ea.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/be_interface.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/l_crc.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/l_libvar.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/l_log.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/l_memory.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/l_precomp.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/l_script.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/l_struct.o ')
        PsiElement(split)('\\n')
        PsiWhiteSpace('  ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/sdl_input.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/client/sdl_snd.o ')
        PsiElement(split)('\\n')
        PsiWhiteSpace('  ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/con_log.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/sys_main.o')
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(PLATFORM),mingw32)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('Q3OBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/client/con_passive.o')
        PsiWhiteSpace('\n')
        PsiElement(else)('else')
        PsiElement(EOL)('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('Q3OBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/client/con_tty.o')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
      PsiElement(DUMMY_BLOCK)
        PsiElement(condition)(' ($(USE_Q3OBJ_ADDON),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('Q3OBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' $(SDK_Q3OBJ_ADDON)')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('Q3R2OBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/tr_animation.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/renderergl2/tr_backend.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/tr_bsp.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/tr_cmds.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/tr_curve.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/tr_extramath.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/renderergl2/tr_extensions.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/tr_fbo.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/tr_flares.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/tr_font.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/tr_glsl.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/renderergl2/tr_image.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/tr_image_png.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/tr_image_jpg.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/tr_image_bmp.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/tr_image_tga.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/renderergl2/tr_image_pcx.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/tr_init.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/tr_light.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/tr_main.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/tr_marks.o ')
        PsiElement(split)('\\n')
  PsiElement(DUMMY_BLOCK)
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/renderergl2/tr_mesh.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/tr_model.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/tr_model_iqm.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/tr_noise.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/tr_postprocess.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/renderergl2/tr_scene.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/tr_shade.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/tr_shade_calc.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/tr_shader.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/tr_shadows.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/renderergl2/tr_sky.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/tr_surface.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/tr_vbo.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/tr_world.o ')
        PsiElement(split)('\\n')
        PsiWhiteSpace('  ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl1/sdl_gamma.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl1/sdl_glimp.o')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('Q3R2STRINGOBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/glsl/bokeh_fp.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/glsl/bokeh_vp.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/glsl/calclevels4x_fp.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/glsl/calclevels4x_vp.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/glsl/depthblur_fp.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/glsl/depthblur_vp.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/glsl/dlight_fp.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/glsl/dlight_vp.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/glsl/down4x_fp.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/glsl/down4x_vp.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/glsl/fogpass_fp.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/glsl/fogpass_vp.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/glsl/generic_fp.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/glsl/generic_vp.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/glsl/lightall_fp.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/glsl/lightall_vp.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/glsl/pshadow_fp.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/glsl/pshadow_vp.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/glsl/shadowfill_fp.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/glsl/shadowfill_vp.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/glsl/shadowmask_fp.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/glsl/shadowmask_vp.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/glsl/ssao_fp.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/glsl/ssao_vp.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/glsl/texturecolor_fp.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/glsl/texturecolor_vp.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/glsl/tonemap_fp.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl2/glsl/tonemap_vp.o')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('Q3ROBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl1/tr_animation.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl1/tr_backend.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl1/tr_bsp.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl1/tr_cmds.o ')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl1/tr_curve.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl1/tr_flares.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl1/tr_font.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl1/tr_image.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl1/tr_image_png.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl1/tr_image_jpg.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl1/tr_image_bmp.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl1/tr_image_tga.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl1/tr_image_pcx.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl1/tr_init.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl1/tr_light.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl1/tr_main.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl1/tr_marks.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl1/tr_mesh.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl1/tr_model.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl1/tr_model_iqm.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl1/tr_noise.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl1/tr_scene.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl1/tr_shade.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl1/tr_shade_calc.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl1/tr_shader.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl1/tr_shadows.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl1/tr_sky.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl1/tr_surface.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl1/tr_world.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiWhiteSpace('  ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl1/sdl_gamma.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/renderergl1/sdl_glimp.o')
        PsiWhiteSpace('\n\n')
        PsiElement(ifneq)('ifneq')
        PsiElement(condition)(' ($(USE_RENDERER_DLOPEN), 0)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('Q3ROBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('    $(B)/renderergl1/q_shared.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/puff.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/q_math.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/tr_subs.o')
        PsiWhiteSpace('\n\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('Q3R2OBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('    $(B)/renderergl1/q_shared.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/puff.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/q_math.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/tr_subs.o')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(ifneq)('ifneq')
        PsiElement(condition)(' ($(USE_INTERNAL_JPEG),0)')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('JPGOBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jaricom.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jcapimin.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jcapistd.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jcarith.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jccoefct.o  ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jccolor.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jcdctmgr.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jchuff.o   ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jcinit.o ')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jcmainct.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jcmarker.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jcmaster.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jcomapi.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jcparam.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jcprepct.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jcsample.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jctrans.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jdapimin.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jdapistd.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jdarith.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jdatadst.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jdatasrc.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jdcoefct.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jdcolor.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jddctmgr.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jdhuff.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jdinput.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jdmainct.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jdmarker.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jdmaster.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jdmerge.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jdpostct.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jdsample.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jdtrans.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jerror.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jfdctflt.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jfdctfst.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jfdctint.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jidctflt.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jidctfst.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jidctint.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jmemmgr.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jmemnobs.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jquant1.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jquant2.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/jutils.o')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(FRAMEBUFFER_AND_GLSL_SUPPORT),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('Q3ROBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('    $(B)/renderergl1/tr_framebuffer.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/renderergl1/tr_glslprogs.o')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(ARCH),x86)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('Q3OBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/client/snd_mixa.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/client/matha.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/client/snapvector.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/client/ftola.o')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(ARCH),x86_64)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('Q3OBJ')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/client/snapvector.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/client/ftola.o')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_VOIP),1)')
        PsiWhiteSpace('\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_INTERNAL_SPEEX),1)')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiElement(identifier)('Q3OBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/bits.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/buffer.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/cb_search.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/exc_10_16_table.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/exc_10_32_table.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/exc_20_32_table.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/exc_5_256_table.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/exc_5_64_table.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/exc_8_128_table.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/fftwrap.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/filterbank.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/filters.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/gain_table.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/gain_table_lbr.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/hexc_10_32_table.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/hexc_table.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/high_lsp_tables.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/jitter.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/kiss_fft.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/kiss_fftr.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/lpc.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/lsp.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/lsp_tables_nb.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/ltp.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/mdf.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/modes.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/modes_wb.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/nb_celp.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/preprocess.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/quant_lsp.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/resample.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/sb_celp.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/smallft.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/speex.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/speex_callbacks.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/speex_header.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/stereo.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/vbr.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/vq.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/window.o')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_CODEC_OPUS),1)')
        PsiWhiteSpace('\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_INTERNAL_OPUS),1)')
        PsiWhiteSpace('\n')
        PsiElement(identifier)('Q3OBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/analysis.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/mlp.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/mlp_data.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/opus.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/opus_decoder.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/opus_encoder.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/opus_multistream.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/opus_multistream_encoder.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/opus_multistream_decoder.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/repacketizer.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiWhiteSpace('  ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/bands.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/celt.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/cwrs.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/entcode.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/client/opus/entdec.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/entenc.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/kiss_fft.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/laplace.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/mathops.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/client/opus/mdct.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/modes.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/pitch.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/celt_encoder.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/celt_decoder.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/client/opus/celt_lpc.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/quant_bands.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/rate.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/vq.o ')
        PsiElement(split)('\\n')
        PsiWhiteSpace('  ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/CNG.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/code_signs.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/init_decoder.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/decode_core.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/decode_frame.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/decode_parameters.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/decode_indices.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/decode_pulses.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/decoder_set_fs.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/dec_API.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/enc_API.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/encode_indices.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/encode_pulses.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/gain_quant.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/interpolate.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/LP_variable_cutoff.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/NLSF_decode.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/NSQ.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/NSQ_del_dec.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/PLC.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/shell_coder.o ')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/tables_gain.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/tables_LTP.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/tables_NLSF_CB_NB_MB.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/tables_NLSF_CB_WB.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/tables_other.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/tables_pitch_lag.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/tables_pulses_per_block.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/VAD.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/control_audio_bandwidth.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/quant_LTP_gains.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/VQ_WMat_EC.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/HP_variable_cutoff.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/NLSF_encode.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/NLSF_VQ.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/NLSF_unpack.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/NLSF_del_dec_quant.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/process_NLSFs.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/stereo_LR_to_MS.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/stereo_MS_to_LR.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/check_control_input.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/control_SNR.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/init_encoder.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/control_codec.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/A2NLSF.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/ana_filt_bank_1.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/biquad_alt.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/bwexpander_32.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/bwexpander.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/debug.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/decode_pitch.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/inner_prod_aligned.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/lin2log.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/log2lin.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/LPC_analysis_filter.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/LPC_inv_pred_gain.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/table_LSF_cos.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/NLSF2A.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/NLSF_stabilize.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/NLSF_VQ_weights_laroia.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/pitch_est_tables.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/resampler.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/resampler_down2_3.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/resampler_down2.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/resampler_private_AR2.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/resampler_private_down_FIR.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/resampler_private_IIR_FIR.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/resampler_private_up2_HQ.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/resampler_rom.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/sigm_Q15.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/sort.o ')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/sum_sqr_shift.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/stereo_decode_pred.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/stereo_encode_pred.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/stereo_find_predictor.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/stereo_quant_pred.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiWhiteSpace('  ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/apply_sine_window_FLP.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/corrMatrix_FLP.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/encode_frame_FLP.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/find_LPC_FLP.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/client/opus/find_LTP_FLP.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/find_pitch_lags_FLP.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/find_pred_coefs_FLP.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/LPC_analysis_filter_FLP.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/LTP_analysis_filter_FLP.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/client/opus/LTP_scale_ctrl_FLP.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/noise_shape_analysis_FLP.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/prefilter_FLP.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/process_gains_FLP.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/regularize_correlations_FLP.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/client/opus/residual_energy_FLP.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/solve_LS_FLP.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/warped_autocorrelation_FLP.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/wrappers_FLP.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/autocorrelation_FLP.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/client/opus/burg_modified_FLP.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/bwexpander_FLP.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/energy_FLP.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/inner_product_FLP.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/k2a_FLP.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/client/opus/levinsondurbin_FLP.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/LPC_inv_pred_gain_FLP.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/pitch_analysis_core_FLP.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/scale_copy_vector_FLP.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/scale_vector_FLP.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/client/opus/schur_FLP.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opus/sort_FLP.o ')
        PsiElement(split)('\\n')
        PsiWhiteSpace('  ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/http.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/info.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/internal.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/opusfile.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/stream.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/wincerts.o')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(NEED_OGG),1)')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_INTERNAL_OGG),1)')
        PsiWhiteSpace('\n')
        PsiElement(identifier)('Q3OBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/bitwise.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/framing.o')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_CODEC_VORBIS),1)')
        PsiWhiteSpace('\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_INTERNAL_VORBIS),1)')
        PsiWhiteSpace('\n')
        PsiElement(identifier)('Q3OBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/vorbis/analysis.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/vorbis/bitrate.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/vorbis/block.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/vorbis/codebook.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/vorbis/envelope.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/vorbis/floor0.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/vorbis/floor1.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/vorbis/info.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/vorbis/lookup.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/vorbis/lpc.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/vorbis/lsp.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/vorbis/mapping0.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/vorbis/mdct.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/vorbis/psy.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/vorbis/registry.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/vorbis/res0.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/vorbis/smallft.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/vorbis/sharedbook.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/vorbis/synthesis.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/vorbis/vorbisfile.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/vorbis/window.o')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_INTERNAL_ZLIB),1)')
        PsiWhiteSpace('\n')
        PsiElement(identifier)('Q3OBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/adler32.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/crc32.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/inffast.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/inflate.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/inftrees.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/client/zutil.o')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(HAVE_VM_COMPILED),true)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(ifneq)('ifneq')
      PsiElement(DUMMY_BLOCK)
        PsiElement(condition)(' ($(findstring $(ARCH),x86 x86_64),)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('Q3OBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
        PsiElement(line)('      $(B)/client/vm_x86.o')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(ifneq)('ifneq')
        PsiElement(condition)(' ($(findstring $(ARCH),ppc ppc64),)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('Q3OBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)(' $(B)/client/vm_powerpc.o $(B)/client/vm_powerpc_asm.o')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(ARCH),sparc)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('Q3OBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' $(B)/client/vm_sparc.o')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
      PsiElement(DUMMY_BLOCK)
        PsiElement(condition)(' ($(PLATFORM),mingw32)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('Q3OBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/client/win_resource.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/client/sys_win32.o')
        PsiWhiteSpace('\n')
        PsiElement(else)('else')
        PsiElement(EOL)('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('Q3OBJ')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/client/sys_unix.o')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(PLATFORM),darwin)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('Q3OBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/client/sys_osx.o')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_MUMBLE),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('Q3OBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/client/libmumblelink.o')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(ifneq)('ifneq')
        PsiElement(condition)(' ($(USE_RENDERER_DLOPEN),0)')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiElement(identifier)('$(B)/$(CLIENTBIN)$(FULLBINEXT)')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(Q3OBJ)')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(LIBSDLMAIN)')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(echo_cmd) "LD $@"')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(Q)$(CC) $(CLIENT_CFLAGS) $(CFLAGS) $(CLIENT_LDFLAGS) $(LDFLAGS) ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('\t\t-o $@ $(Q3OBJ) ')
        PsiElement(split)('\\n')
        PsiElement(line)('\t\t$(LIBSDLMAIN) $(CLIENT_LIBS) $(LIBS)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/renderer_opengl1_$(SHLIBNAME)')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(Q3ROBJ)')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(JPGOBJ)')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(echo_cmd) "LD $@"')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(Q)$(CC) $(CFLAGS) $(SHLIBLDFLAGS) -o $@ $(Q3ROBJ) $(JPGOBJ) ')
        PsiElement(split)('\\n')
        PsiElement(line)('\t\t$(THREAD_LIBS) $(LIBSDLMAIN) $(RENDERER_LIBS) $(LIBS)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/renderer_opengl2_$(SHLIBNAME)')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(Q3R2OBJ)')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(Q3R2STRINGOBJ)')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(JPGOBJ)')
        PsiElement(EOL)('\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(\t)('\t')
        PsiElement(line)('$(echo_cmd) "LD $@"')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(Q)$(CC) $(CFLAGS) $(SHLIBLDFLAGS) -o $@ $(Q3R2OBJ) $(Q3R2STRINGOBJ) $(JPGOBJ) ')
        PsiElement(split)('\\n')
        PsiElement(line)('\t\t$(THREAD_LIBS) $(LIBSDLMAIN) $(RENDERER_LIBS) $(LIBS)')
        PsiWhiteSpace('\n')
        PsiElement(else)('else')
        PsiElement(EOL)('\n')
        PsiElement(identifier)('$(B)/$(CLIENTBIN)$(FULLBINEXT)')
        PsiElement(:)(':')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(Q3OBJ)')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(Q3ROBJ)')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(JPGOBJ)')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(LIBSDLMAIN)')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(echo_cmd) "LD $@"')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(Q)$(CC) $(CLIENT_CFLAGS) $(CFLAGS) $(CLIENT_LDFLAGS) $(LDFLAGS) ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('\t\t-o $@ $(Q3OBJ) $(Q3ROBJ) $(JPGOBJ) ')
        PsiElement(split)('\\n')
        PsiElement(line)('\t\t$(LIBSDLMAIN) $(CLIENT_LIBS) $(RENDERER_LIBS) $(LIBS)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/$(CLIENTBIN)_opengl2$(FULLBINEXT)')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(Q3OBJ)')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(Q3R2OBJ)')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(Q3R2STRINGOBJ)')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(JPGOBJ)')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(LIBSDLMAIN)')
      PsiElement(DUMMY_BLOCK)
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(echo_cmd) "LD $@"')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(Q)$(CC) $(CLIENT_CFLAGS) $(CFLAGS) $(CLIENT_LDFLAGS) $(LDFLAGS) ')
        PsiElement(split)('\\n')
        PsiElement(line)('\t\t-o $@ $(Q3OBJ) $(Q3R2OBJ) $(Q3R2STRINGOBJ) $(JPGOBJ) ')
        PsiElement(split)('\\n')
        PsiElement(line)('\t\t$(LIBSDLMAIN) $(CLIENT_LIBS) $(RENDERER_LIBS) $(LIBS)')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n\n')
        PsiElement(ifneq)('ifneq')
        PsiElement(condition)(' ($(strip $(LIBSDLMAIN)),)')
        PsiWhiteSpace('\n')
        PsiElement(ifneq)('ifneq')
        PsiElement(condition)(' ($(strip $(LIBSDLMAINSRC)),)')
        PsiWhiteSpace('\n')
        PsiElement(variable_usage)('$(LIBSDLMAIN)')
        PsiWhiteSpace(' ')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(LIBSDLMAINSRC)')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('cp $< $@')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(RANLIB) $@')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n\n')
        PsiComment(DOC_COMMENT)('#############################################################################')
        PsiWhiteSpace('\n')
        PsiComment(COMMENT)('# DEDICATED SERVER')
        PsiWhiteSpace('\n')
        PsiComment(DOC_COMMENT)('#############################################################################')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('Q3DOBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/sv_bot.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/sv_client.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/sv_ccmds.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/sv_game.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/sv_init.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/sv_main.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/sv_net_chan.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/sv_snapshot.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/sv_world.o ')
        PsiElement(split)('\\n')
        PsiWhiteSpace('  ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/cm_load.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/cm_patch.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/ded/cm_polylib.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/cm_test.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/cm_trace.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/cmd.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/common.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/ded/cvar.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/files.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/md4.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/msg.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/net_chan.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/ded/net_ip.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/huffman.o ')
        PsiElement(split)('\\n')
        PsiWhiteSpace('  ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/q_math.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/q_shared.o ')
        PsiElement(split)('\\n')
        PsiWhiteSpace('  ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/ded/unzip.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/ioapi.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/vm.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/vm_interpreted.o ')
        PsiElement(split)('\\n')
        PsiWhiteSpace('  ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/be_aas_bspq3.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/be_aas_cluster.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/be_aas_debug.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/be_aas_entity.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/be_aas_file.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/be_aas_main.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/be_aas_move.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/be_aas_optimize.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/be_aas_reach.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/be_aas_route.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/be_aas_routealt.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/be_aas_sample.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/be_ai_char.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/be_ai_chat.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/be_ai_gen.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/be_ai_goal.o ')
  PsiElement(DUMMY_BLOCK)
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/be_ai_move.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/be_ai_weap.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/be_ai_weight.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/be_ea.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/be_interface.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/l_crc.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/l_libvar.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/l_log.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/l_memory.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/l_precomp.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/l_script.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/l_struct.o ')
        PsiElement(split)('\\n')
        PsiWhiteSpace('  ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/null_client.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/null_input.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/ded/null_snddma.o ')
        PsiElement(split)('\\n')
        PsiWhiteSpace('  ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/con_log.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/sys_main.o')
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_Q3DOBJ_ADDON),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('Q3DOBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)(' $(SDK_Q3DOBJ_ADDON)')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(ARCH),x86)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('Q3DOBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
        PsiElement(line)('      $(B)/ded/matha.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('      $(B)/ded/snapvector.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('      $(B)/ded/ftola.o')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(ARCH),x86_64)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('Q3DOBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
        PsiElement(line)('      $(B)/ded/snapvector.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('      $(B)/ded/ftola.o')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_INTERNAL_ZLIB),1)')
        PsiWhiteSpace('\n')
        PsiElement(identifier)('Q3DOBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/adler32.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/crc32.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/inffast.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/inflate.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/inftrees.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/ded/zutil.o')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
      PsiElement(DUMMY_BLOCK)
        PsiElement(condition)(' ($(HAVE_VM_COMPILED),true)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(ifneq)('ifneq')
        PsiElement(condition)(' ($(findstring $(ARCH),x86 x86_64),)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('Q3DOBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
        PsiElement(line)('      $(B)/ded/vm_x86.o')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(ifneq)('ifneq')
        PsiElement(condition)(' ($(findstring $(ARCH),ppc ppc64),)')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('Q3DOBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' $(B)/ded/vm_powerpc.o $(B)/ded/vm_powerpc_asm.o')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(ARCH),sparc)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        PsiElement(identifier)('Q3DOBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' $(B)/ded/vm_sparc.o')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(endif)('endif')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(PLATFORM),mingw32)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('Q3DOBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/ded/win_resource.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/ded/sys_win32.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('    $(B)/ded/con_win32.o')
        PsiWhiteSpace('\n')
        PsiElement(else)('else')
        PsiElement(EOL)('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('Q3DOBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/ded/sys_unix.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/ded/con_tty.o')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(PLATFORM),darwin)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('Q3DOBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
        PsiElement(line)('    $(B)/ded/sys_osx.o')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/$(SERVERBIN)$(FULLBINEXT)')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(Q3DOBJ)')
      PsiElement(DUMMY_BLOCK)
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(echo_cmd) "LD $@"')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(Q)$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(Q3DOBJ) $(LIBS)')
        PsiWhiteSpace('\n\n\n\n')
        PsiComment(DOC_COMMENT)('#############################################################################')
        PsiWhiteSpace('\n')
        PsiComment(DOC_COMMENT)('## BASEQ3 CGAME')
        PsiWhiteSpace('\n')
        PsiComment(DOC_COMMENT)('#############################################################################')
        PsiWhiteSpace('\n\n')
        PsiElement(ifneq)('ifneq')
        PsiElement(condition)(' ($(USE_SDK_Q3CGOBJ),1)')
        PsiWhiteSpace('\n')
        PsiElement(identifier)('Q3CGOBJ_')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/$(BASEGAME)/cgame/cg_main.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/cgame/bg_misc.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/cgame/bg_pmove.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/cgame/bg_slidemove.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/cgame/bg_lib.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/$(BASEGAME)/cgame/cg_consolecmds.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/cgame/cg_draw.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/cgame/cg_drawtools.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/cgame/cg_effects.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/cgame/cg_ents.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/$(BASEGAME)/cgame/cg_event.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/cgame/cg_info.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/cgame/cg_localents.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/cgame/cg_marks.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/cgame/cg_particles.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/$(BASEGAME)/cgame/cg_players.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/cgame/cg_playerstate.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/cgame/cg_predict.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/cgame/cg_scoreboard.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/cgame/cg_servercmds.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/$(BASEGAME)/cgame/cg_snapshot.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/cgame/cg_view.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/cgame/cg_weapons.o ')
        PsiElement(split)('\\n')
        PsiWhiteSpace('  ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/qcommon/q_math.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/qcommon/q_shared.o')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiElement(else)('else')
        PsiElement(EOL)('\n')
        PsiElement(identifier)('Q3CGOBJ_')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' $(SDK_Q3CGOBJ)')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('Q3CGOBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' $(Q3CGOBJ_) $(B)/$(BASEGAME)/cgame/cg_syscalls.o')
        PsiWhiteSpace('\n')
        PsiElement(identifier)('Q3CGVMOBJ')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' $(Q3CGOBJ_:%.o=%.asm)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/$(BASEGAME)/cgame$(SHLIBNAME)')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(Q3CGOBJ)')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(echo_cmd) "LD $@"')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(Q)$(CC) $(CFLAGS) $(SHLIBLDFLAGS) -o $@ $(Q3CGOBJ)')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/$(BASEGAME)/vm/cgame.qvm')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(Q3CGVMOBJ)')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(CGDIR)/cg_syscalls.asm')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(Q3ASM)')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(echo_cmd) "Q3ASM $@"')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(Q)$(Q3ASM) $(ASMFLAGS) -o $@ $(Q3CGVMOBJ) $(CGDIR)/cg_syscalls.asm')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n\n')
        PsiComment(DOC_COMMENT)('#############################################################################')
        PsiWhiteSpace('\n')
        PsiComment(DOC_COMMENT)('## MISSIONPACK CGAME')
        PsiWhiteSpace('\n')
        PsiComment(DOC_COMMENT)('#############################################################################')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('MPCGOBJ_')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/cgame/cg_main.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/cgame/bg_misc.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/cgame/bg_pmove.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/cgame/bg_slidemove.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/cgame/bg_lib.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/cgame/cg_consolecmds.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/cgame/cg_newdraw.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/cgame/cg_draw.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/cgame/cg_drawtools.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/cgame/cg_effects.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/cgame/cg_ents.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/cgame/cg_event.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/cgame/cg_info.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/cgame/cg_localents.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/cgame/cg_marks.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/cgame/cg_particles.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/cgame/cg_players.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/cgame/cg_playerstate.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/cgame/cg_predict.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/cgame/cg_scoreboard.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/cgame/cg_servercmds.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/cgame/cg_snapshot.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/cgame/cg_view.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/cgame/cg_weapons.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/ui/ui_shared.o ')
        PsiElement(split)('\\n')
        PsiWhiteSpace('  ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/qcommon/q_math.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/qcommon/q_shared.o')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('MPCGOBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' $(MPCGOBJ_) $(B)/$(MISSIONPACK)/cgame/cg_syscalls.o')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiElement(identifier)('MPCGVMOBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' $(MPCGOBJ_:%.o=%.asm)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/$(MISSIONPACK)/cgame$(SHLIBNAME)')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(MPCGOBJ)')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(echo_cmd) "LD $@"')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('$(Q)$(CC) $(CFLAGS) $(SHLIBLDFLAGS) -o $@ $(MPCGOBJ)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/$(MISSIONPACK)/vm/cgame.qvm')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(MPCGVMOBJ)')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(CGDIR)/cg_syscalls.asm')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(Q3ASM)')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(echo_cmd) "Q3ASM $@"')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('$(Q)$(Q3ASM) $(ASMFLAGS) -o $@ $(MPCGVMOBJ) $(CGDIR)/cg_syscalls.asm')
        PsiWhiteSpace('\n\n\n\n')
        PsiComment(DOC_COMMENT)('#############################################################################')
        PsiWhiteSpace('\n')
        PsiComment(DOC_COMMENT)('## BASEQ3 GAME')
        PsiWhiteSpace('\n')
        PsiComment(DOC_COMMENT)('#############################################################################')
        PsiWhiteSpace('\n\n')
        PsiElement(ifneq)('ifneq')
        PsiElement(condition)(' ($(USE_SDK_Q3GOBJ),1)')
        PsiWhiteSpace('\n')
        PsiElement(identifier)('Q3GOBJ_')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/game/g_main.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/game/ai_chat.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/$(BASEGAME)/game/ai_cmd.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/game/ai_dmnet.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/game/ai_dmq3.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/game/ai_main.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/game/ai_team.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/$(BASEGAME)/game/ai_vcmd.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/game/bg_misc.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/game/bg_pmove.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/game/bg_slidemove.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/game/bg_lib.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/$(BASEGAME)/game/g_active.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/game/g_arenas.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/game/g_bot.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/game/g_client.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/game/g_cmds.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/$(BASEGAME)/game/g_combat.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/game/g_items.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/game/g_mem.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/game/g_misc.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/game/g_missile.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/$(BASEGAME)/game/g_mover.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/game/g_session.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/game/g_spawn.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/game/g_svcmds.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/game/g_target.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/$(BASEGAME)/game/g_team.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/game/g_trigger.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/game/g_utils.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/game/g_weapon.o ')
        PsiElement(split)('\\n')
        PsiWhiteSpace('  ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/qcommon/q_math.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/qcommon/q_shared.o')
        PsiWhiteSpace('\n')
        PsiElement(else)('else')
        PsiElement(EOL)('\n')
        PsiElement(identifier)('Q3GOBJ_')
        PsiWhiteSpace(' ')
        PsiElement(=)('+=')
        PsiElement(line)(' $(SDK_Q3GOBJ)')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('Q3GOBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)(' $(Q3GOBJ_) $(B)/$(BASEGAME)/game/g_syscalls.o')
        PsiWhiteSpace('\n')
        PsiElement(identifier)('Q3GVMOBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' $(Q3GOBJ_:%.o=%.asm)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/$(BASEGAME)/qagame$(SHLIBNAME)')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(Q3GOBJ)')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(echo_cmd) "LD $@"')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(Q)$(CC) $(CFLAGS) $(SHLIBLDFLAGS) -o $@ $(Q3GOBJ)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/$(BASEGAME)/vm/qagame.qvm')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(Q3GVMOBJ)')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(GDIR)/g_syscalls.asm')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(Q3ASM)')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(echo_cmd) "Q3ASM $@"')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(Q)$(Q3ASM) $(ASMFLAGS) -o $@ $(Q3GVMOBJ) $(GDIR)/g_syscalls.asm')
        PsiWhiteSpace('\n\n')
        PsiComment(DOC_COMMENT)('#############################################################################')
        PsiWhiteSpace('\n')
        PsiComment(DOC_COMMENT)('## MISSIONPACK GAME')
        PsiWhiteSpace('\n')
        PsiComment(DOC_COMMENT)('#############################################################################')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('MPGOBJ_')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/game/g_main.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/game/ai_chat.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/game/ai_cmd.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/game/ai_dmnet.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/game/ai_dmq3.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/game/ai_main.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/game/ai_team.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/game/ai_vcmd.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/game/bg_misc.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/game/bg_pmove.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/game/bg_slidemove.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/game/bg_lib.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/game/g_active.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/game/g_arenas.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/game/g_bot.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/game/g_client.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/game/g_cmds.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/game/g_combat.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/game/g_items.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/game/g_mem.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/game/g_misc.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/game/g_missile.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/game/g_mover.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/game/g_session.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/game/g_spawn.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/game/g_svcmds.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/game/g_target.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/game/g_team.o ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/game/g_trigger.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/game/g_utils.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/game/g_weapon.o ')
        PsiElement(split)('\\n')
        PsiWhiteSpace('  ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/qcommon/q_math.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/$(MISSIONPACK)/qcommon/q_shared.o')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('MPGOBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' $(MPGOBJ_) $(B)/$(MISSIONPACK)/game/g_syscalls.o')
        PsiWhiteSpace('\n')
        PsiElement(identifier)('MPGVMOBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' $(MPGOBJ_:%.o=%.asm)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/$(MISSIONPACK)/qagame$(SHLIBNAME)')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(MPGOBJ)')
      PsiElement(DUMMY_BLOCK)
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(echo_cmd) "LD $@"')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(Q)$(CC) $(CFLAGS) $(SHLIBLDFLAGS) -o $@ $(MPGOBJ)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/$(MISSIONPACK)/vm/qagame.qvm')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(MPGVMOBJ)')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(GDIR)/g_syscalls.asm')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(Q3ASM)')
      PsiElement(DUMMY_BLOCK)
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(echo_cmd) "Q3ASM $@"')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(Q)$(Q3ASM) $(ASMFLAGS) -o $@ $(MPGVMOBJ) $(GDIR)/g_syscalls.asm')
        PsiWhiteSpace('\n\n\n\n')
        PsiComment(DOC_COMMENT)('#############################################################################')
        PsiWhiteSpace('\n')
        PsiComment(DOC_COMMENT)('## BASEQ3 UI')
        PsiWhiteSpace('\n')
        PsiComment(DOC_COMMENT)('#############################################################################')
        PsiWhiteSpace('\n\n')
        PsiElement(ifneq)('ifneq')
        PsiElement(condition)(' ($(USE_SDK_Q3UIOBJ),1)')
        PsiWhiteSpace('\n')
        PsiElement(identifier)('Q3UIOBJ_')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/$(BASEGAME)/ui/ui_main.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/ui/bg_misc.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/ui/bg_lib.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/ui/ui_addbots.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/ui/ui_atoms.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/$(BASEGAME)/ui/ui_cdkey.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/ui/ui_cinematics.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/ui/ui_confirm.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/ui/ui_connect.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/ui/ui_controls2.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/$(BASEGAME)/ui/ui_credits.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/ui/ui_demo2.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/ui/ui_display.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/ui/ui_gameinfo.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/ui/ui_ingame.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/$(BASEGAME)/ui/ui_loadconfig.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/ui/ui_menu.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/ui/ui_mfield.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/ui/ui_mods.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/ui/ui_network.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/$(BASEGAME)/ui/ui_options.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/ui/ui_playermodel.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/ui/ui_players.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/ui/ui_playersettings.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/ui/ui_preferences.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/$(BASEGAME)/ui/ui_qmenu.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/ui/ui_removebots.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/ui/ui_saveconfig.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/ui/ui_serverinfo.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/ui/ui_servers2.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/$(BASEGAME)/ui/ui_setup.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/ui/ui_sound.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/ui/ui_sparena.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/ui/ui_specifyserver.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/ui/ui_splevel.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/$(BASEGAME)/ui/ui_sppostgame.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/ui/ui_spskill.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/ui/ui_startserver.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/ui/ui_team.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/ui/ui_teamorders.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/$(BASEGAME)/ui/ui_video.o ')
        PsiElement(split)('\\n')
        PsiWhiteSpace('  ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/qcommon/q_math.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(BASEGAME)/qcommon/q_shared.o')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('Q3UIOBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' $(Q3UIOBJ_) $(B)/$(MISSIONPACK)/ui/ui_syscalls.o')
        PsiWhiteSpace('\n')
        PsiElement(else)('else')
      PsiElement(DUMMY_BLOCK)
        PsiElement(EOL)('\n')
        PsiElement(identifier)('Q3UIOBJ_')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' $(SDK_Q3UIOBJ)')
        PsiWhiteSpace('\n')
        PsiElement(identifier)('Q3UIOBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' $(Q3UIOBJ_) $(B)/$(BASENAME)/ui/ui_syscalls.o')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiElement(identifier)('Q3UIVMOBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)(' $(Q3UIOBJ_:%.o=%.asm)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/$(BASEGAME)/ui$(SHLIBNAME)')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(Q3UIOBJ)')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(echo_cmd) "LD $@"')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(Q)$(CC) $(CFLAGS) $(SHLIBLDFLAGS) -o $@ $(Q3UIOBJ)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/$(BASEGAME)/vm/ui.qvm')
      PsiElement(DUMMY_BLOCK)
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(Q3UIVMOBJ)')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(UIDIR)/ui_syscalls.asm')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(Q3ASM)')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(echo_cmd) "Q3ASM $@"')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(Q)$(Q3ASM) $(ASMFLAGS) -o $@ $(Q3UIVMOBJ) $(UIDIR)/ui_syscalls.asm')
        PsiWhiteSpace('\n\n')
        PsiComment(DOC_COMMENT)('#############################################################################')
        PsiWhiteSpace('\n')
        PsiComment(DOC_COMMENT)('## MISSIONPACK UI')
        PsiWhiteSpace('\n')
        PsiComment(DOC_COMMENT)('#############################################################################')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('MPUIOBJ_')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/ui/ui_main.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/ui/ui_atoms.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/ui/ui_gameinfo.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/ui/ui_players.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/$(MISSIONPACK)/ui/ui_shared.o ')
        PsiElement(split)('\\n')
        PsiWhiteSpace('  ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/ui/bg_misc.o ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/ui/bg_lib.o ')
        PsiElement(split)('\\n')
        PsiWhiteSpace('  ')
        PsiElement(split)('\\n')
        PsiElement(line)('  $(B)/$(MISSIONPACK)/qcommon/q_math.o ')
        PsiElement(split)('\\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('  $(B)/$(MISSIONPACK)/qcommon/q_shared.o')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('MPUIOBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' $(MPUIOBJ_) $(B)/$(MISSIONPACK)/ui/ui_syscalls.o')
        PsiWhiteSpace('\n')
        PsiElement(identifier)('MPUIVMOBJ')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiElement(line)(' $(MPUIOBJ_:%.o=%.asm)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/$(MISSIONPACK)/ui$(SHLIBNAME)')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(MPUIOBJ)')
      PsiElement(DUMMY_BLOCK)
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(echo_cmd) "LD $@"')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(Q)$(CC) $(CFLAGS) $(SHLIBLDFLAGS) -o $@ $(MPUIOBJ)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/$(MISSIONPACK)/vm/ui.qvm')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(MPUIVMOBJ)')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(UIDIR)/ui_syscalls.asm')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(Q3ASM)')
      PsiElement(DUMMY_BLOCK)
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(echo_cmd) "Q3ASM $@"')
        PsiWhiteSpace('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(Q)$(Q3ASM) $(ASMFLAGS) -o $@ $(MPUIVMOBJ) $(UIDIR)/ui_syscalls.asm')
        PsiWhiteSpace('\n\n\n\n')
        PsiComment(DOC_COMMENT)('#############################################################################')
        PsiWhiteSpace('\n')
        PsiComment(DOC_COMMENT)('## CLIENT/SERVER RULES')
        PsiWhiteSpace('\n')
        PsiComment(DOC_COMMENT)('#############################################################################')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/client/%.o')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(ASMDIR)/%.s')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('$(DO_AS)')
        PsiWhiteSpace('\n\n')
        PsiComment(COMMENT)('# k8 so inline assembler knows about SSE')
        PsiWhiteSpace('\n')
        PsiElement(identifier)('$(B)/client/%.o')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(ASMDIR)/%.c')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_CC) -march=k8')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/client/%.o')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(CDIR)/%.c')
      PsiElement(DUMMY_BLOCK)
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_CC)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/client/%.o')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(SDIR)/%.c')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_CC)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/client/%.o')
      PsiElement(DUMMY_BLOCK)
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(CMDIR)/%.c')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_CC)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/client/%.o')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(BLIBDIR)/%.c')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('$(DO_BOT_CC)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/client/%.o')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(SPEEXDIR)/%.c')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_CC)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/client/%.o')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(OGGDIR)/src/%.c')
      PsiElement(DUMMY_BLOCK)
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_CC)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/client/vorbis/%.o')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(VORBISDIR)/lib/%.c')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_CC)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/client/opus/%.o')
      PsiElement(DUMMY_BLOCK)
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(OPUSDIR)/src/%.c')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_CC)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/client/opus/%.o')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(OPUSDIR)/celt/%.c')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('$(DO_CC)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/client/opus/%.o')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(OPUSDIR)/silk/%.c')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_CC)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/client/opus/%.o')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(OPUSDIR)/silk/float/%.c')
      PsiElement(DUMMY_BLOCK)
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_CC)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/client/%.o')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(OPUSFILEDIR)/src/%.c')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_CC)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/client/%.o')
      PsiElement(DUMMY_BLOCK)
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(ZDIR)/%.c')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_CC)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/client/%.o')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(SDLDIR)/%.c')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('$(DO_CC)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/client/%.o')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(SYSDIR)/%.c')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_CC)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/client/%.o')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(SYSDIR)/%.m')
      PsiElement(DUMMY_BLOCK)
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_CC)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/client/%.o')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(SYSDIR)/%.rc')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_WINDRES)')
        PsiWhiteSpace('\n\n\n')
        PsiElement(identifier)('$(B)/renderergl1/%.o')
      PsiElement(DUMMY_BLOCK)
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(CMDIR)/%.c')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_REF_CC)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/renderergl1/%.o')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(SDLDIR)/%.c')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('$(DO_REF_CC)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/renderergl1/%.o')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(JPDIR)/%.c')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_REF_CC)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/renderergl1/%.o')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(RCOMMONDIR)/%.c')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_REF_CC)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/renderergl1/%.o')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(RGL1DIR)/%.c')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_REF_CC)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/renderergl2/glsl/%.c')
      PsiElement(DUMMY_BLOCK)
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(RGL2DIR)/glsl/%.glsl')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_REF_STR)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/renderergl2/glsl/%.o')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(B)/renderergl2/glsl/%.c')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('$(DO_REF_CC)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/renderergl2/%.o')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(RCOMMONDIR)/%.c')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_REF_CC)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/renderergl2/%.o')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(RGL2DIR)/%.c')
      PsiElement(DUMMY_BLOCK)
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_REF_CC)')
        PsiWhiteSpace('\n\n\n')
        PsiElement(identifier)('$(B)/ded/%.o')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(ASMDIR)/%.s')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_AS)')
        PsiWhiteSpace('\n\n')
        PsiComment(COMMENT)('# k8 so inline assembler knows about SSE')
        PsiWhiteSpace('\n')
        PsiElement(identifier)('$(B)/ded/%.o')
      PsiElement(DUMMY_BLOCK)
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(ASMDIR)/%.c')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_CC) -march=k8')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/ded/%.o')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(SDIR)/%.c')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('$(DO_DED_CC)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/ded/%.o')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(CMDIR)/%.c')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_DED_CC)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/ded/%.o')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(ZDIR)/%.c')
      PsiElement(DUMMY_BLOCK)
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_DED_CC)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/ded/%.o')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(BLIBDIR)/%.c')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_BOT_CC)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/ded/%.o')
      PsiElement(DUMMY_BLOCK)
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(SYSDIR)/%.c')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_DED_CC)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/ded/%.o')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(SYSDIR)/%.m')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('$(DO_DED_CC)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/ded/%.o')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(SYSDIR)/%.rc')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_WINDRES)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/ded/%.o')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(NDIR)/%.c')
      PsiElement(DUMMY_BLOCK)
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_DED_CC)')
        PsiWhiteSpace('\n\n')
        PsiComment(COMMENT)('# Extra dependencies to ensure the git version is incorporated')
        PsiWhiteSpace('\n')
        PsiElement(ifeq)('ifeq')
        PsiElement(condition)(' ($(USE_GIT),1)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('$(B)/client/cl_console.o')
        PsiWhiteSpace(' ')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('.git/index')
        PsiElement(EOL)('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('$(B)/client/common.o')
    PsiElement(DUMMY_BLOCK)
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('.git/index')
        PsiElement(EOL)('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('$(B)/ded/common.o')
        PsiWhiteSpace(' ')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('.git/index')
        PsiElement(EOL)('\n')
        PsiElement(ifneq)('ifneq')
        PsiElement(condition)(' ($(SDK_OBJ_WITH_VERSION_SUPPORT),)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(variable_usage)('$(SDK_OBJ_WITH_VERSION_SUPPORT)')
      PsiElement(DUMMY_BLOCK)
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('.git/index')
        PsiElement(EOL)('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiComment(COMMENT)('# Extra dependencies to ensure sdk diff if included')
        PsiWhiteSpace('\n')
        PsiElement(ifneq)('ifneq')
        PsiElement(condition)(' ($(SDK_DIFF),0)')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('$(B)/client/cl_main.o')
        PsiWhiteSpace(' ')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('build/sdk_diff.h')
      PsiElement(DUMMY_BLOCK)
        PsiElement(EOL)('\n')
        PsiWhiteSpace('  ')
        PsiElement(identifier)('$(B)/client/sys_main.o')
        PsiWhiteSpace(' ')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('build/sdk_diff.h')
        PsiElement(EOL)('\n')
        PsiElement(endif)('endif')
        PsiWhiteSpace('\n\n')
        PsiComment(DOC_COMMENT)('#############################################################################')
        PsiWhiteSpace('\n')
        PsiComment(DOC_COMMENT)('## GAME MODULE RULES')
        PsiWhiteSpace('\n')
        PsiComment(DOC_COMMENT)('#############################################################################')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/$(BASEGAME)/cgame/bg_%.o')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(GDIR)/bg_%.c')
        PsiElement(EOL)('\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_CGAME_CC)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/$(BASEGAME)/cgame/%.o')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(CGDIR)/%.c')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_CGAME_CC)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/$(BASEGAME)/cgame/bg_%.asm')
        PsiElement(:)(':')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(GDIR)/bg_%.c')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(Q3LCC)')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_CGAME_Q3LCC)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/$(BASEGAME)/cgame/%.asm')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(CGDIR)/%.c')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(Q3LCC)')
        PsiElement(EOL)('\n')
      PsiElement(DUMMY_BLOCK)
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_CGAME_Q3LCC)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/$(MISSIONPACK)/cgame/bg_%.o')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(GDIR)/bg_%.c')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_CGAME_CC_MISSIONPACK)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/$(MISSIONPACK)/cgame/%.o')
        PsiElement(:)(':')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(CGDIR)/%.c')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_CGAME_CC_MISSIONPACK)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/$(MISSIONPACK)/cgame/bg_%.asm')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(GDIR)/bg_%.c')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(Q3LCC)')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('$(DO_CGAME_Q3LCC_MISSIONPACK)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/$(MISSIONPACK)/cgame/%.asm')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(CGDIR)/%.c')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(Q3LCC)')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_CGAME_Q3LCC_MISSIONPACK)')
        PsiWhiteSpace('\n\n\n')
        PsiElement(identifier)('$(B)/$(BASEGAME)/game/%.o')
        PsiElement(:)(':')
      PsiElement(DUMMY_BLOCK)
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(GDIR)/%.c')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_GAME_CC)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/$(BASEGAME)/game/%.asm')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(GDIR)/%.c')
        PsiWhiteSpace(' ')
        PsiElement(variable_usage)('$(Q3LCC)')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
      PsiElement(DUMMY_BLOCK)
        PsiElement(line)('$(DO_GAME_Q3LCC)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/$(MISSIONPACK)/game/%.o')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(GDIR)/%.c')
        PsiElement(EOL)('\n')
        PsiElement(\t)('\t')
        PsiElement(line)('$(DO_GAME_CC_MISSIONPACK)')
        PsiWhiteSpace('\n\n')
        PsiElement(identifier)('$(B)/$(MISSIONPACK)/game/%.asm')
        PsiElement(:)(':')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('$(GDIR)/%.c')
  PsiElement(DUMMY_BLOCK)
    PsiElement(DUMMY_BLOCK)
      PsiWhiteSpace(' ')
      PsiElement(variable_usage)('$(Q3LCC)')
      PsiElement(EOL)('\n')
      PsiElement(\t)('\t')
      PsiElement(line)('$(DO_GAME_Q3LCC_MISSIONPACK)')
      PsiWhiteSpace('\n\n\n')
      PsiElement(identifier)('$(B)/$(BASEGAME)/ui/bg_%.o')
      PsiElement(:)(':')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('$(GDIR)/bg_%.c')
      PsiElement(EOL)('\n')
      PsiElement(\t)('\t')
      PsiElement(line)('$(DO_UI_CC)')
    PsiElement(DUMMY_BLOCK)
      PsiWhiteSpace('\n\n')
      PsiElement(identifier)('$(B)/$(BASEGAME)/ui/%.o')
      PsiElement(:)(':')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('$(Q3UIDIR)/%.c')
      PsiElement(EOL)('\n')
      PsiElement(\t)('\t')
      PsiElement(line)('$(DO_UI_CC)')
      PsiWhiteSpace('\n\n')
      PsiElement(identifier)('$(B)/$(BASEGAME)/ui/bg_%.asm')
      PsiElement(:)(':')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('$(GDIR)/bg_%.c')
      PsiWhiteSpace(' ')
      PsiElement(variable_usage)('$(Q3LCC)')
    PsiElement(DUMMY_BLOCK)
      PsiElement(EOL)('\n')
      PsiElement(\t)('\t')
      PsiElement(line)('$(DO_UI_Q3LCC)')
      PsiWhiteSpace('\n\n')
      PsiElement(identifier)('$(B)/$(BASEGAME)/ui/%.asm')
      PsiElement(:)(':')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('$(Q3UIDIR)/%.c')
      PsiWhiteSpace(' ')
      PsiElement(variable_usage)('$(Q3LCC)')
      PsiElement(EOL)('\n')
      PsiElement(\t)('\t')
      PsiElement(line)('$(DO_UI_Q3LCC)')
    PsiElement(DUMMY_BLOCK)
      PsiWhiteSpace('\n\n')
      PsiElement(identifier)('$(B)/$(MISSIONPACK)/ui/bg_%.o')
      PsiElement(:)(':')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('$(GDIR)/bg_%.c')
      PsiElement(EOL)('\n')
      PsiElement(\t)('\t')
      PsiElement(line)('$(DO_UI_CC_MISSIONPACK)')
      PsiWhiteSpace('\n\n')
      PsiElement(identifier)('$(B)/$(MISSIONPACK)/ui/%.o')
      PsiElement(:)(':')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('$(UIDIR)/%.c')
      PsiElement(EOL)('\n')
    PsiElement(DUMMY_BLOCK)
      PsiElement(\t)('\t')
      PsiElement(line)('$(DO_UI_CC_MISSIONPACK)')
      PsiWhiteSpace('\n\n')
      PsiElement(identifier)('$(B)/$(MISSIONPACK)/ui/bg_%.asm')
      PsiElement(:)(':')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('$(GDIR)/bg_%.c')
      PsiWhiteSpace(' ')
      PsiElement(variable_usage)('$(Q3LCC)')
      PsiElement(EOL)('\n')
      PsiElement(\t)('\t')
      PsiElement(line)('$(DO_UI_Q3LCC_MISSIONPACK)')
      PsiWhiteSpace('\n\n')
      PsiElement(identifier)('$(B)/$(MISSIONPACK)/ui/%.asm')
    PsiElement(DUMMY_BLOCK)
      PsiElement(:)(':')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('$(UIDIR)/%.c')
      PsiWhiteSpace(' ')
      PsiElement(variable_usage)('$(Q3LCC)')
      PsiElement(EOL)('\n')
      PsiElement(\t)('\t')
      PsiElement(line)('$(DO_UI_Q3LCC_MISSIONPACK)')
      PsiWhiteSpace('\n\n\n')
      PsiElement(identifier)('$(B)/$(BASEGAME)/qcommon/%.o')
      PsiElement(:)(':')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('$(CMDIR)/%.c')
      PsiElement(EOL)('\n')
    PsiElement(DUMMY_BLOCK)
      PsiElement(\t)('\t')
      PsiElement(line)('$(DO_SHLIB_CC)')
      PsiWhiteSpace('\n\n')
      PsiElement(identifier)('$(B)/$(BASEGAME)/qcommon/%.asm')
      PsiElement(:)(':')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('$(CMDIR)/%.c')
      PsiWhiteSpace(' ')
      PsiElement(variable_usage)('$(Q3LCC)')
      PsiElement(EOL)('\n')
      PsiElement(\t)('\t')
      PsiElement(line)('$(DO_Q3LCC)')
      PsiWhiteSpace('\n\n')
      PsiElement(identifier)('$(B)/$(MISSIONPACK)/qcommon/%.o')
    PsiElement(DUMMY_BLOCK)
      PsiElement(:)(':')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('$(CMDIR)/%.c')
      PsiElement(EOL)('\n')
      PsiElement(\t)('\t')
      PsiElement(line)('$(DO_SHLIB_CC_MISSIONPACK)')
      PsiWhiteSpace('\n\n')
      PsiElement(identifier)('$(B)/$(MISSIONPACK)/qcommon/%.asm')
      PsiElement(:)(':')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('$(CMDIR)/%.c')
      PsiWhiteSpace(' ')
      PsiElement(variable_usage)('$(Q3LCC)')
      PsiElement(EOL)('\n')
    PsiElement(DUMMY_BLOCK)
      PsiElement(\t)('\t')
      PsiElement(line)('$(DO_Q3LCC_MISSIONPACK)')
      PsiWhiteSpace('\n\n\n')
      PsiComment(DOC_COMMENT)('#############################################################################')
      PsiWhiteSpace('\n')
      PsiComment(COMMENT)('# MISC')
      PsiWhiteSpace('\n')
      PsiComment(DOC_COMMENT)('#############################################################################')
      PsiWhiteSpace('\n\n')
      PsiElement(identifier)('OBJ')
      PsiWhiteSpace(' ')
      PsiElement(=)('=')
      PsiElement(line)(' $(Q3OBJ) $(Q3ROBJ) $(Q3R2OBJ) $(Q3DOBJ) $(JPGOBJ) ')
      PsiElement(split)('\\n')
      PsiElement(line)('  $(MPGOBJ) $(Q3GOBJ) $(Q3CGOBJ) $(MPCGOBJ) $(Q3UIOBJ) $(MPUIOBJ) ')
      PsiElement(split)('\\n')
      PsiElement(line)('  $(MPGVMOBJ) $(Q3GVMOBJ) $(Q3CGVMOBJ) $(MPCGVMOBJ) $(Q3UIVMOBJ) $(MPUIVMOBJ)')
      PsiWhiteSpace('\n')
      PsiElement(identifier)('TOOLSOBJ')
    PsiElement(DUMMY_BLOCK)
      PsiWhiteSpace(' ')
      PsiElement(=)('=')
      PsiElement(line)(' $(LBURGOBJ) $(Q3CPPOBJ) $(Q3RCCOBJ) $(Q3LCCOBJ) $(Q3ASMOBJ)')
      PsiWhiteSpace('\n')
      PsiElement(identifier)('STRINGOBJ')
      PsiWhiteSpace(' ')
      PsiElement(=)('=')
      PsiElement(line)(' $(Q3R2STRINGOBJ)')
      PsiWhiteSpace('\n\n\n')
      PsiElement(identifier)('copyfiles')
      PsiElement(:)(':')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('release')
      PsiElement(EOL)('\n')
      PsiElement(ifeq)('ifeq')
  PsiElement(DUMMY_BLOCK)
    PsiElement(DUMMY_BLOCK)
      PsiElement(condition)(' ($(SDK_GAME),)')
      PsiWhiteSpace('\n')
      PsiElement(\t)('\t')
      PsiElement(line)('@if [ ! -d $(COPYDIR)/$(BASEGAME) ]; then echo "You need to set COPYDIR to where your $(BASEGAME) data is!"; fi')
      PsiWhiteSpace('\n')
      PsiElement(else)('else')
      PsiElement(EOL)('\n')
      PsiElement(\t)('\t')
      PsiElement(line)('@if [ ! -d $(COPYDIR)/$(BASEGAME) ]; then echo "You need to set COPYDIR to where your $(SDK_GAME) data is!"; fi')
      PsiWhiteSpace('\n')
      PsiElement(endif)('endif')
      PsiWhiteSpace('\n')
      PsiElement(ifneq)('ifneq')
      PsiElement(condition)(' ($(BUILD_GAME_SO),0)')
    PsiElement(DUMMY_BLOCK)
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiElement(ifneq)('ifneq')
      PsiElement(condition)(' ($(BUILD_BASEGAME),0)')
      PsiWhiteSpace('\n')
      PsiElement(\t)('\t')
      PsiElement(line)('-$(MKDIR) -p -m 0755 $(COPYDIR)/$(BASEGAME)')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiElement(endif)('endif')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiElement(ifneq)('ifneq')
      PsiElement(condition)(' ($(BUILD_MISSIONPACK),0)')
      PsiWhiteSpace('\n')
      PsiElement(\t)('\t')
      PsiElement(line)('-$(MKDIR) -p -m 0755 $(COPYDIR)/$(MISSIONPACK)')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiElement(endif)('endif')
    PsiElement(DUMMY_BLOCK)
      PsiWhiteSpace('\n')
      PsiElement(endif)('endif')
      PsiWhiteSpace('\n\n')
      PsiElement(ifneq)('ifneq')
      PsiElement(condition)(' ($(BUILD_CLIENT),0)')
      PsiWhiteSpace('\n')
      PsiElement(\t)('\t')
      PsiElement(line)('$(INSTALL) $(STRIP_FLAG) -m 0755 $(BR)/$(CLIENTBIN)$(FULLBINEXT) $(COPYBINDIR)/$(CLIENTBIN)$(FULLBINEXT)')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiElement(ifneq)('ifneq')
      PsiElement(condition)(' ($(USE_RENDERER_DLOPEN),0)')
      PsiWhiteSpace('\n')
      PsiElement(\t)('\t')
      PsiElement(line)('$(INSTALL) $(STRIP_FLAG) -m 0755 $(BR)/renderer_opengl1_$(SHLIBNAME) $(COPYBINDIR)/renderer_opengl1_$(SHLIBNAME)')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('    ')
      PsiElement(ifneq)('ifneq')
    PsiElement(DUMMY_BLOCK)
      PsiElement(condition)(' ($(BUILD_RENDERER_OPENGL2),0)')
      PsiWhiteSpace('\n')
      PsiElement(\t)('\t')
      PsiElement(line)('$(INSTALL) $(STRIP_FLAG) -m 0755 $(BR)/renderer_opengl2_$(SHLIBNAME) $(COPYBINDIR)/renderer_opengl2_$(SHLIBNAME)')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('    ')
      PsiElement(endif)('endif')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiElement(else)('else')
      PsiElement(EOL)('\n')
      PsiWhiteSpace('    ')
      PsiElement(ifneq)('ifneq')
      PsiElement(condition)(' ($(BUILD_RENDERER_OPENGL2),0)')
      PsiWhiteSpace('\n')
      PsiElement(\t)('\t')
      PsiElement(line)('$(INSTALL) $(STRIP_FLAG) -m 0755 $(BR)/$(CLIENTBIN)_opengl2$(FULLBINEXT) $(COPYBINDIR)/$(CLIENTBIN)_opengl2$(FULLBINEXT)')
    PsiElement(DUMMY_BLOCK)
      PsiWhiteSpace('\n')
      PsiWhiteSpace('    ')
      PsiElement(endif)('endif')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiElement(endif)('endif')
      PsiWhiteSpace('\n')
      PsiElement(endif)('endif')
      PsiWhiteSpace('\n\n')
      PsiElement(ifneq)('ifneq')
      PsiElement(condition)(' ($(BUILD_SERVER),0)')
      PsiWhiteSpace('\n')
      PsiElement(\t)('\t')
      PsiElement(line)('@if [ -f $(BR)/$(SERVERBIN)$(FULLBINEXT) ]; then ')
      PsiElement(split)('\\n')
      PsiElement(line)('\t\t$(INSTALL) $(STRIP_FLAG) -m 0755 $(BR)/$(SERVERBIN)$(FULLBINEXT) $(COPYBINDIR)/$(SERVERBIN)$(FULLBINEXT); ')
      PsiElement(split)('\\n')
    PsiElement(DUMMY_BLOCK)
      PsiElement(line)('\tfi')
      PsiWhiteSpace('\n')
      PsiElement(endif)('endif')
      PsiWhiteSpace('\n\n')
      PsiElement(ifneq)('ifneq')
      PsiElement(condition)(' ($(BUILD_GAME_SO),0)')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiElement(ifneq)('ifneq')
      PsiElement(condition)(' ($(BUILD_BASEGAME),0)')
      PsiWhiteSpace('\n')
      PsiElement(\t)('\t')
      PsiElement(line)('$(INSTALL) $(STRIP_FLAG) -m 0755 $(BR)/$(BASEGAME)/cgame$(SHLIBNAME) ')
      PsiElement(split)('\\n')
      PsiElement(line)('\t\t\t\t\t$(COPYDIR)/$(BASEGAME)/.')
    PsiElement(DUMMY_BLOCK)
      PsiWhiteSpace('\n')
      PsiElement(\t)('\t')
      PsiElement(line)('$(INSTALL) $(STRIP_FLAG) -m 0755 $(BR)/$(BASEGAME)/qagame$(SHLIBNAME) ')
      PsiElement(split)('\\n')
      PsiElement(line)('\t\t\t\t\t$(COPYDIR)/$(BASEGAME)/.')
      PsiWhiteSpace('\n')
      PsiElement(\t)('\t')
      PsiElement(line)('$(INSTALL) $(STRIP_FLAG) -m 0755 $(BR)/$(BASEGAME)/ui$(SHLIBNAME) ')
      PsiElement(split)('\\n')
      PsiElement(line)('\t\t\t\t\t$(COPYDIR)/$(BASEGAME)/.')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiElement(endif)('endif')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiElement(ifneq)('ifneq')
    PsiElement(DUMMY_BLOCK)
      PsiElement(condition)(' ($(BUILD_MISSIONPACK),0)')
      PsiWhiteSpace('\n')
      PsiElement(\t)('\t')
      PsiElement(line)('$(INSTALL) $(STRIP_FLAG) -m 0755 $(BR)/$(MISSIONPACK)/cgame$(SHLIBNAME) ')
      PsiElement(split)('\\n')
      PsiElement(line)('\t\t\t\t\t$(COPYDIR)/$(MISSIONPACK)/.')
      PsiWhiteSpace('\n')
      PsiElement(\t)('\t')
      PsiElement(line)('$(INSTALL) $(STRIP_FLAG) -m 0755 $(BR)/$(MISSIONPACK)/qagame$(SHLIBNAME) ')
      PsiElement(split)('\\n')
      PsiElement(line)('\t\t\t\t\t$(COPYDIR)/$(MISSIONPACK)/.')
      PsiWhiteSpace('\n')
      PsiElement(\t)('\t')
    PsiElement(DUMMY_BLOCK)
      PsiElement(line)('$(INSTALL) $(STRIP_FLAG) -m 0755 $(BR)/$(MISSIONPACK)/ui$(SHLIBNAME) ')
      PsiElement(split)('\\n')
      PsiElement(line)('\t\t\t\t\t$(COPYDIR)/$(MISSIONPACK)/.')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiElement(endif)('endif')
      PsiWhiteSpace('\n')
      PsiElement(endif)('endif')
      PsiWhiteSpace('\n\n')
      PsiElement(identifier)('clean')
      PsiElement(:)(':')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('clean-debug')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('clean-release')
      PsiElement(EOL)('\n')
    PsiElement(DUMMY_BLOCK)
      PsiElement(ifeq)('ifeq')
      PsiElement(condition)(' ($(PLATFORM),mingw32)')
      PsiWhiteSpace('\n')
      PsiComment(COMMENT)('# Don't build nsis for Smokin' Guns until it is supported')
      PsiWhiteSpace('\n')
      PsiComment(COMMENT)('#\t@$(MAKE) -C $(NSISDIR) clean')
      PsiWhiteSpace('\n')
      PsiElement(else)('else')
      PsiElement(EOL)('\n')
      PsiComment(COMMENT)('# Don't build lokisetup for Smokin' Guns until it is supported')
      PsiWhiteSpace('\n')
      PsiComment(COMMENT)('#\t@$(MAKE) -C $(LOKISETUPDIR) clean')
      PsiWhiteSpace('\n')
      PsiElement(endif)('endif')
      PsiWhiteSpace('\n\n')
      PsiElement(identifier)('clean-debug')
      PsiElement(:)(':')
      PsiElement(EOL)('\n')
      PsiElement(\t)('\t')
      PsiElement(line)('@$(MAKE) clean2 B=$(BD)')
  PsiElement(DUMMY_BLOCK)
    PsiElement(DUMMY_BLOCK)
      PsiWhiteSpace('\n\n')
      PsiElement(identifier)('clean-release')
      PsiElement(:)(':')
      PsiElement(EOL)('\n')
      PsiElement(\t)('\t')
      PsiElement(line)('@$(MAKE) clean2 B=$(BR)')
      PsiWhiteSpace('\n\n')
      PsiElement(identifier)('clean2')
      PsiElement(:)(':')
      PsiElement(EOL)('\n')
      PsiElement(\t)('\t')
      PsiElement(line)('@echo "CLEAN $(B)"')
    PsiElement(DUMMY_BLOCK)
      PsiWhiteSpace('\n')
      PsiElement(\t)('\t')
      PsiElement(line)('@rm -f $(OBJ)')
      PsiWhiteSpace('\n')
      PsiElement(\t)('\t')
      PsiElement(line)('@rm -f $(OBJ_D_FILES)')
      PsiWhiteSpace('\n')
      PsiElement(\t)('\t')
      PsiElement(line)('@rm -f $(STRINGOBJ)')
      PsiWhiteSpace('\n')
      PsiElement(\t)('\t')
      PsiElement(line)('@rm -f $(TARGETS)')
      PsiWhiteSpace('\n\n')
      PsiElement(identifier)('toolsclean')
      PsiElement(:)(':')
    PsiElement(DUMMY_BLOCK)
      PsiWhiteSpace(' ')
      PsiElement(identifier)('toolsclean-debug')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('toolsclean-release')
      PsiElement(EOL)('\n\n')
      PsiElement(identifier)('toolsclean-debug')
      PsiElement(:)(':')
      PsiElement(EOL)('\n')
      PsiElement(\t)('\t')
      PsiElement(line)('@$(MAKE) toolsclean2 B=$(BD)')
      PsiWhiteSpace('\n\n')
      PsiElement(identifier)('toolsclean-release')
      PsiElement(:)(':')
    PsiElement(DUMMY_BLOCK)
      PsiElement(EOL)('\n')
      PsiElement(\t)('\t')
      PsiElement(line)('@$(MAKE) toolsclean2 B=$(BR)')
      PsiWhiteSpace('\n\n')
      PsiElement(identifier)('toolsclean2')
      PsiElement(:)(':')
      PsiElement(EOL)('\n')
      PsiElement(\t)('\t')
      PsiElement(line)('@echo "TOOLS_CLEAN $(B)"')
      PsiWhiteSpace('\n')
      PsiElement(\t)('\t')
      PsiElement(line)('@rm -f $(TOOLSOBJ)')
    PsiElement(DUMMY_BLOCK)
      PsiWhiteSpace('\n')
      PsiElement(\t)('\t')
      PsiElement(line)('@rm -f $(TOOLSOBJ_D_FILES)')
      PsiWhiteSpace('\n')
      PsiElement(\t)('\t')
      PsiElement(line)('@rm -f $(LBURG) $(DAGCHECK_C) $(Q3RCC) $(Q3CPP) $(Q3LCC) $(Q3ASM)')
      PsiWhiteSpace('\n\n')
      PsiElement(identifier)('distclean')
      PsiElement(:)(':')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('clean')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('toolsclean')
      PsiElement(EOL)('\n')
      PsiElement(\t)('\t')
    PsiElement(DUMMY_BLOCK)
      PsiElement(line)('@rm -rf $(BUILD_DIR)')
      PsiWhiteSpace('\n\n')
      PsiElement(identifier)('installer')
      PsiElement(:)(':')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('release')
      PsiElement(EOL)('\n')
      PsiElement(ifeq)('ifeq')
      PsiElement(condition)(' ($(PLATFORM),mingw32)')
      PsiWhiteSpace('\n')
      PsiElement(\t)('\t')
      PsiElement(line)('@$(MAKE) VERSION=$(VERSION) -C $(NSISDIR) V=$(V) ')
      PsiElement(split)('\\n')
    PsiElement(DUMMY_BLOCK)
      PsiElement(line)('\t\tSDLDLL=$(SDLDLL) ')
      PsiElement(split)('\\n')
      PsiElement(line)('\t\tUSE_RENDERER_DLOPEN=$(USE_RENDERER_DLOPEN) ')
      PsiElement(split)('\\n')
      PsiElement(line)('\t\tUSE_OPENAL_DLOPEN=$(USE_OPENAL_DLOPEN) ')
      PsiElement(split)('\\n')
      PsiElement(line)('\t\tUSE_CURL_DLOPEN=$(USE_CURL_DLOPEN) ')
      PsiElement(split)('\\n')
      PsiElement(line)('\t\tUSE_INTERNAL_OPUS=$(USE_INTERNAL_OPUS) ')
      PsiElement(split)('\\n')
    PsiElement(DUMMY_BLOCK)
      PsiElement(line)('\t\tUSE_INTERNAL_SPEEX=$(USE_INTERNAL_SPEEX) ')
      PsiElement(split)('\\n')
      PsiElement(line)('\t\tUSE_INTERNAL_ZLIB=$(USE_INTERNAL_ZLIB) ')
      PsiElement(split)('\\n')
      PsiElement(line)('\t\tUSE_INTERNAL_JPEG=$(USE_INTERNAL_JPEG)')
      PsiWhiteSpace('\n')
      PsiElement(else)('else')
      PsiElement(EOL)('\n')
      PsiElement(\t)('\t')
      PsiElement(line)('@if [ -d "$(LOKISETUPDIR)" ]; then $(MAKE) VERSION=$(VERSION) -C $(LOKISETUPDIR) V=$(V) ; fi')
      PsiWhiteSpace('\n')
      PsiElement(endif)('endif')
    PsiElement(DUMMY_BLOCK)
      PsiWhiteSpace('\n\n')
      PsiElement(identifier)('dist')
      PsiElement(:)(':')
      PsiElement(EOL)('\n')
      PsiElement(\t)('\t')
      PsiElement(line)('git archive --format zip --output $(CLIENTBIN)-$(VERSION).zip HEAD')
      PsiWhiteSpace('\n\n')
      PsiComment(DOC_COMMENT)('#############################################################################')
      PsiWhiteSpace('\n')
      PsiComment(COMMENT)('# DEPENDENCIES')
      PsiWhiteSpace('\n')
      PsiComment(DOC_COMMENT)('#############################################################################')
      PsiWhiteSpace('\n\n')
      PsiElement(ifneq)('ifneq')
      PsiElement(condition)(' ($(B),)')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiElement(identifier)('OBJ_D_FILES')
      PsiElement(=)('=')
      PsiElement(line)('$(filter %.d,$(OBJ:%.o=%.d))')
    PsiElement(DUMMY_BLOCK)
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiElement(identifier)('TOOLSOBJ_D_FILES')
      PsiElement(=)('=')
      PsiElement(line)('$(filter %.d,$(TOOLSOBJ:%.o=%.d))')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      PsiElement(include)('-include')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('$(OBJ_D_FILES)')
      PsiWhiteSpace(' ')
      PsiElement(identifier)('$(TOOLSOBJ_D_FILES)')
      PsiElement(EOL)('\n')
      PsiElement(endif)('endif')
      PsiWhiteSpace('\n\n')
      PsiElement(identifier)('.PHONY')
      PsiElement(:)(':')
  PsiElement(DUMMY_BLOCK)
    PsiWhiteSpace(' ')
    PsiElement(identifier)('all')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('clean')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('clean2')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('clean-debug')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('clean-release')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('copyfiles')
    PsiWhiteSpace(' ')
    PsiElement(split)('\\n')
    PsiWhiteSpace('\t')
    PsiElement(identifier)('debug')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('default')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('dist')
  PsiElement(DUMMY_BLOCK)
    PsiWhiteSpace(' ')
    PsiElement(identifier)('distclean')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('installer')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('makedirs')
    PsiWhiteSpace(' ')
    PsiElement(split)('\\n')
    PsiWhiteSpace('\t')
    PsiElement(identifier)('release')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('targets')
    PsiWhiteSpace(' ')
    PsiElement(split)('\\n')
    PsiWhiteSpace('\t')
    PsiElement(identifier)('toolsclean')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('toolsclean2')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('toolsclean-debug')
  PsiElement(DUMMY_BLOCK)
    PsiWhiteSpace(' ')
    PsiElement(identifier)('toolsclean-release')
    PsiWhiteSpace(' ')
    PsiElement(split)('\\n')
    PsiWhiteSpace('\t')
    PsiElement(variable_usage)('$(OBJ_D_FILES)')
    PsiWhiteSpace(' ')
    PsiElement(variable_usage)('$(TOOLSOBJ_D_FILES)')
    PsiElement(EOL)('\n\n')
    PsiComment(COMMENT)('# If the target name contains "clean", don't do a parallel build')
    PsiWhiteSpace('\n')
    PsiElement(ifneq)('ifneq')
    PsiElement(condition)(' ($(findstring clean, $(MAKECMDGOALS)),)')
    PsiWhiteSpace('\n')
    PsiElement(identifier)('.NOTPARALLEL')
    PsiElement(:)(':')
    PsiElement(EOL)('\n')
  PsiElement(endif)('endif')